{"version":3,"sources":["webpack:///./src/FcarrascosaSlider.js","webpack:///./src/FcarrascosaSliderSlide.js","webpack:///./index.js"],"names":["FcarrascosaSlider","LitElement","is","properties","currentSlide","type","Number","latestSelectedSlide","totalAmountOfSlides","time","value","interval","Function","constructor","super","this","querySelectorAll","length","connectedCallback","console","warn","goToSlide","initSlider","setInterval","goToNextSlide","bind","pauseSlider","clearInterval","targetSlide","goToPreviousSlide","selectSlide","slideToSelect","forEach","slide","index","setAttribute","styles","css","_templateObject","render","html","_templateObject2","FcarrascosaSliderSlide","getAttribute","Error","captionAlignment","selected","Boolean","caption","String","image","alt","renderCaption","FcarrascosaSliderSlide_templateObject","FcarrascosaSliderSlide_templateObject2","_templateObject3","customElements","define"],"mappings":"8hBAMe,MAAMA,UAA0BC,IAC7CC,gBAAkB,MAAO,qBAEzBC,wBACE,MAAO,CAILC,aAAc,CACZC,KAAMC,QAKRC,oBAAqB,CACnBF,KAAMC,QAKRE,oBAAqB,CACnBH,KAAMC,QAMRG,KAAM,CACJJ,KAAMC,OACNI,MAAO,GAGTC,SAAU,CACRN,KAAMO,WAKZC,cACEC,QACAC,KAAKX,aAAe,EACpBW,KAAKR,oBAAsB,KAC3BQ,KAAKP,oBAAsBO,KAAKC,iBAAiB,4BAA4BC,OAG/EC,oBACEJ,MAAMI,oBAC2B,IAA7BH,KAAKP,oBAEPW,QAAQC,KAAK,oCAEbL,KAAKN,KAAOM,KAAKN,MAAQ,EACzBM,KAAKM,UAAU,GACfN,KAAKO,cAITA,aACEP,KAAKJ,SAAWY,YAAYR,KAAKS,cAAcC,KAAKV,MAAmB,IAAZA,KAAKN,MAGlEiB,cACEC,cAAcZ,KAAKJ,UACnBI,KAAKJ,SAAW,KAMlBa,gBACE,MAAMI,EAAcb,KAAKP,oBAAsB,IAAMO,KAAKX,aACtD,EACAW,KAAKX,aAAe,EACxBW,KAAKM,UAAUO,GAMjBC,oBACE,MAAMD,EAAoC,IAAtBb,KAAKX,aACrBW,KAAKP,oBAAsB,EAC3BO,KAAKX,aAAe,EACxBW,KAAKM,UAAUO,GAOjBP,UAAUO,GACRb,KAAKR,oBAAsBQ,KAAKX,aAChCW,KAAKe,YAAYF,GAOnBE,YAAYC,GACVhB,KAAKC,iBAAiB,4BAA4BgB,QAAQ,CAACC,EAAOC,KAChED,EAAME,aAAa,WAAYD,IAAUH,KAE3ChB,KAAKX,aAAe2B,EAGtBK,oBACE,OAAOC,YAAPC,KAkBFC,SACE,OAAOC,YAAPC,k2BC/HW,MAAMC,UAA+BzC,IAClDC,gBAAkB,MAAO,2BAEzBW,cAEE,GADAC,SACKC,KAAK4B,aAAa,SAAU,MAAM,IAAIC,MAAM,gCAC7C7B,KAAK4B,aAAa,aACpB5B,KAAK8B,iBAAmB9B,KAAK4B,aAAa,sBAAwB,UAItExC,wBACE,MAAO,CACL2C,SAAU,CACRzC,KAAM0C,SAERC,QAAS,CACP3C,KAAM4C,QAERC,MAAO,CACL7C,KAAM4C,QAERE,IAAK,CACH9C,KAAM4C,QAERJ,iBAAkB,CAChBxC,KAAM4C,SAKZG,gBACE,OAAOrC,KAAKiC,QACRR,YADGa,IAC2BtC,KAAK8B,iBAAqB9B,KAAKiC,SAC7D,GAGNZ,oBACE,OAAOC,YAAPiB,KAiDFf,SACE,OAAOC,YAAPe,IACgBxC,KAAKmC,MAAenC,KAAKiC,SAAWjC,KAAKoC,IAAepC,KAAKiC,SAAWjC,KAAKoC,IACvFpC,KAAKqC,kBC5FfI,eAAeC,OAAOzD,EAAkBE,GAAIF,GAC5CwD,eAAeC,OAAOf,EAAuBxC,GAAIwC","file":"4.1756c533d22720457725.js","sourcesContent":["import { LitElement, html, css } from 'lit-element';\n\n/**\n * @customElement\n * @demo demo/index.html\n */\nexport default class FcarrascosaSlider extends LitElement {\n  static get is() { return 'fcarrascosa-slider'; }\n\n  static get properties() {\n    return {\n      /**\n       * The index of the current Slide shown in the slider.\n       */\n      currentSlide: {\n        type: Number,\n      },\n      /**\n       * The index of the latest Slide shown in the slider.\n       */\n      latestSelectedSlide: {\n        type: Number,\n      },\n      /**\n       * The amount of slides.\n       */\n      totalAmountOfSlides: {\n        type: Number,\n      },\n\n      /**\n       * The time (in seconds) each slide will be displayed.\n       */\n      time: {\n        type: Number,\n        value: 4,\n      },\n\n      interval: {\n        type: Function,\n      },\n    };\n  }\n\n  constructor() {\n    super();\n    this.currentSlide = 0;\n    this.latestSelectedSlide = null;\n    this.totalAmountOfSlides = this.querySelectorAll('fcarrascosa-slider-slide').length;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.totalAmountOfSlides === 0) {\n      // eslint-disable-next-line no-console\n      console.warn('slider does not have any slides');\n    } else {\n      this.time = this.time || 4;\n      this.goToSlide(0);\n      this.initSlider();\n    }\n  }\n\n  initSlider() {\n    this.interval = setInterval(this.goToNextSlide.bind(this), this.time * 1000);\n  }\n\n  pauseSlider() {\n    clearInterval(this.interval);\n    this.interval = null;\n  }\n\n  /**\n   * Selects the next slide. If it's called from last slide, selects the first.\n   */\n  goToNextSlide() {\n    const targetSlide = this.totalAmountOfSlides - 1 === this.currentSlide\n      ? 0\n      : this.currentSlide + 1;\n    this.goToSlide(targetSlide);\n  }\n\n  /**\n   * Selects the previous slide. If it's called from first slide, selects the last.\n   */\n  goToPreviousSlide() {\n    const targetSlide = this.currentSlide === 0\n      ? this.totalAmountOfSlides - 1\n      : this.currentSlide - 1;\n    this.goToSlide(targetSlide);\n  }\n\n  /**\n   * Sets the latestSelectedSlide and selects the currentSlide\n   * @param targetSlide\n   */\n  goToSlide(targetSlide) {\n    this.latestSelectedSlide = this.currentSlide;\n    this.selectSlide(targetSlide);\n  }\n\n  /**\n   * Selects the currentSlide\n   * @param slideToSelect\n   */\n  selectSlide(slideToSelect) {\n    this.querySelectorAll('fcarrascosa-slider-slide').forEach((slide, index) => {\n      slide.setAttribute('selected', index === slideToSelect);\n    });\n    this.currentSlide = slideToSelect;\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        box-sizing: content-box;\n        display: block;\n        transition: all .5s ease-in-out;\n        position: relative;\n        overflow: hidden;\n      }\n      \n      ::slotted(fcarrascosa-slider-slide) {\n        left: 0;\n        position: relative;\n        top: 0;\n        width: 100%;\n      }\n    `;\n  }\n\n  render() {\n    return html`\n            <slot></slot>\n        `;\n  }\n}\n","import { LitElement, html, css } from 'lit-element';\n\n/**\n * @customElement\n */\nexport default class FcarrascosaSliderSlide extends LitElement {\n  static get is() { return 'fcarrascosa-slider-slide'; }\n\n  constructor() {\n    super();\n    if (!this.getAttribute('image')) throw new Error('Element should have an image');\n    if (this.getAttribute('caption')) {\n      this.captionAlignment = this.getAttribute('caption-alignment') || 'center';\n    }\n  }\n\n  static get properties() {\n    return {\n      selected: {\n        type: Boolean,\n      },\n      caption: {\n        type: String,\n      },\n      image: {\n        type: String,\n      },\n      alt: {\n        type: String,\n      },\n      captionAlignment: {\n        type: String,\n      },\n    };\n  }\n\n  renderCaption() {\n    return this.caption\n      ? html`<div><p caption-align=\"${this.captionAlignment}\">${this.caption}</p></div>`\n      : '';\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: block;\n        height: 0;\n        opacity: 0;\n        position: relative;\n        transition: opacity 1.5s ease-in-out;\n        width: 100%;\n      }\n      \n      :host([selected=\"true\"]) {\n        height: auto;\n        opacity: 1;\n      }\n      \n      img {\n        display: block;\n        width: 100%;\n      }\n      p {\n        bottom: 20px;\n        box-sizing: border-box;\n        left: 0;\n        opacity: 0;\n        padding: 0 20px;\n        position: absolute;\n        transition: opacity 1.5s ease-in-out;\n        width: 100%;\n      }\n      \n      p[caption-align=\"right\"] {\n        text-align: right;\n      }\n      \n      p[caption-align=\"center\"] {\n        text-align: center;\n      }\n      \n      p[caption-align=\"left\"] {\n        padding: 0 20px;\n        text-align: left;\n      }\n      \n      :host([selected=\"true\"]) p {\n        opacity: 1;\n      }\n    `;\n  }\n\n  render() {\n    return html`\n        <img src=\"${this.image}\" alt=\"${this.caption || this.alt}\" title=\"${this.caption || this.alt}\">\n        ${this.renderCaption()}      \n        `;\n  }\n}\n","import FcarrascosaSlider from './src/FcarrascosaSlider';\nimport FcarrascosaSliderSlide from './src/FcarrascosaSliderSlide';\n\ncustomElements.define(FcarrascosaSlider.is, FcarrascosaSlider);\ncustomElements.define(FcarrascosaSliderSlide.is, FcarrascosaSliderSlide);\n"],"sourceRoot":""}