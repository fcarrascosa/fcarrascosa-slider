{"version":3,"sources":["webpack:///./node_modules/@webcomponents/shadydom/src/shady-data.js","webpack:///./node_modules/@webcomponents/shadydom/src/utils.js","webpack:///./node_modules/@webcomponents/shadydom/src/flush.js","webpack:///./node_modules/@webcomponents/shadydom/src/observe-changes.js","webpack:///./node_modules/@webcomponents/shadydom/src/innerHTML.js","webpack:///./node_modules/@webcomponents/shadydom/src/patch-native.js","webpack:///./node_modules/@webcomponents/shadydom/src/patch-instances.js","webpack:///./node_modules/@webcomponents/shadydom/src/patch-events.js","webpack:///./node_modules/@webcomponents/shadydom/src/array-splice.js","webpack:///./node_modules/@webcomponents/shadydom/src/link-nodes.js","webpack:///./node_modules/@webcomponents/shadydom/src/style-scoping.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/Node.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/ParentNode.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/DocumentOrFragment.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/DocumentOrShadowRoot.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/ElementOrShadowRoot.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/ShadowRoot.js","webpack:///./node_modules/@webcomponents/shadydom/src/patch-shadyRoot.js","webpack:///./node_modules/@webcomponents/shadydom/src/attach-shadow.js","webpack:///./node_modules/@webcomponents/shadydom/src/wrapper.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/EventTarget.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/Slotable.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/Element.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/HTMLElement.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/Slot.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/Document.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/Window.js","webpack:///./node_modules/@webcomponents/shadydom/src/patch-prototypes.js","webpack:///./node_modules/@webcomponents/shadydom/src/shadydom.js","webpack:///./node_modules/@webcomponents/shadycss/src/css-parse.js","webpack:///./node_modules/@webcomponents/shadycss/src/style-settings.js","webpack:///./node_modules/@webcomponents/shadycss/src/common-regex.js","webpack:///./node_modules/@webcomponents/shadycss/src/unscoped-style-handler.js","webpack:///./node_modules/@webcomponents/shadycss/src/style-util.js","webpack:///./node_modules/@webcomponents/shadycss/src/style-transformer.js","webpack:///./node_modules/@webcomponents/shadycss/src/style-info.js","webpack:///./node_modules/@webcomponents/shadycss/src/style-properties.js","webpack:///./node_modules/@webcomponents/shadycss/src/style-placeholder.js","webpack:///./node_modules/@webcomponents/shadycss/src/document-watcher.js","webpack:///./node_modules/@webcomponents/shadycss/src/template-map.js","webpack:///./node_modules/@webcomponents/shadycss/src/apply-shim-utils.js","webpack:///./node_modules/@webcomponents/shadycss/src/document-wait.js","webpack:///./node_modules/@webcomponents/shadycss/src/custom-style-interface.js","webpack:///./node_modules/@webcomponents/shadycss/src/scoping-shim.js","webpack:///./node_modules/@webcomponents/shadycss/src/style-cache.js","webpack:///./node_modules/@webcomponents/shadycss/src/common-utils.js","webpack:///./node_modules/@webcomponents/shadycss/entrypoints/scoping-shim.js","webpack:///./node_modules/@webcomponents/custom-elements/src/Utilities.js","webpack:///./node_modules/@webcomponents/custom-elements/src/CustomElementState.js","webpack:///./node_modules/@webcomponents/custom-elements/src/CustomElementInternals.js","webpack:///./node_modules/@webcomponents/custom-elements/src/DocumentConstructionObserver.js","webpack:///./node_modules/@webcomponents/custom-elements/src/Deferred.js","webpack:///./node_modules/@webcomponents/custom-elements/src/CustomElementRegistry.js","webpack:///./node_modules/@webcomponents/custom-elements/src/Patch/Native.js","webpack:///./node_modules/@webcomponents/custom-elements/src/AlreadyConstructedMarker.js","webpack:///./node_modules/@webcomponents/custom-elements/src/Patch/Interface/ParentNode.js","webpack:///./node_modules/@webcomponents/custom-elements/src/custom-elements.js","webpack:///./node_modules/@webcomponents/custom-elements/src/Patch/HTMLElement.js","webpack:///./node_modules/@webcomponents/custom-elements/src/Patch/Document.js","webpack:///./node_modules/@webcomponents/custom-elements/src/Patch/DocumentFragment.js","webpack:///./node_modules/@webcomponents/custom-elements/src/Patch/Node.js","webpack:///./node_modules/@webcomponents/custom-elements/src/Patch/Element.js","webpack:///./node_modules/@webcomponents/custom-elements/src/Patch/Interface/ChildNode.js"],"names":["ShadyData","toJSON","ensureShadyDataForNode","node","__shady","shadyDataForNode","settings","window","hasNativeShadowDOM","Boolean","Element","prototype","attachShadow","Node","getRootNode","desc","Object","getOwnPropertyDescriptor","hasDescriptors","configurable","get","inUse","noPatch","preferPerformance","IS_IE","navigator","userAgent","match","isTrackingLogicalChildNodes","nodeData","undefined","firstChild","isShadyRoot","obj","_localName","hasShadowRootWithSlot","root","_hasInsertionPoint","p","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","element","selector","call","twiddle","document","createTextNode","content","queue","MutationObserver","length","shift","e","textContent","observe","characterData","microtask","callback","push","hasDocumentContains","contains","container","SHADY_PREFIX","getNodeHTMLCollectionName","getAttribute","isValidHTMLCollectionName","name","isNaN","createPolyfilledHTMLCollection","nodes","l","item","index","namedItem","NATIVE_PREFIX","nativeChildNodesArray","parent","result","n","childNodesArray","patchProperties","proto","descriptors","prefix","arguments","disallowedPatches","newDescriptor","indexOf","value","defineProperty","getOwnPropertyDescriptors","HTMLElement","getOwnPropertyNames","forEach","scheduled","flushList","enqueue","utils","flush","didFlush","AsyncObserver","constructor","this","_scheduled","addedNodes","removedNodes","callbacks","Set","schedule","mutations","takeRecords","cb","observeChildren","sd","observer","add","_callback","_observer","_node","unobserveChildren","handle","delete","size","escapeAttrRegExp","escapeDataRegExp","escapeReplace","c","escapeAttr","s","replace","makeSet","arr","set","i","voidElements","plaintextParents","getOuterHTML","parentNode","nodeType","ELEMENT_NODE","tagName","localName","attrs","attributes","attr","getInnerHTML","TEXT_NODE","data","COMMENT_NODE","console","error","Error","c$","childNodes","child","nativeMethods","querySelector","querySelectorAll","nativeTree","installNativeAccessor","installNativeMethod","fn","defineNativeAccessors","prop","copyProperties","list","descriptor","nodeWalker","createTreeWalker","NodeFilter","SHOW_ALL","elementWalker","SHOW_ELEMENT","inertDoc","implementation","createHTMLDocument","clearNode","ParentNodeAccessors","ParentNodeMethods","addNativePrefixedProperties","eventProps","EventTarget","Window","currentNode","lastChild","previousSibling","nextSibling","parentElement","DOCUMENT_FRAGMENT_NODE","textWalker","SHOW_TEXT","nextNode","nodeValue","ParentNodeWalkerDescriptors","firstElementChild","lastElementChild","children","childElementCount","previousElementSibling","nextElementSibling","innerHTML","containerName","htmlContainer","namespaceURI","createElementNS","createElement","newContent","className","setAttribute","HTMLTemplateElement","DocumentFragment","Document","InsideDescriptors","shadowRoot","TextContentInnerHTMLDescriptors","OutsideDescriptors","enumerable","noInstancePatching","patchOutsideElementAccessors","__outsideAccessors","patchInsideElementAccessors","__insideAccessors","eventWrappersName","concat","Date","now","composedGetter","composedProp","Event","ev","supportsEventOptions","supported","eventOptions","capture","listener","addEventListener","removeEventListener","parseEventOptions","optionsOrCapture","once","passive","shadyTarget","__shadyTarget","nativeEventOptions","alwaysComposed","blur","focus","focusin","focusout","click","dblclick","mousedown","mouseenter","mouseleave","mousemove","mouseout","mouseover","mouseup","wheel","beforeinput","input","keydown","keyup","compositionstart","compositionupdate","compositionend","touchstart","touchend","touchmove","touchcancel","pointerover","pointerenter","pointerdown","pointermove","pointerup","pointercancel","pointerout","pointerleave","gotpointercapture","lostpointercapture","dragstart","drag","dragenter","dragleave","dragover","drop","dragend","DOMActivate","DOMFocusIn","DOMFocusOut","keypress","unpatchedEvents","DOMAttrModified","DOMAttributeNameChanged","DOMCharacterDataModified","DOMElementNameChanged","DOMNodeInserted","DOMNodeInsertedIntoDocument","DOMNodeRemoved","DOMNodeRemovedFromDocument","DOMSubtreeModified","getRootNodeWithFallback","eventTarget","pathComposer","startNode","composed","composedPath","current","startRoot","host","event","__composedPath","target","retarget","refNode","path","refNodePath","p$","ancestor","lastRoot","rootIdx","mixinComposedFlag","Base","klazz","type","options","__composed","__proto__","nonBubblingEventsToRetarget","hasRetargeted","__relatedTarget","relatedTarget","fireHandlers","phase","hs","__handlers","__immediatePropagationStopped","retargetNonBubblingEvent","lastFiredRoot","__propagationStopped","AT_TARGET","listenerSettingsEqual","savedListener","savedNode","savedType","savedCapture","savedOnce","savedPassive","findListener","wrappers","fnOrObj","handlerType","handleEvent","wrapperFn","lastCurrentTargetDesc","patchEvent","eventPhase","BUBBLING_PHASE","stopImmediatePropagation","CAPTURING_PHASE","bubbles","ret","bubble","eventLike","getEventWrappers","idx","splice","EventPatchesDescriptors","isTrusted","currentTarget","__relatedTargetComposedPath","stopPropagation","SHADY_PROTO","SHADY_SOURCE_PROTO","getPrototypeOf","hasOwnProperty","patchedProto","create","PatchedEvent","PatchedCustomEvent","CustomEvent","PatchedMouseEvent","MouseEvent","eventPropertyNames","filter","substring","newSplice","removed","addedCount","EDIT_LEAVE","EDIT_UPDATE","EDIT_ADD","EDIT_DELETE","calcSplices","currentStart","currentEnd","old","oldStart","oldEnd","prefixCount","suffixCount","minLength","Math","min","searchLength","equals","sharedPrefix","index1","index2","count","sharedSuffix","ops","distances","j","edits","northWest","west","north","reverse","spliceOperationsFromEditDistances","rowCount","columnCount","Array","calcEditDistances","splices","oldIndex","currentValue","previousValue","linkNode","containerData","ref_node","ref_nodeData","psd","nsd","recordChildNodes","adoptedParent","first","previous","scopingShim","getScopingShim","removeShadyScoping","currentScopeName","replaceShadyScoping","newScopeName","oldScopeName","addShadyScoping","currentScopeForNode","treeVisitor","visitorFn","doc","nativeIsConnectedAccessors","nativeIsConnected","removeOwnerShadyRoot","ownerShadyRoot","hasCachedOwnerRoot","scheduleObserver","addedNode","removedNode","NodePatches","isConnected","ownerDocument","documentElement","tc","join","insertBefore","refData","slotsAdded","ownerRoot","ownerShadyRootForNode","skipUnscoping","allowNativeInsert","needsScoping","currentScopeIsCorrect","correctScope","needsSlotFinding","_addSlots","_asyncRender","recordInsertBefore","parentData","firstComposedNode","flattened","flattenedNodes","adoptNode","appendChild","removeChild","preventNativeRemove","removingInsertionPoint","_removeContainedSlots","recordRemoveChild","changeSlotContent","replaceChild","cloneNode","deep","ATTRIBUTE_NODE","nc","query","matcher","halter","queryChildNodes","queryElement","ParentNodePatches","QueryPatches","useNative","o","slice","ParentNodeDocumentOrFragmentPatches","assign","DocumentOrFragmentPatches","getElementById","id","DocumentOrShadowRootPatches","activeElement","active","activeRoot","ElementOrShadowRootPatches","ShadowRootPatches","patchShadyAccessors","ShadyRootConstructionToken","CATCHALL_NAME","SHADYROOT_NAME","MODE_CLOSED","rootRendered","isRendering","readyState","ancestorList","ancestors","unshift","ShadyRoot","token","TypeError","_renderPending","_hasRendered","_slotList","_slotMap","_pendingSlots","_init","mode","hostData","publicRoot","rootData","_render","_getPendingDistributionRoot","renderRoot","_getDistributionParent","__childSlotCount","_renderSelf","_flushInitial","wasRendering","_distribute","_compose","assignedSlot","_validateSlots","slot","_clearSlotAssignedNodes","_distributeNodeToSlot","slotData","assignedNodes","slotParentData","slotParentRoot","_addAssignedToFlattenedNodes","prevAssignedNodes","_previouslyAssignedNodes","_prevAssignedSlot","dirty","_fireSlotChange","forcedSlot","oldSlot","n$","assigned","nestedAssigned","slots","composeList","targetNode","_updateChildNodes","_composeNode","_isInsertionPoint","distributedNode","d","next","_ensureSlotData","_mapSlots","slotNamesToSort","slotParent","_nameForSlot","_sortSlots","__slotName","sort","a","b","listA","listB","nA","nB","didRemove","map","x","_removeFlattenedNodes","_updateSlotName","oldName","defineProperties","nodeName","ShadowRoot","connectMap","Map","r","v","k","clear","ManageConnect","base","connected","disconnected","counter","connectFlag","connectedCallback","disconnectedCallback","originalDefine","define","customElements","Wrapper","dispatchEvent","hasAttribute","removeAttribute","DOCUMENT_NODE","_activeElement","importNode","wrapperMap","WeakMap","EventTargetPatches","SlotablePatches","distributeAttributeChange","ElementPatches","scopeClassAttribute","HTMLElementPatches","shadowActive","property","shadyData","eventName","__onCallbackListeners","SlotPatches","flatten","DocumentPatches","WindowPatches","bind","NonStandardHTMLElement","ElementShouldHaveInnerHTML","patchMap","Text","HTMLSlotElement","getPatchPrototype","disallowedNativePatches","applyPatches","disallowed","patch","ShadyDOM","flushInitial","filterMutations","targetRootNode","mutation","mutationInScope","from","m","deferConnectionCallbacks","handlesDynamicScoping","wrap","wrapper","addShadyPrefixedProperties","composedClickFn","cancelable","patchClick","activateFocusEventOverrides","StyleNode","parse","text","parseCss","t","trim","ss","code","repeat","_expandUnicodeEscapes","RX","multipleSpaces","lastIndexOf","AT_START","MEDIA_START","types","MEDIA_RULE","keyframesRule","KEYFRAMES_RULE","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","OPEN_BRACE","CLOSE_BRACE","lex","comments","port","stringify","preserveProperties","cssText","rules","_hasMixinRules","mixinApply","varApply","removeCustomPropApply","removeCustomPropAssignment","removeCustomProps","customProp","mixinProp","nativeShadow","nativeCssVariables_","cssBuild","calcCssVariables","CSS","supports","ShadyCSS","disableRuntime","nativeCss","nativeCssVariables","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","MEDIA_MATCH","BRACKETED","HOST_PREFIX","HOST_SUFFIX","styleTextSet","scopingAttribute","processUnscopedStyle","style","has","newStyle","head","isUnscopedStyle","toCssText","forEachRule","rulesForStyle","isKeyframesSelector","rule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","matchMedia","applyCss","moniker","contextNode","createScopeStyle","applyStyle","lastHeadApplyNode","after","compareDocumentPosition","DOCUMENT_POSITION_PRECEDING","findMatchingParen","start","level","setElementClassRaw","getIsExtends","is","typeExtension","extends","splitSelectorList","parts","part","end","CSS_BUILD_ATTR","getCssBuild","__cssBuild","attrValue","buildComment","Comment","commentParts","getBuildComment","removeBuildComment","elementHasBuiltCss","isOptimalCssBuild","SCOPE_NAME","NTH","SCOPE_DOC_SELECTOR","COMPLEX_SELECTOR_SEP","SIMPLE_SELECTOR_SEP","SIMPLE_SELECTOR_PREFIX","HOST","ROOT","SLOTTED","SLOTTED_START","RegExp","HOST_PAREN","SLOTTED_PAREN","DIR_PAREN","CSS_CLASS_PREFIX","PSEUDO_PREFIX","CLASS","SELECTOR_NO_MATCH","MATCHES","MATCHES_REPLACEMENT","style_transformer","dom","scope","shouldRemoveScope","_transformDom","domAddScope","transformer","template","_content","classList","remove","StyleUtil","domReplaceScope","oldScope","newScope","domRemoveScope","elementStyles","styleRules","css","ext","hostScope","_calcHostScope","_calcElementScope","self","isScoped","_transformRule","_transformComplexSelector","transformedSelector","_transformRuleCss","_twiddleNthPlus","inside","_preserveMatchesPseudo","_replaceMatchesPseudo","reduce","acc","cur","stop","isNth","test","inner","isMatches","info","_transformCompoundSelector","combinator","before","dir","slottedIndex","_transformHostSelector","_transformSimpleSelector","slotted","paren","output","documentRule","normalizeRootSelector","_transformDocumentSelector","infoKey","StyleInfo","[object Object]","styleInfo","ast","placeholder","ownStylePropertyNames","elementName","overrideStyleProperties","styleProperties","scopeSelector","customStyle","_getStyleRules","method","XSCOPE_NAME","style_properties","decorateStyles","props","keyframes","ruleIndex","decorateRule","collectPropertiesInCssText","propertyInfo","_keyframes","names","properties","collectProperties","collectCssText","any","rx","exec","collectConsumingCssText","reify","valueForProperty","valueForProperties","processVariableAndFallback","str","suffix","comma","fallback","propertyValue","lastIndex","colon","pp","applyProperties","applyKeyframeTransforms","keyframeTransforms","hasAnimations","transform","keyframeNamesToTransform","keyframe","propertyDataFromStyles","selectorToMatch","bits","parseInt","addToBitMask","key","whenHostOrRootRule","StyleTransformer","parsedSelector","isRoot","isHost","hostAndRootPropertiesForScope","hostProps","rootProps","_element","transformStyles","hostSelector","rxHostSelector","hostRx","_elementKeyframeTransforms","_scopeSelector","keyframesRules","_scopeKeyframes","_keyframesRuleTransformer","keyframesNameRx","transformedKeyframesName","scopeId","applyElementScopeSelector","applyElementStyle","applyCustomStyle","placeholderMap","getStylePlaceholder","ensureStylePlaceholder","placeHolder","createComment","applyStylePlaceHolder","ce","origDefine","wrappedDefine","clazz","scopeRegExp","getCurrentScope","getClasses","getOwnerScope","ensureCorrectSubtreeScoping","unscopedNodes","unscopedNode","scopeForPreviouslyUnscopedNode","handler","mxns","mxn","currentScope","el","childList","subtree","delayedStart","body","requestAnimationFrame","templateMap","CURRENT_VERSION","NEXT_VERSION","VALIDATING_VERSION","promise","Promise","resolve","invalidate","invalidateTemplate","templateIsValid","templateIsValidating","startValidatingTemplate","_validating","then","resolveFn","readyPromise","whenReady","documentWait","SEEN_MARKER","CACHED_STYLE","transformFn","validateFn","CustomStyleInterface","enqueueDocumentValidation","addCustomStyle","getStyleForCustomStyle","processStyles","cs","styleToTransform","transformCallback","validateCallback","needsEnqueue","adoptedCssTextMap","styleCache","typeMax","cache","_validate","cacheEntry","ownPropertyNames","pn","store","tagname","styleElement","fetch","entry","ScopingShim","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","_elementsHaveApplied","_applyShim","_customStyleInterface","watcherFlush","_generateScopeSelector","getStyleAst","styleAstToString","_gatherStyles","styleTextParts","styles","prepareTemplate","prepareTemplateDom","prepareTemplateStyles","_prepared","optimalBuild","_ensure","hasMixins","detectMixin","StyleProperties","_generateStaticStyle","_style","_ownPropertyNames","prepareAdoptedCssText","cssTextArray","_domPrepared","shadowroot","_prepareHost","_ensureApplyShim","ApplyShim","ApplyShimUtils","_ensureCustomStyleInterface","transformCustomStyleForDocument","flushCustomStyles","customStyles","_revalidateCustomStyleApplyShim","_updateProperties","_applyCustomStyles","styleDocument","overrideProps","_mixOverrideStyleProps","styleElementNativeVariables","_isRootOwner","styleElementShimVariables","_applyStyleProperties","removeProperty","setProperty","updateNativeProperties","_styleOwnerForNode","cachedScopeSelector","cachedStyle","oldScopeSelector","owner","ownerStyleInfo","ownerProperties","hostAndRootProps","propertiesMatchingHost","_mixinOverrideStyles","overrides","styleSubtree","wrappedHost","shadowChildren","_revalidateApplyShim","getComputedStyleValue","getComputedStyle","getPropertyValue","setElementClass","classString","classes","scopeName","classAttr","k$","_styleInfoForNode","scopeNode","unscopeNode","scopeForNode","elementExtends","reservedTagList","isValidCustomElementName","reserved","validForm","nativeValue","__CE_isImportDocument","nextSiblingOrAncestorSibling","walkDeepDescendantElements","visitedImports","import","__CE_shadowRoot","setPropertyUnchecked","destination","CustomElementState","custom","failed","CustomElementInternals","_localNameToDefinition","_constructorToDefinition","_patchesNode","_patchesElement","_hasPatches","setDefinition","definition","constructorFunction","localNameToDefinition","constructorToDefinition","addNodePatch","addElementPatch","patchTree","Utilities","patchElement","patchNode","__CE_patched","connectTree","elements","__CE_state","CEState","upgradeElement","disconnectTree","patchAndUpgradeTree","upgrade","__CE_hasRegistry","__CE_documentLoadHandled","clonedVisitedImports","defaultView","constructionStack","__CE_definition","attributeChangedCallback","observedAttributes","oldValue","newValue","namespace","DocumentConstructionObserver","internals","_internals","_document","_handleMutations","disconnect","Deferred","_value","_resolve","_promise","toPromise","CustomElementRegistry","_elementDefinitionIsRunning","_whenDefinedDeferred","_flushCallback","_flushPending","_pendingDefinitions","_documentConstructionObserver","Function","SyntaxError","adoptedCallback","getCallback","callbackValue","_flush","pendingDefinitions","elementsWithStableDefinitions","elementsWithPendingDefinitions","pendingElements","pendingUpgradableElements","deferred","whenDefined","reject","prior","some","polyfillWrapFlushCallback","outer","Native","Document_createElement","Document_createElementNS","Document_importNode","Document_prepend","Document_append","DocumentFragment_prepend","DocumentFragment_append","Node_cloneNode","Node_appendChild","Node_insertBefore","Node_removeChild","Node_replaceChild","Node_textContent","Element_attachShadow","Element_innerHTML","Element_getAttribute","Element_setAttribute","Element_removeAttribute","Element_getAttributeNS","getAttributeNS","Element_setAttributeNS","setAttributeNS","Element_removeAttributeNS","removeAttributeNS","Element_insertAdjacentElement","Element_insertAdjacentHTML","Element_prepend","Element_append","Element_before","Element_after","Element_replaceWith","Element_remove","HTMLElement_innerHTML","HTMLElement_insertAdjacentElement","HTMLElement_insertAdjacentHTML","src_AlreadyConstructedMarker","ParentNode","builtIn","appendPrependPatch","builtInMethod","connectedElements","_len","_key","apply","prepend","append","priorCustomElements","setPrototypeOf","AlreadyConstructedMarker","toConstructElement","writable","PatchHTMLElement","clone","PatchParentNode","PatchDocument","PatchDocumentFragment","patch_textContent","baseDescriptor","assignedValue","childNodesLength","insertedNodes","nativeResult","nodeWasConnected","nodeToInsert","nodeToRemove","nodeToInsertWasConnected","thisIsConnected","childNode","PatchNode","patch_innerHTML","htmlString","removedElements","patch_insertAdjacentElement","baseMethod","position","wasConnected","insertedElement","patch_insertAdjacentHTML","upgradeNodesInRange","toLowerCase","marker","String","init","isTemplate","rawElement","warn","beforeAfterPatch","replaceWith","_len2","_key2","PatchChildNode","PatchElement"],"mappings":"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","file":"0.c2e71b62e85a949dc07f.js","sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\nexport class ShadyData {\n\n  /** @override */\n  toJSON() {\n    return {};\n  }\n}\n\nexport function ensureShadyDataForNode(node) {\n  if (!node.__shady) {\n    node.__shady = new ShadyData();\n  }\n  return node.__shady;\n}\n\nexport function shadyDataForNode(node) {\n  return node && node.__shady;\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport {shadyDataForNode} from './shady-data.js';\n\n/** @type {!Object} */\nexport const settings = window['ShadyDOM'] || {};\n\nsettings.hasNativeShadowDOM = Boolean(Element.prototype.attachShadow && Node.prototype.getRootNode);\n\nconst desc = Object.getOwnPropertyDescriptor(Node.prototype, 'firstChild');\n\nsettings.hasDescriptors = Boolean(desc && desc.configurable && desc.get);\nsettings.inUse = settings['force'] || !settings.hasNativeShadowDOM;\nsettings.noPatch = settings['noPatch'] || false;\nsettings.preferPerformance = settings['preferPerformance'];\n\nconst IS_IE = navigator.userAgent.match('Trident');\nsettings.IS_IE = IS_IE;\n\nexport const canUpgrade = () => !settings.IS_IE;\n\nexport const isTrackingLogicalChildNodes = (node) => {\n  const nodeData = shadyDataForNode(node);\n  return (nodeData && nodeData.firstChild !== undefined);\n}\n\nexport const isShadyRoot = (obj) => {\n  return Boolean(obj._localName === 'ShadyRoot');\n}\n\nexport const hasShadowRootWithSlot = (node) => {\n  const nodeData = shadyDataForNode(node);\n  let root = nodeData && nodeData.root;\n  return (root && root._hasInsertionPoint());\n}\n\nlet p = Element.prototype;\nlet matches = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nexport const matchesSelector = (element, selector) => {\n  return matches.call(element, selector);\n}\n\nexport const mixin = (target, source) => {\n  for (var i in source) {\n    target[i] = source[i];\n  }\n  return target;\n}\n\n// NOTE, prefer MutationObserver over Promise for microtask timing\n// for consistency x-platform.\nlet twiddle = document.createTextNode('');\nlet content = 0;\nlet queue = [];\nnew MutationObserver(() => {\n  while (queue.length) {\n    // catch errors in user code...\n    try {\n      queue.shift()();\n    } catch(e) {\n      // enqueue another record and throw\n      twiddle.textContent = content++;\n      throw(e);\n    }\n  }\n}).observe(twiddle, {characterData: true});\n\n// use MutationObserver to get microtask async timing.\nexport const microtask = (callback) => {\n  queue.push(callback);\n  twiddle.textContent = content++;\n}\n\nexport const hasDocumentContains = Boolean(document.contains);\n\nexport const contains = (container, node) => {\n  while (node) {\n    if (node == container) {\n      return true;\n    }\n    node = node[SHADY_PREFIX + 'parentNode'];\n  }\n  return false;\n}\n\nconst getNodeHTMLCollectionName = (node) =>\n    node.getAttribute('id') || node.getAttribute('name');\n\nconst isValidHTMLCollectionName = (name) => name !== 'length' && isNaN(name);\n\nexport const createPolyfilledHTMLCollection = (nodes) => {\n  // Note: loop in reverse so that the first named item matches the named property\n  for (let l = nodes.length - 1; l >= 0; l--) {\n    const node = nodes[l];\n    const name = getNodeHTMLCollectionName(node);\n\n    if (name && isValidHTMLCollectionName(name)) {\n      nodes[name] = node;\n    }\n  }\n  nodes.item = function(index) {\n    return nodes[index];\n  }\n  nodes.namedItem = function(name) {\n    if (isValidHTMLCollectionName(name) && nodes[name]) {\n      return nodes[name];\n    }\n\n    for (const node of nodes) {\n      const nodeName = getNodeHTMLCollectionName(node);\n\n      if (nodeName == name) {\n        return node;\n      }\n    }\n\n    return null;\n  };\n  return nodes;\n}\n\nexport const NATIVE_PREFIX = '__shady_native_';\nexport const SHADY_PREFIX = '__shady_';\n\nexport const nativeChildNodesArray = (parent) => {\n  const result = [];\n  for (let n=parent[NATIVE_PREFIX + 'firstChild']; n; n = n[NATIVE_PREFIX + 'nextSibling']) {\n    result.push(n);\n  }\n  return result;\n}\n\nexport const childNodesArray = (parent) => {\n  const result = [];\n  for (let n=parent[SHADY_PREFIX + 'firstChild']; n; n = n[SHADY_PREFIX + 'nextSibling']) {\n    result.push(n);\n  }\n  return result;\n}\n\n/**\n * Patch a group of accessors on an object only if it exists or if the `force`\n * argument is true.\n * @param {!Object} proto\n * @param {!Object} descriptors\n * @param {string=} prefix\n * @param {Array=} disallowedPatches\n */\nexport const patchProperties = (proto, descriptors, prefix = '', disallowedPatches) => {\n  for (let p in descriptors) {\n    const newDescriptor = descriptors[p];\n    if (disallowedPatches && disallowedPatches.indexOf(p) >= 0) {\n      continue;\n    }\n    newDescriptor.configurable = true;\n    const name = prefix + p;\n    // NOTE: we prefer writing directly because some browsers\n    // have descriptors that are writable but not configurable (e.g.\n    // `appendChild` on older browsers)\n    if (newDescriptor.value) {\n      proto[name] = newDescriptor.value;\n    } else {\n      // NOTE: this can throw if 'force' is used so catch the error.\n      try {\n        Object.defineProperty(proto, name, newDescriptor);\n      } catch(e) {\n        // this error is harmless so we just trap it.\n      }\n    }\n  }\n}\n\n/** @type {!function(new:HTMLElement)} */\nexport const NativeHTMLElement =\n    (window['customElements'] && window['customElements']['nativeHTMLElement']) ||\n    HTMLElement;\n\n// note, this is not a perfect polyfill since it doesn't include symbols\n/** @return {!Object<!ObjectPropertyDescriptor>} */\nexport const getOwnPropertyDescriptors = (obj) => {\n  const descriptors = {};\n  Object.getOwnPropertyNames(obj).forEach((name) => {\n    descriptors[name] = Object.getOwnPropertyDescriptor(obj, name);\n  });\n  return descriptors;\n};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\n\n// render enqueuer/flusher\nlet flushList = [];\nlet scheduled;\nexport function enqueue(callback) {\n  if (!scheduled) {\n    scheduled = true;\n    utils.microtask(flush);\n  }\n  flushList.push(callback);\n}\n\nexport function flush() {\n  scheduled = false;\n  let didFlush = Boolean(flushList.length);\n  while (flushList.length) {\n    flushList.shift()();\n  }\n  return didFlush;\n}\n\nflush['list'] = flushList;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {ensureShadyDataForNode} from './shady-data.js';\n\nclass AsyncObserver {\n\n  constructor() {\n    this._scheduled = false;\n    this.addedNodes = [];\n    this.removedNodes = [];\n    this.callbacks = new Set();\n  }\n\n  schedule() {\n    if (!this._scheduled) {\n      this._scheduled = true;\n      utils.microtask(() => {\n        this.flush();\n      });\n    }\n  }\n\n  flush() {\n    if (this._scheduled) {\n      this._scheduled = false;\n      let mutations = this.takeRecords();\n      if (mutations.length) {\n        this.callbacks.forEach(function(cb) {\n          cb(mutations);\n        });\n      }\n    }\n  }\n\n  takeRecords() {\n    if (this.addedNodes.length || this.removedNodes.length) {\n      let mutations = [{\n        addedNodes: this.addedNodes,\n        removedNodes: this.removedNodes\n      }];\n      this.addedNodes = [];\n      this.removedNodes = [];\n      return mutations;\n    }\n    return [];\n  }\n\n}\n\n// TODO(sorvell): consider instead polyfilling MutationObserver\n// directly so that users do not have to fork their code.\n// Supporting the entire api may be challenging: e.g. filtering out\n// removed nodes in the wrong scope and seeing non-distributing\n// subtree child mutations.\nexport let observeChildren = function(node, callback) {\n  const sd = ensureShadyDataForNode(node);\n  if (!sd.observer) {\n    sd.observer = new AsyncObserver();\n  }\n  sd.observer.callbacks.add(callback);\n  let observer = sd.observer;\n  return {\n    _callback: callback,\n    _observer: observer,\n    _node: node,\n    takeRecords() {\n      return observer.takeRecords()\n    }\n  };\n}\n\nexport let unobserveChildren = function(handle) {\n  let observer = handle && handle._observer;\n  if (observer) {\n    observer.callbacks.delete(handle._callback);\n    if (!observer.callbacks.size) {\n      ensureShadyDataForNode(handle._node).observer = null;\n    }\n  }\n}\n\nexport function filterMutations(mutations, target) {\n  /** @const {Node} */\n  const targetRootNode = target.getRootNode();\n  return mutations.map(function(mutation) {\n    /** @const {boolean} */\n    const mutationInScope = (targetRootNode === mutation.target.getRootNode());\n    if (mutationInScope && mutation.addedNodes) {\n      let nodes = Array.from(mutation.addedNodes).filter(function(n) {\n        return (targetRootNode === n.getRootNode());\n      });\n      if (nodes.length) {\n        mutation = Object.create(mutation);\n        Object.defineProperty(mutation, 'addedNodes', {\n          value: nodes,\n          configurable: true\n        });\n        return mutation;\n      }\n    } else if (mutationInScope) {\n      return mutation;\n    }\n  }).filter(function(m) { return m});\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n// Cribbed from ShadowDOM polyfill\n// https://github.com/webcomponents/webcomponentsjs/blob/master/src/ShadowDOM/wrappers/HTMLElement.js#L28\n/////////////////////////////////////////////////////////////////////////////\n// innerHTML and outerHTML\n\n// http://www.whatwg.org/specs/web-apps/current-work/multipage/the-end.html#escapingString\nlet escapeAttrRegExp = /[&\\u00A0\"]/g;\nlet escapeDataRegExp = /[&\\u00A0<>]/g;\n\nfunction escapeReplace(c) {\n  switch (c) {\n    case '&':\n      return '&amp;';\n    case '<':\n      return '&lt;';\n    case '>':\n      return '&gt;';\n    case '\"':\n      return '&quot;';\n    case '\\u00A0':\n      return '&nbsp;';\n  }\n}\n\nfunction escapeAttr(s) {\n  return s.replace(escapeAttrRegExp, escapeReplace);\n}\n\nfunction escapeData(s) {\n  return s.replace(escapeDataRegExp, escapeReplace);\n}\n\nfunction makeSet(arr) {\n  let set = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n// http://www.whatwg.org/specs/web-apps/current-work/#void-elements\nlet voidElements = makeSet([\n  'area',\n  'base',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]);\n\nlet plaintextParents = makeSet([\n  'style',\n  'script',\n  'xmp',\n  'iframe',\n  'noembed',\n  'noframes',\n  'plaintext',\n  'noscript'\n]);\n\n/**\n * @param {Node} node\n * @param {Node} parentNode\n * @param {Function=} callback\n */\nexport function getOuterHTML(node, parentNode, callback) {\n  switch (node.nodeType) {\n    case Node.ELEMENT_NODE: {\n      let tagName = node.localName;\n      let s = '<' + tagName;\n      let attrs = node.attributes;\n      for (let i = 0, attr; (attr = attrs[i]); i++) {\n        s += ' ' + attr.name + '=\"' + escapeAttr(attr.value) + '\"';\n      }\n      s += '>';\n      if (voidElements[tagName]) {\n        return s;\n      }\n      return s + getInnerHTML(node, callback) + '</' + tagName + '>';\n    }\n    case Node.TEXT_NODE: {\n      let data = /** @type {Text} */ (node).data;\n      if (parentNode && plaintextParents[parentNode.localName]) {\n        return data;\n      }\n      return escapeData(data);\n    }\n    case Node.COMMENT_NODE: {\n      return '<!--' + /** @type {Comment} */ (node).data + '-->';\n    }\n    default: {\n      window.console.error(node);\n      throw new Error('not implemented');\n    }\n  }\n}\n\n/**\n * @param {Node} node\n * @param {Function=} callback\n */\nexport function getInnerHTML(node, callback) {\n  if (node.localName === 'template') {\n    node =  /** @type {HTMLTemplateElement} */ (node).content;\n  }\n  let s = '';\n  let c$ = callback ? callback(node) : node.childNodes;\n  for (let i=0, l=c$.length, child; (i<l) && (child=c$[i]); i++) {\n    s += getOuterHTML(child, node, callback);\n  }\n  return s;\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport * as utils from './utils.js';\nimport {patchProperties} from './utils.js';\nimport {getInnerHTML} from './innerHTML.js';\n\nconst hasDescriptors = utils.settings.hasDescriptors;\nexport const NATIVE_PREFIX = utils.NATIVE_PREFIX;\n\n// Object on which raw native methods are stored.\n// e.g. `nativeMethods.querySelector.call(node, selector)`\n// same as `node.querySelector(selector)`\nexport const nativeMethods = {\n  /** @this {Element} */\n  querySelector(selector) {\n    return this[NATIVE_PREFIX + 'querySelector'](selector);\n  },\n  /** @this {Element} */\n  querySelectorAll(selector) {\n    return this[NATIVE_PREFIX + 'querySelectorAll'](selector);\n  }\n};\n// Object on which raw native accessors are available via `accessorName(node)`.\n// e.g. `nativeTree.firstChild(node)`\n// same as `node.firstChild`\nexport const nativeTree = {};\n\nconst installNativeAccessor = (name) => {\n  nativeTree[name] = (node) => node[NATIVE_PREFIX + name];\n}\n\nconst installNativeMethod = (name, fn) => {\n  if (!nativeMethods[name]) {\n    nativeMethods[name] = fn;\n  }\n}\n\n\nconst defineNativeAccessors = (proto, descriptors) => {\n  patchProperties(proto, descriptors, NATIVE_PREFIX);\n  // make native accessors available to users\n  for (let prop in descriptors) {\n    installNativeAccessor(prop);\n  }\n}\n\nconst copyProperties = (proto, list = []) => {\n  for (let i = 0; i < list.length; i++) {\n    const name = list[i];\n    const descriptor = Object.getOwnPropertyDescriptor(proto, name);\n    if (descriptor) {\n      Object.defineProperty(proto, NATIVE_PREFIX + name, descriptor);\n      // make native methods/accessors available to users\n      if (descriptor.value) {\n        installNativeMethod(name, descriptor.value);\n      } else {\n        installNativeAccessor(name);\n      }\n    }\n  }\n}\n\n/** @type {!TreeWalker} */\nconst nodeWalker = document.createTreeWalker(document, NodeFilter.SHOW_ALL,\n  null, false);\n\n/** @type {!TreeWalker} */\nconst elementWalker = document.createTreeWalker(document, NodeFilter.SHOW_ELEMENT,\n  null, false);\n\n/** @type {!Document} */\nconst inertDoc = document.implementation.createHTMLDocument('inert');\n\nconst clearNode = node => {\n  let firstChild;\n  while ((firstChild = node[NATIVE_PREFIX + 'firstChild'])) {\n    node[NATIVE_PREFIX + 'removeChild'](firstChild);\n  }\n}\n\nconst ParentNodeAccessors = [\n  'firstElementChild',\n  'lastElementChild',\n  'children',\n  'childElementCount',\n];\n\nconst ParentNodeMethods = [\n  'querySelector',\n  'querySelectorAll'\n  // 'append', 'prepend'\n];\n\nexport const addNativePrefixedProperties = () => {\n\n  // EventTarget\n  const eventProps = [\n    'dispatchEvent',\n    'addEventListener',\n    'removeEventListener'\n  ];\n  if (window.EventTarget) {\n    copyProperties(window.EventTarget.prototype, eventProps);\n  } else {\n    copyProperties(Node.prototype, eventProps);\n    copyProperties(Window.prototype, eventProps);\n  }\n\n\n  // Node\n  if (hasDescriptors) {\n    copyProperties(Node.prototype, [\n      'parentNode',\n      'firstChild',\n      'lastChild',\n      'previousSibling',\n      'nextSibling',\n      'childNodes',\n      'parentElement',\n      'textContent',\n    ]);\n  } else {\n    defineNativeAccessors(Node.prototype, {\n      parentNode: {\n        /** @this {Node} */\n        get() {\n          nodeWalker.currentNode = this;\n          return nodeWalker.parentNode();\n        }\n      },\n      firstChild: {\n        /** @this {Node} */\n        get() {\n          nodeWalker.currentNode = this;\n          return nodeWalker.firstChild();\n        }\n      },\n      lastChild: {\n        /** @this {Node} */\n        get() {\n          nodeWalker.currentNode = this;\n          return nodeWalker.lastChild();\n        }\n\n      },\n      previousSibling: {\n        /** @this {Node} */\n        get() {\n          nodeWalker.currentNode = this;\n          return nodeWalker.previousSibling();\n        }\n      },\n      nextSibling: {\n        /** @this {Node} */\n        get() {\n          nodeWalker.currentNode = this;\n          return nodeWalker.nextSibling();\n        }\n      },\n      // TODO(sorvell): make this a NodeList or whatever\n      childNodes: {\n        /** @this {Node} */\n        get() {\n          const nodes = [];\n          nodeWalker.currentNode = this;\n          let n = nodeWalker.firstChild();\n          while (n) {\n            nodes.push(n);\n            n = nodeWalker.nextSibling();\n          }\n          return nodes;\n        }\n      },\n      parentElement: {\n        /** @this {Node} */\n        get() {\n          elementWalker.currentNode = this;\n          return elementWalker.parentNode();\n        }\n      },\n      textContent: {\n        /** @this {Node} */\n        get() {\n          /* eslint-disable no-case-declarations */\n          switch (this.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n              // TODO(sorvell): This cannot be a single TreeWalker that's reused\n              // at least for Safari 9, but it's unclear why.\n              const textWalker = document.createTreeWalker(this, NodeFilter.SHOW_TEXT,\n                null, false);\n              let content = '', n;\n              while ( (n = textWalker.nextNode()) ) {\n                // TODO(sorvell): can't use textContent since we patch it on Node.prototype!\n                // However, should probably patch it only on element.\n                content += n.nodeValue;\n              }\n              return content;\n            default:\n              return this.nodeValue;\n          }\n        },\n        // Needed on browsers that do not proper accessors (e.g. old versions of Chrome)\n        /** @this {Node} */\n        set(value) {\n          if (typeof value === 'undefined' || value === null) {\n            value = ''\n          }\n          switch (this.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n              clearNode(this);\n              // Document fragments must have no childnodes if setting a blank string\n              if (value.length > 0 || this.nodeType === Node.ELEMENT_NODE) {\n                // Note: old Chrome versions require 2nd argument here\n                this[NATIVE_PREFIX + 'insertBefore'](document.createTextNode(value), undefined);\n              }\n              break;\n            default:\n              // TODO(sorvell): can't do this if patch nodeValue.\n              this.nodeValue = value;\n              break;\n          }\n        }\n      }\n    });\n  }\n\n  copyProperties(Node.prototype, [\n    'appendChild',\n    'insertBefore',\n    'removeChild',\n    'replaceChild',\n    'cloneNode',\n    'contains'\n  ]);\n\n  // NOTE, on some browsers IE 11 / Edge 15 some properties are incorrectly on HTMLElement\n  copyProperties(HTMLElement.prototype, [\n    'parentElement',\n    'contains'\n  ]);\n\n  const ParentNodeWalkerDescriptors = {\n    firstElementChild: {\n      /** @this {ParentNode} */\n      get() {\n        elementWalker.currentNode = this;\n        return elementWalker.firstChild();\n      }\n    },\n    lastElementChild: {\n      /** @this {ParentNode} */\n      get() {\n        elementWalker.currentNode = this;\n        return elementWalker.lastChild();\n      }\n    },\n    children: {\n      /** @this {ParentNode} */\n      get() {\n        let nodes = [];\n        elementWalker.currentNode = this;\n        let n = elementWalker.firstChild();\n        while (n) {\n          nodes.push(n);\n          n = elementWalker.nextSibling();\n        }\n        return utils.createPolyfilledHTMLCollection(nodes);\n      }\n    },\n    childElementCount: {\n      /** @this {ParentNode} */\n      get() {\n        if (this.children) {\n          return this.children.length;\n        }\n        return 0;\n      }\n    }\n  };\n\n  // Element\n  if (hasDescriptors) {\n    copyProperties(Element.prototype, ParentNodeAccessors);\n\n    copyProperties(Element.prototype, [\n      'previousElementSibling',\n      'nextElementSibling',\n      'innerHTML',\n      'className'\n    ]);\n\n    // NOTE, on some browsers IE 11 / Edge 15 some properties are incorrectly on HTMLElement\n    copyProperties(HTMLElement.prototype, [\n      'children',\n      'innerHTML',\n      'className'\n    ]);\n  } else {\n    defineNativeAccessors(Element.prototype, ParentNodeWalkerDescriptors);\n    defineNativeAccessors(Element.prototype, {\n      previousElementSibling: {\n        /** @this {Element} */\n        get() {\n          elementWalker.currentNode = this;\n          return elementWalker.previousSibling();\n        }\n      },\n      nextElementSibling: {\n        /** @this {Element} */\n        get() {\n          elementWalker.currentNode = this;\n          return elementWalker.nextSibling();\n        }\n      },\n      innerHTML: {\n        /** @this {Element} */\n        get() {\n          return getInnerHTML(this, utils.nativeChildNodesArray);\n        },\n        // Needed on browsers that do not proper accessors (e.g. old versions of Chrome)\n        /** @this {Element} */\n        set(value) {\n          const content = this.localName === 'template' ?\n          /** @type {HTMLTemplateElement} */(this).content : this;\n          clearNode(content);\n          const containerName = this.localName || 'div';\n          let htmlContainer;\n          if (!this.namespaceURI || this.namespaceURI === inertDoc.namespaceURI) {\n            htmlContainer = inertDoc.createElement(containerName);\n          } else {\n            htmlContainer = inertDoc.createElementNS(this.namespaceURI, containerName);\n          }\n          htmlContainer.innerHTML = value;\n          const newContent = this.localName === 'template' ?\n            /** @type {HTMLTemplateElement} */(htmlContainer).content : htmlContainer;\n          let firstChild;\n          while ((firstChild = newContent[NATIVE_PREFIX + 'firstChild'])) {\n            // Note: old Chrome versions require 2nd argument here\n            content[NATIVE_PREFIX + 'insertBefore'](firstChild, undefined);\n          }\n        }\n      },\n      className: {\n        /** @this {Element} */\n        get() {\n          return this.getAttribute('class') || '';\n        },\n        /** @this {Element} */\n        set(value) {\n          this.setAttribute('class', value);\n        }\n      }\n    });\n  }\n\n  copyProperties(Element.prototype, [\n    'setAttribute',\n    'getAttribute',\n    'hasAttribute',\n    'removeAttribute',\n    // on older Safari, these are on Element.\n    'focus',\n    'blur',\n  ]);\n  copyProperties(Element.prototype, ParentNodeMethods);\n\n  // HTMLElement\n  copyProperties(HTMLElement.prototype, [\n    'focus',\n    'blur'\n  ]);\n\n  // HTMLTemplateElement\n  if (window.HTMLTemplateElement) {\n    copyProperties(window.HTMLTemplateElement.prototype, ['innerHTML']);\n  }\n\n  // DocumentFragment\n  if (hasDescriptors) {\n    // NOTE, IE 11 does not have on DocumentFragment\n    // firstElementChild\n    // lastElementChild\n    copyProperties(DocumentFragment.prototype, ParentNodeAccessors);\n  } else {\n    defineNativeAccessors(DocumentFragment.prototype, ParentNodeWalkerDescriptors);\n  }\n\n  copyProperties(DocumentFragment.prototype, ParentNodeMethods);\n\n  // Document\n  if (hasDescriptors) {\n    copyProperties(Document.prototype, ParentNodeAccessors);\n    copyProperties(Document.prototype, [\n      'activeElement'\n    ]);\n  } else {\n    defineNativeAccessors(Document.prototype, ParentNodeWalkerDescriptors);\n  }\n\n  copyProperties(Document.prototype, [\n    'importNode',\n    'getElementById'\n  ]);\n  copyProperties(Document.prototype, ParentNodeMethods);\n\n};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {ensureShadyDataForNode} from './shady-data.js';\n\nexport const InsideDescriptors = utils.getOwnPropertyDescriptors({\n\n  /** @this {Node} */\n  get childNodes() {\n    return this[utils.SHADY_PREFIX + 'childNodes'];\n  },\n\n  /** @this {Node} */\n  get firstChild() {\n    return this[utils.SHADY_PREFIX + 'firstChild'];\n  },\n\n  /** @this {Node} */\n  get lastChild() {\n    return this[utils.SHADY_PREFIX + 'lastChild'];\n  },\n\n  /** @this {Node} */\n  get childElementCount() {\n    return this[utils.SHADY_PREFIX + 'childElementCount'];\n  },\n\n  /** @this {Node} */\n  get children() {\n    return this[utils.SHADY_PREFIX + 'children'];\n  },\n\n  /** @this {Node} */\n  get firstElementChild() {\n    return this[utils.SHADY_PREFIX + 'firstElementChild'];\n  },\n\n  /** @this {Node} */\n  get lastElementChild() {\n    return this[utils.SHADY_PREFIX + 'lastElementChild'];\n  },\n\n  /** @this {Node} */\n  get shadowRoot() {\n    return this[utils.SHADY_PREFIX + 'shadowRoot'];\n  },\n\n});\n\nexport const TextContentInnerHTMLDescriptors = utils.getOwnPropertyDescriptors({\n  /** @this {Node} */\n  get textContent() {\n    return this[utils.SHADY_PREFIX + 'textContent'];\n  },\n\n  /** @this {Node} */\n  set textContent(value) {\n    this[utils.SHADY_PREFIX + 'textContent'] = value;\n  },\n\n  /** @this {Node} */\n  get innerHTML() {\n    return this[utils.SHADY_PREFIX + 'innerHTML'];\n  },\n\n  /** @this {Node} */\n  set innerHTML(value) {\n    return this[utils.SHADY_PREFIX + 'innerHTML'] = value;\n  },\n});\n\nexport const OutsideDescriptors = utils.getOwnPropertyDescriptors({\n\n  /** @this {Node} */\n  get parentElement() {\n    return this[utils.SHADY_PREFIX + 'parentElement'];\n  },\n\n  /** @this {Node} */\n  get parentNode() {\n    return this[utils.SHADY_PREFIX + 'parentNode'];\n  },\n\n  /** @this {Node} */\n  get nextSibling() {\n    return this[utils.SHADY_PREFIX + 'nextSibling'];\n  },\n\n  /** @this {Node} */\n  get previousSibling() {\n    return this[utils.SHADY_PREFIX + 'previousSibling'];\n  },\n\n  /** @this {Node} */\n  get nextElementSibling() {\n    return this[utils.SHADY_PREFIX + 'nextElementSibling'];\n  },\n\n  /** @this {Node} */\n  get previousElementSibling() {\n    return this[utils.SHADY_PREFIX + 'previousElementSibling'];\n  },\n\n  /** @this {Node} */\n  get className() {\n    return this[utils.SHADY_PREFIX + 'className'];\n  },\n\n  /** @this {Node} */\n  set className(value) {\n    return this[utils.SHADY_PREFIX + 'className'] = value;\n  }\n\n});\n\nfor (let prop in InsideDescriptors) {\n  InsideDescriptors[prop].enumerable = false;\n}\n\nfor (let prop in TextContentInnerHTMLDescriptors) {\n  TextContentInnerHTMLDescriptors[prop].enumerable = false;\n}\n\nfor (let prop in OutsideDescriptors) {\n  OutsideDescriptors[prop].enumerable = false;\n}\n\nconst noInstancePatching = utils.settings.hasDescriptors || utils.settings.noPatch;\n\n// ensure an element has patched \"outside\" accessors; no-op when not needed\nexport let patchOutsideElementAccessors = noInstancePatching ?\n  function() {} : function(element) {\n    const sd = ensureShadyDataForNode(element);\n    if (!sd.__outsideAccessors) {\n      sd.__outsideAccessors = true;\n      utils.patchProperties(element, OutsideDescriptors);\n    }\n  }\n\n// ensure an element has patched \"inside\" accessors; no-op when not needed\nexport let patchInsideElementAccessors = noInstancePatching ?\n  function() {} : function(element) {\n    const sd = ensureShadyDataForNode(element);\n    if (!sd.__insideAccessors) {\n      sd.__insideAccessors = true;\n      utils.patchProperties(element, InsideDescriptors);\n      // NOTE: There are compatibility issues with patches for `textContent`\n      // and `innerHTML` between CE and SD. Since SD patches are applied\n      // via `ShadyDOM.patch` and CE patches are applied as the tree is walked,\n      // SD patches overwrite CE patches.\n      // * When SD is in patching mode, SD calls through to native\n      // methods not patched by CE (since SD is at the bottom) and CE does not\n      // upgrade, connect, or disconnect elements. Therefore do *not patch*\n      // these accessors in this case.\n      // * When SD is in `noPatch` mode, the SD patches call through to\n      // \"native\" methods that are patched by CE (since CE is at the bottom).\n      // Therefore continue to patch in this case.\n      // If customElements is not loaded, then these accessors should be\n      // patched so they work correctly.\n      if (!window['customElements'] || utils.settings.noPatch) {\n        utils.patchProperties(element, TextContentInnerHTMLDescriptors);\n      }\n    }\n  }","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {shadyDataForNode} from './shady-data.js';\n\n/*\nMake this name unique so it is unlikely to conflict with properties on objects passed to `addEventListener`\nhttps://github.com/webcomponents/shadydom/issues/173\n*/\nconst /** string */ eventWrappersName = `__eventWrappers${Date.now()}`;\n\n/** @type {?function(!Event): boolean} */\nconst composedGetter = (() => {\n  const composedProp = Object.getOwnPropertyDescriptor(Event.prototype, 'composed');\n  return composedProp ? (ev) => composedProp.get.call(ev) : null;\n})();\n\nconst supportsEventOptions = (() => {\n  let supported = false;\n  let eventOptions = {\n    get capture() {\n      supported = true;\n    }\n  }\n  const listener = () => {}\n  // NOTE: These will be unpatched at this point.\n  window.addEventListener('test', listener, eventOptions);\n  window.removeEventListener('test', listener, eventOptions);\n  return supported;\n})();\n\nconst parseEventOptions = (optionsOrCapture) => {\n  let capture, once, passive, shadyTarget;\n  if (optionsOrCapture && typeof optionsOrCapture === 'object') {\n    capture = Boolean(optionsOrCapture.capture);\n    once = Boolean(optionsOrCapture.once);\n    passive = Boolean(optionsOrCapture.passive);\n    shadyTarget = optionsOrCapture.__shadyTarget;\n  } else {\n    capture = Boolean(optionsOrCapture);\n    once = false;\n    passive = false;\n  }\n  return {\n    shadyTarget,\n    capture,\n    once,\n    passive,\n    nativeEventOptions: supportsEventOptions ? optionsOrCapture : capture\n  }\n}\n\n// https://github.com/w3c/webcomponents/issues/513#issuecomment-224183937\nconst alwaysComposed = {\n  'blur': true,\n  'focus': true,\n  'focusin': true,\n  'focusout': true,\n  'click': true,\n  'dblclick': true,\n  'mousedown': true,\n  'mouseenter': true,\n  'mouseleave': true,\n  'mousemove': true,\n  'mouseout': true,\n  'mouseover': true,\n  'mouseup': true,\n  'wheel': true,\n  'beforeinput': true,\n  'input': true,\n  'keydown': true,\n  'keyup': true,\n  'compositionstart': true,\n  'compositionupdate': true,\n  'compositionend': true,\n  'touchstart': true,\n  'touchend': true,\n  'touchmove': true,\n  'touchcancel': true,\n  'pointerover': true,\n  'pointerenter': true,\n  'pointerdown': true,\n  'pointermove': true,\n  'pointerup': true,\n  'pointercancel': true,\n  'pointerout': true,\n  'pointerleave': true,\n  'gotpointercapture': true,\n  'lostpointercapture': true,\n  'dragstart': true,\n  'drag': true,\n  'dragenter': true,\n  'dragleave': true,\n  'dragover': true,\n  'drop': true,\n  'dragend': true,\n  'DOMActivate': true,\n  'DOMFocusIn': true,\n  'DOMFocusOut': true,\n  'keypress': true\n};\n\nconst unpatchedEvents = {\n  'DOMAttrModified': true,\n  'DOMAttributeNameChanged': true,\n  'DOMCharacterDataModified': true,\n  'DOMElementNameChanged': true,\n  'DOMNodeInserted': true,\n  'DOMNodeInsertedIntoDocument': true,\n  'DOMNodeRemoved': true,\n  'DOMNodeRemovedFromDocument': true,\n  'DOMSubtreeModified': true\n}\n\n/**\n * Some EventTarget subclasses are not Node subclasses, and you cannot call\n * `getRootNode()` on them.\n *\n * @param {!(Node|EventTarget)} eventTarget\n * @return {!(Node|EventTarget)}\n */\nfunction getRootNodeWithFallback(eventTarget) {\n  if (eventTarget instanceof Node) {\n    return eventTarget[utils.SHADY_PREFIX + 'getRootNode']();\n  } else {\n    return eventTarget;\n  }\n}\n\nfunction pathComposer(startNode, composed) {\n  let composedPath = [];\n  let current = startNode;\n  let startRoot = getRootNodeWithFallback(startNode);\n  while (current) {\n    composedPath.push(current);\n    if (current[utils.SHADY_PREFIX + 'assignedSlot']) {\n      current = current[utils.SHADY_PREFIX + 'assignedSlot'];\n    } else if (current.nodeType === Node.DOCUMENT_FRAGMENT_NODE && current.host && (composed || current !== startRoot)) {\n      current = current.host;\n    } else {\n      current = current[utils.SHADY_PREFIX + 'parentNode'];\n    }\n  }\n  // event composedPath includes window when startNode's ownerRoot is document\n  if (composedPath[composedPath.length - 1] === document) {\n    composedPath.push(window);\n  }\n  return composedPath;\n}\n\nexport const composedPath = (event) => {\n  if (!event.__composedPath) {\n    event.__composedPath = pathComposer(event.target, true);\n  }\n  return event.__composedPath;\n}\n\nfunction retarget(refNode, path) {\n  if (!utils.isShadyRoot) {\n    return refNode;\n  }\n  // If ANCESTOR's root is not a shadow root or ANCESTOR's root is BASE's\n  // shadow-including inclusive ancestor, return ANCESTOR.\n  let refNodePath = pathComposer(refNode, true);\n  let p$ = path;\n  for (let i=0, ancestor, lastRoot, root, rootIdx; i < p$.length; i++) {\n    ancestor = p$[i];\n    root = getRootNodeWithFallback(ancestor);\n    if (root !== lastRoot) {\n      rootIdx = refNodePath.indexOf(root);\n      lastRoot = root;\n    }\n    if (!utils.isShadyRoot(root) || rootIdx > -1) {\n      return ancestor;\n    }\n  }\n}\n\nlet EventPatches = {\n\n  /**\n   * @this {Event}\n   */\n  get composed() {\n    if (this.__composed === undefined) {\n      // if there's an original `composed` getter on the Event prototype, use that\n      if (composedGetter) {\n        // TODO(web-padawan): see https://github.com/webcomponents/shadydom/issues/275\n        this.__composed = this.type === 'focusin' || this.type === 'focusout' || composedGetter(this);\n      // If the event is trusted, or `isTrusted` is not supported, check the list of always composed events\n      } else if (this.isTrusted !== false) {\n        this.__composed = alwaysComposed[this.type];\n      }\n    }\n    return /** @type {!Event} */(this).__composed || false;\n  },\n\n  /**\n   * @this {Event}\n   */\n  composedPath() {\n    if (!this.__composedPath) {\n      this.__composedPath = pathComposer(this['__target'], this.composed);\n    }\n    return /** @type {!Event} */(this).__composedPath;\n  },\n\n  /**\n   * @this {Event}\n   */\n  get target() {\n    return retarget(this.currentTarget || this['__previousCurrentTarget'], this.composedPath());\n  },\n\n  // http://w3c.github.io/webcomponents/spec/shadow/#event-relatedtarget-retargeting\n  /**\n   * @this {Event}\n   */\n  get relatedTarget() {\n    if (!this.__relatedTarget) {\n      return null;\n    }\n    if (!this.__relatedTargetComposedPath) {\n      this.__relatedTargetComposedPath = pathComposer(this.__relatedTarget, true);\n    }\n    // find the deepest node in relatedTarget composed path that is in the same root with the currentTarget\n    return retarget(this.currentTarget || this['__previousCurrentTarget'], /** @type {!Event} */(this).__relatedTargetComposedPath);\n  },\n  /**\n   * @this {Event}\n   */\n  stopPropagation() {\n    Event.prototype.stopPropagation.call(this);\n    this.__propagationStopped = true;\n  },\n  /**\n   * @this {Event}\n   */\n  stopImmediatePropagation() {\n    Event.prototype.stopImmediatePropagation.call(this);\n    this.__immediatePropagationStopped = true;\n    this.__propagationStopped = true;\n  }\n\n};\n\nfunction mixinComposedFlag(Base) {\n  // NOTE: avoiding use of `class` here so that transpiled output does not\n  // try to do `Base.call` with a dom construtor.\n  let klazz = function(type, options) {\n    let event = new Base(type, options);\n    event.__composed = options && Boolean(options['composed']);\n    return event;\n  }\n  // put constructor properties on subclass\n  klazz.__proto__ = Base;\n  klazz.prototype = Base.prototype;\n  return klazz;\n}\n\nlet nonBubblingEventsToRetarget = {\n  'focus': true,\n  'blur': true\n};\n\n\n/**\n * Check if the event has been retargeted by comparing original `target`, and calculated `target`\n * @param {Event} event\n * @return {boolean} True if the original target and calculated target are the same\n */\nfunction hasRetargeted(event) {\n  return event['__target'] !== event.target || event.__relatedTarget !== event.relatedTarget;\n}\n\n/**\n *\n * @param {Event} event\n * @param {Node} node\n * @param {string} phase\n */\nfunction fireHandlers(event, node, phase) {\n  let hs = node.__handlers && node.__handlers[event.type] &&\n    node.__handlers[event.type][phase];\n  if (hs) {\n    for (let i = 0, fn; (fn = hs[i]); i++) {\n      if (hasRetargeted(event) && event.target === event.relatedTarget) {\n        return;\n      }\n      fn.call(node, event);\n      if (event.__immediatePropagationStopped) {\n        return;\n      }\n    }\n  }\n}\n\nfunction retargetNonBubblingEvent(e) {\n  let path = e.composedPath();\n  let node;\n  // override `currentTarget` to let patched `target` calculate correctly\n  Object.defineProperty(e, 'currentTarget', {\n    get: function() {\n      return node;\n    },\n    configurable: true\n  });\n  for (let i = path.length - 1; i >= 0; i--) {\n    node = path[i];\n    // capture phase fires all capture handlers\n    fireHandlers(e, node, 'capture');\n    if (e.__propagationStopped) {\n      return;\n    }\n  }\n\n  // set the event phase to `AT_TARGET` as in spec\n  Object.defineProperty(e, 'eventPhase', {get() { return Event.AT_TARGET }});\n\n  // the event only needs to be fired when owner roots change when iterating the event path\n  // keep track of the last seen owner root\n  let lastFiredRoot;\n  for (let i = 0; i < path.length; i++) {\n    node = path[i];\n    const nodeData = shadyDataForNode(node);\n    const root = nodeData && nodeData.root;\n    if (i === 0 || (root && root === lastFiredRoot)) {\n      fireHandlers(e, node, 'bubble');\n      // don't bother with window, it doesn't have `getRootNode` and will be last in the path anyway\n      if (node !== window) {\n        lastFiredRoot = node[utils.SHADY_PREFIX + 'getRootNode']();\n      }\n      if (e.__propagationStopped) {\n        return;\n      }\n    }\n  }\n}\n\nfunction listenerSettingsEqual(savedListener, node, type, capture, once, passive) {\n  let {\n    node: savedNode,\n    type: savedType,\n    capture: savedCapture,\n    once: savedOnce,\n    passive: savedPassive\n  } = savedListener;\n  return node === savedNode &&\n    type === savedType &&\n    capture === savedCapture &&\n    once === savedOnce &&\n    passive === savedPassive;\n}\n\nexport function findListener(wrappers, node, type, capture, once, passive) {\n  for (let i = 0; i < wrappers.length; i++) {\n    if (listenerSettingsEqual(wrappers[i], node, type, capture, once, passive)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Firefox can throw on accessing eventWrappers inside of `removeEventListener` during a selenium run\n * Try/Catch accessing eventWrappers to work around\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1353074\n */\nfunction getEventWrappers(eventLike) {\n  let wrappers = null;\n  try {\n    wrappers = eventLike[eventWrappersName];\n  } catch (e) {} // eslint-disable-line no-empty\n  return wrappers;\n}\n\nfunction targetNeedsPathCheck(node) {\n  return utils.isShadyRoot(node) || node.localName === 'slot';\n}\n\n/**\n * @this {EventTarget}\n */\nexport function addEventListener(type, fnOrObj, optionsOrCapture) {\n  const {capture, once, passive, shadyTarget, nativeEventOptions} =\n    parseEventOptions(optionsOrCapture);\n  if (!fnOrObj) {\n    return;\n  }\n\n  const handlerType = typeof fnOrObj;\n\n  // bail if `fnOrObj` is not a function, not an object\n  if (handlerType !== 'function' && handlerType !== 'object') {\n    return;\n  }\n\n  // bail if `fnOrObj` is an object without a `handleEvent` method\n  if (handlerType === 'object' && (!fnOrObj.handleEvent || typeof fnOrObj.handleEvent !== 'function')) {\n    return;\n  }\n\n  if (unpatchedEvents[type]) {\n    return this[utils.NATIVE_PREFIX + 'addEventListener'](type, fnOrObj, nativeEventOptions);\n  }\n\n  // hack to let ShadyRoots have event listeners\n  // event listener will be on host, but `currentTarget`\n  // will be set to shadyroot for event listener\n  let target = shadyTarget || this;\n\n  let wrappers = fnOrObj[eventWrappersName];\n  if (wrappers) {\n    // The callback `fn` might be used for multiple nodes/events. Since we generate\n    // a wrapper function, we need to keep track of it when we remove the listener.\n    // It's more efficient to store the node/type/options information as Array in\n    // `fn` itself rather than the node (we assume that the same callback is used\n    // for few nodes at most, whereas a node will likely have many event listeners).\n    // NOTE(valdrin) invoking external functions is costly, inline has better perf.\n    // Stop if the wrapper function has already been created.\n    if (findListener(wrappers, target, type, capture, once, passive) > -1) {\n      return;\n    }\n  } else {\n    fnOrObj[eventWrappersName] = [];\n  }\n\n  /**\n   * @this {HTMLElement}\n   * @param {Event} e\n   */\n  const wrapperFn = function(e) {\n    // Support `once` option.\n    if (once) {\n      this[utils.SHADY_PREFIX + 'removeEventListener'](type, fnOrObj, optionsOrCapture);\n    }\n    if (!e['__target']) {\n      patchEvent(e);\n    }\n    let lastCurrentTargetDesc;\n    if (target !== this) {\n      // replace `currentTarget` to make `target` and `relatedTarget` correct for inside the shadowroot\n      lastCurrentTargetDesc = Object.getOwnPropertyDescriptor(e, 'currentTarget');\n      Object.defineProperty(e, 'currentTarget', {get() { return target }, configurable: true});\n    }\n    e['__previousCurrentTarget'] = e['currentTarget'];\n    // Always check if a shadowRoot or slot is in the current event path.\n    // If it is not, the event was generated on either the host of the shadowRoot\n    // or a children of the host.\n    if (targetNeedsPathCheck(target) && e.composedPath().indexOf(target) == -1) {\n      return;\n    }\n    // There are two critera that should stop events from firing on this node\n    // 1. the event is not composed and the current node is not in the same root as the target\n    // 2. when bubbling, if after retargeting, relatedTarget and target point to the same node\n    if (e.composed || e.composedPath().indexOf(target) > -1) {\n      if (hasRetargeted(e) && e.target === e.relatedTarget) {\n        if (e.eventPhase === Event.BUBBLING_PHASE) {\n          e.stopImmediatePropagation();\n        }\n        return;\n      }\n      // prevent non-bubbling events from triggering bubbling handlers on shadowroot, but only if not in capture phase\n      if (e.eventPhase !== Event.CAPTURING_PHASE && !e.bubbles && e.target !== target && !(target instanceof Window)) {\n        return;\n      }\n      let ret = handlerType === 'function' ?\n        fnOrObj.call(target, e) :\n        (fnOrObj.handleEvent && fnOrObj.handleEvent(e));\n      if (target !== this) {\n        // replace the \"correct\" `currentTarget`\n        if (lastCurrentTargetDesc) {\n          Object.defineProperty(e, 'currentTarget', lastCurrentTargetDesc);\n          lastCurrentTargetDesc = null;\n        } else {\n          delete e['currentTarget'];\n        }\n      }\n      return ret;\n    }\n  };\n\n  // Store the wrapper information.\n  fnOrObj[eventWrappersName].push({\n    // note: use target here which is either a shadowRoot\n    // (when the host element is proxy'ing the event) or this element\n    node: target,\n    type: type,\n    capture: capture,\n    once: once,\n    passive: passive,\n    wrapperFn: wrapperFn\n  });\n\n  if (nonBubblingEventsToRetarget[type]) {\n    this.__handlers = this.__handlers || {};\n    this.__handlers[type] = this.__handlers[type] ||\n      {'capture': [], 'bubble': []};\n    this.__handlers[type][capture ? 'capture' : 'bubble'].push(wrapperFn);\n  } else {\n    this[utils.NATIVE_PREFIX + 'addEventListener'](type, wrapperFn, nativeEventOptions);\n  }\n}\n\n/**\n * @this {EventTarget}\n */\nexport function removeEventListener(type, fnOrObj, optionsOrCapture) {\n  if (!fnOrObj) {\n    return;\n  }\n  const {capture, once, passive, shadyTarget, nativeEventOptions} =\n    parseEventOptions(optionsOrCapture);\n  if (unpatchedEvents[type]) {\n    return this[utils.NATIVE_PREFIX + 'removeEventListener'](type, fnOrObj, nativeEventOptions);\n  }\n  let target = shadyTarget || this;\n  // Search the wrapped function.\n  let wrapperFn = undefined;\n  let wrappers = getEventWrappers(fnOrObj);\n  if (wrappers) {\n    let idx = findListener(wrappers, target, type, capture, once, passive);\n    if (idx > -1) {\n      wrapperFn = wrappers.splice(idx, 1)[0].wrapperFn;\n      // Cleanup.\n      if (!wrappers.length) {\n        fnOrObj[eventWrappersName] = undefined;\n      }\n    }\n  }\n  this[utils.NATIVE_PREFIX + 'removeEventListener'](type, wrapperFn || fnOrObj,\n    nativeEventOptions);\n  if (wrapperFn && nonBubblingEventsToRetarget[type] &&\n      this.__handlers && this.__handlers[type]) {\n    const arr = this.__handlers[type][capture ? 'capture' : 'bubble'];\n    const idx = arr.indexOf(wrapperFn);\n    if (idx > -1) {\n      arr.splice(idx, 1);\n    }\n  }\n}\n\nfunction activateFocusEventOverrides() {\n  for (let ev in nonBubblingEventsToRetarget) {\n    window[utils.NATIVE_PREFIX + 'addEventListener'](ev, function(e) {\n      if (!e['__target']) {\n        patchEvent(e);\n        retargetNonBubblingEvent(e);\n      }\n    }, true);\n  }\n}\n\nconst EventPatchesDescriptors = utils.getOwnPropertyDescriptors(EventPatches);\n\nconst SHADY_PROTO = '__shady_patchedProto';\nconst SHADY_SOURCE_PROTO = '__shady_sourceProto';\n\nfunction patchEvent(event) {\n  event['__target'] = event.target;\n  event.__relatedTarget = event.relatedTarget;\n  // attempt to patch prototype (via cache)\n  if (utils.settings.hasDescriptors) {\n    const proto = Object.getPrototypeOf(event);\n    if (!Object.hasOwnProperty(proto, SHADY_PROTO)) {\n      const patchedProto = Object.create(proto);\n      patchedProto[SHADY_SOURCE_PROTO] = proto;\n      utils.patchProperties(patchedProto, EventPatchesDescriptors);\n      proto[SHADY_PROTO] = patchedProto;\n    }\n    event.__proto__ = proto[SHADY_PROTO];\n  // and fallback to patching instance\n  } else {\n    utils.patchProperties(event, EventPatchesDescriptors);\n  }\n}\n\nlet PatchedEvent = mixinComposedFlag(Event);\nlet PatchedCustomEvent = mixinComposedFlag(CustomEvent);\nlet PatchedMouseEvent = mixinComposedFlag(MouseEvent);\n\n\nexport function patchEvents() {\n  activateFocusEventOverrides();\n  window.Event = PatchedEvent;\n  window.CustomEvent = PatchedCustomEvent;\n  window.MouseEvent = PatchedMouseEvent;\n}\n\nexport function patchClick() {\n  // Fix up `Element.prototype.click()` if `isTrusted` is supported, but `composed` isn't\n  if (!composedGetter && Object.getOwnPropertyDescriptor(Event.prototype, 'isTrusted')) {\n    /** @this {Element} */\n    const composedClickFn = function() {\n      const ev = new MouseEvent('click', {\n        bubbles: true,\n        cancelable: true,\n        composed: true\n      });\n      this[utils.SHADY_PREFIX + 'dispatchEvent'](ev);\n    };\n    if (Element.prototype.click) {\n      Element.prototype.click = composedClickFn;\n    } else if (HTMLElement.prototype.click) {\n      HTMLElement.prototype.click = composedClickFn;\n    }\n  }\n}\n\nexport const eventPropertyNames = Object.getOwnPropertyNames(Document.prototype)\n    .filter(name => name.substring(0,2) === 'on');\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nfunction newSplice(index, removed, addedCount) {\n  return {\n    index: index,\n    removed: removed,\n    addedCount: addedCount\n  };\n}\n\nconst EDIT_LEAVE = 0;\nconst EDIT_UPDATE = 1;\nconst EDIT_ADD = 2;\nconst EDIT_DELETE = 3;\n\n// Note: This function is *based* on the computation of the Levenshtein\n// \"edit\" distance. The one change is that \"updates\" are treated as two\n// edits - not one. With Array splices, an update is really a delete\n// followed by an add. By retaining this, we optimize for \"keeping\" the\n// maximum array items in the original array. For example:\n//\n//   'xxxx123' -> '123yyyy'\n//\n// With 1-edit updates, the shortest path would be just to update all seven\n// characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n// leaves the substring '123' intact.\nfunction calcEditDistances(current, currentStart, currentEnd,\n                            old, oldStart, oldEnd) {\n  // \"Deletion\" columns\n  let rowCount = oldEnd - oldStart + 1;\n  let columnCount = currentEnd - currentStart + 1;\n  let distances = new Array(rowCount);\n\n  // \"Addition\" rows. Initialize null column.\n  for (let i = 0; i < rowCount; i++) {\n    distances[i] = new Array(columnCount);\n    distances[i][0] = i;\n  }\n\n  // Initialize null row\n  for (let j = 0; j < columnCount; j++)\n    distances[0][j] = j;\n\n  for (let i = 1; i < rowCount; i++) {\n    for (let j = 1; j < columnCount; j++) {\n      if (equals(current[currentStart + j - 1], old[oldStart + i - 1]))\n        distances[i][j] = distances[i - 1][j - 1];\n      else {\n        let north = distances[i - 1][j] + 1;\n        let west = distances[i][j - 1] + 1;\n        distances[i][j] = north < west ? north : west;\n      }\n    }\n  }\n\n  return distances;\n}\n\n// This starts at the final weight, and walks \"backward\" by finding\n// the minimum previous weight recursively until the origin of the weight\n// matrix.\nfunction spliceOperationsFromEditDistances(distances) {\n  let i = distances.length - 1;\n  let j = distances[0].length - 1;\n  let current = distances[i][j];\n  let edits = [];\n  while (i > 0 || j > 0) {\n    if (i == 0) {\n      edits.push(EDIT_ADD);\n      j--;\n      continue;\n    }\n    if (j == 0) {\n      edits.push(EDIT_DELETE);\n      i--;\n      continue;\n    }\n    let northWest = distances[i - 1][j - 1];\n    let west = distances[i - 1][j];\n    let north = distances[i][j - 1];\n\n    let min;\n    if (west < north)\n      min = west < northWest ? west : northWest;\n    else\n      min = north < northWest ? north : northWest;\n\n    if (min == northWest) {\n      if (northWest == current) {\n        edits.push(EDIT_LEAVE);\n      } else {\n        edits.push(EDIT_UPDATE);\n        current = northWest;\n      }\n      i--;\n      j--;\n    } else if (min == west) {\n      edits.push(EDIT_DELETE);\n      i--;\n      current = west;\n    } else {\n      edits.push(EDIT_ADD);\n      j--;\n      current = north;\n    }\n  }\n\n  edits.reverse();\n  return edits;\n}\n\n/**\n * Splice Projection functions:\n *\n * A splice map is a representation of how a previous array of items\n * was transformed into a new array of items. Conceptually it is a list of\n * tuples of\n *\n *   <index, removed, addedCount>\n *\n * which are kept in ascending index order of. The tuple represents that at\n * the |index|, |removed| sequence of items were removed, and counting forward\n * from |index|, |addedCount| items were added.\n */\n\n/**\n * Lacking individual splice mutation information, the minimal set of\n * splices can be synthesized given the previous state and final state of an\n * array. The basic approach is to calculate the edit distance matrix and\n * choose the shortest path through it.\n *\n * Complexity: O(l * p)\n *   l: The length of the current array\n *   p: The length of the old array\n */\nfunction calcSplices(current, currentStart, currentEnd,\n                      old, oldStart, oldEnd) {\n  let prefixCount = 0;\n  let suffixCount = 0;\n  let splice;\n\n  let minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n  if (currentStart == 0 && oldStart == 0)\n    prefixCount = sharedPrefix(current, old, minLength);\n\n  if (currentEnd == current.length && oldEnd == old.length)\n    suffixCount = sharedSuffix(current, old, minLength - prefixCount);\n\n  currentStart += prefixCount;\n  oldStart += prefixCount;\n  currentEnd -= suffixCount;\n  oldEnd -= suffixCount;\n\n  if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0)\n    return [];\n\n  if (currentStart == currentEnd) {\n    splice = newSplice(currentStart, [], 0);\n    while (oldStart < oldEnd)\n      splice.removed.push(old[oldStart++]);\n\n    return [ splice ];\n  } else if (oldStart == oldEnd)\n    return [ newSplice(currentStart, [], currentEnd - currentStart) ];\n\n  let ops = spliceOperationsFromEditDistances(\n      calcEditDistances(current, currentStart, currentEnd,\n                             old, oldStart, oldEnd));\n\n  splice = undefined;\n  let splices = [];\n  let index = currentStart;\n  let oldIndex = oldStart;\n  for (let i = 0; i < ops.length; i++) {\n    switch(ops[i]) {\n      case EDIT_LEAVE:\n        if (splice) {\n          splices.push(splice);\n          splice = undefined;\n        }\n\n        index++;\n        oldIndex++;\n        break;\n      case EDIT_UPDATE:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.addedCount++;\n        index++;\n\n        splice.removed.push(old[oldIndex]);\n        oldIndex++;\n        break;\n      case EDIT_ADD:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.addedCount++;\n        index++;\n        break;\n      case EDIT_DELETE:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.removed.push(old[oldIndex]);\n        oldIndex++;\n        break;\n    }\n  }\n\n  if (splice) {\n    splices.push(splice);\n  }\n  return splices;\n}\n\nfunction sharedPrefix(current, old, searchLength) {\n  for (let i = 0; i < searchLength; i++)\n    if (!equals(current[i], old[i]))\n      return i;\n  return searchLength;\n}\n\nfunction sharedSuffix(current, old, searchLength) {\n  let index1 = current.length;\n  let index2 = old.length;\n  let count = 0;\n  while (count < searchLength && equals(current[--index1], old[--index2]))\n    count++;\n\n  return count;\n}\n\nfunction equals(currentValue, previousValue) {\n  return currentValue === previousValue;\n}\n\nexport function calculateSplices(current, previous) {\n  return calcSplices(current, 0, current.length, previous, 0,\n                          previous.length);\n}\n\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {shadyDataForNode, ensureShadyDataForNode} from './shady-data.js';\nimport {patchInsideElementAccessors, patchOutsideElementAccessors} from './patch-instances.js';\n\nfunction linkNode(node, container, containerData, ref_node) {\n  patchOutsideElementAccessors(node);\n  ref_node = ref_node || null;\n  const nodeData = ensureShadyDataForNode(node);\n  const ref_nodeData = ref_node ? ensureShadyDataForNode(ref_node) : null;\n  // update ref_node.previousSibling <-> node\n  nodeData.previousSibling = ref_node ? ref_nodeData.previousSibling :\n    container[utils.SHADY_PREFIX + 'lastChild'];\n  let psd = shadyDataForNode(nodeData.previousSibling);\n  if (psd) {\n    psd.nextSibling = node;\n  }\n  // update node <-> ref_node\n  let nsd = shadyDataForNode(nodeData.nextSibling = ref_node);\n  if (nsd) {\n    nsd.previousSibling = node;\n  }\n  // update node <-> container\n  nodeData.parentNode = container;\n  if (ref_node) {\n    if (ref_node === containerData.firstChild) {\n      containerData.firstChild = node;\n    }\n  } else {\n    containerData.lastChild = node;\n    if (!containerData.firstChild) {\n      containerData.firstChild = node;\n    }\n  }\n  // remove caching of childNodes\n  containerData.childNodes = null;\n}\n\nexport const recordInsertBefore = (node, container, ref_node) => {\n  patchInsideElementAccessors(container);\n  const containerData = ensureShadyDataForNode(container);\n  if (containerData.firstChild !== undefined) {\n    containerData.childNodes = null;\n  }\n  // handle document fragments\n  if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n    // Note, documentFragments should not have logical DOM so there's\n    // no need update that. It is possible to append a ShadowRoot, but we're\n    // choosing not to support that.\n    const first = node[utils.NATIVE_PREFIX + 'firstChild'];\n    for (let n = first; n; (n = n[utils.NATIVE_PREFIX + 'nextSibling'])) {\n      linkNode(n, container, containerData, ref_node);\n    }\n  } else {\n    linkNode(node, container, containerData, ref_node);\n  }\n}\n\nexport const recordRemoveChild = (node, container) => {\n  const nodeData = ensureShadyDataForNode(node);\n  const containerData = ensureShadyDataForNode(container);\n  if (node === containerData.firstChild) {\n    containerData.firstChild = nodeData.nextSibling;\n  }\n  if (node === containerData.lastChild) {\n    containerData.lastChild = nodeData.previousSibling;\n  }\n  let p = nodeData.previousSibling;\n  let n = nodeData.nextSibling;\n  if (p) {\n    ensureShadyDataForNode(p).nextSibling = n;\n  }\n  if (n) {\n    ensureShadyDataForNode(n).previousSibling = p;\n  }\n  // When an element is removed, logical data is no longer tracked.\n  // Explicitly set `undefined` here to indicate this. This is disginguished\n  // from `null` which is set if info is null.\n  nodeData.parentNode = nodeData.previousSibling =\n  nodeData.nextSibling = undefined;\n  if (containerData.childNodes !== undefined) {\n    // remove caching of childNodes\n    containerData.childNodes = null;\n  }\n}\n\n/**\n * @param  {!Node|DocumentFragment} node\n * @param  {!Node|DocumentFragment=} adoptedParent\n */\nexport const recordChildNodes = (node, adoptedParent) => {\n  const nodeData = ensureShadyDataForNode(node);\n  if (!adoptedParent && nodeData.firstChild !== undefined) {\n    return;\n  }\n  // remove caching of childNodes\n  nodeData.childNodes = null;\n  const first = nodeData.firstChild = node[utils.NATIVE_PREFIX + 'firstChild'];\n  nodeData.lastChild = node[utils.NATIVE_PREFIX + 'lastChild'];\n  patchInsideElementAccessors(node);\n  for (let n = first, previous; n; (n = n[utils.NATIVE_PREFIX + 'nextSibling'])) {\n    const sd = ensureShadyDataForNode(n);\n    sd.parentNode = adoptedParent || node;\n    sd.nextSibling = n[utils.NATIVE_PREFIX + 'nextSibling'];\n    sd.previousSibling = previous || null;\n    previous = n;\n    patchOutsideElementAccessors(n);\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\n\nlet scopingShim = null;\n\nexport function getScopingShim() {\n  if (!scopingShim) {\n    scopingShim = window['ShadyCSS'] && window['ShadyCSS']['ScopingShim'];\n  }\n  return scopingShim || null;\n}\n\n/**\n * @param {!Node} node\n * @param {string} attr\n * @param {string} value\n */\nexport function scopeClassAttribute(node, attr, value) {\n  const scopingShim = getScopingShim();\n  if (scopingShim && attr === 'class') {\n    scopingShim['setElementClass'](node, value);\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {!Node} node\n * @param {string} newScopeName\n */\nexport function addShadyScoping(node, newScopeName) {\n  const scopingShim = getScopingShim();\n  if (!scopingShim) {\n    return;\n  }\n  scopingShim['scopeNode'](node, newScopeName);\n}\n\n/**\n * @param {!Node} node\n * @param {string} currentScopeName\n */\nexport function removeShadyScoping(node, currentScopeName) {\n  const scopingShim = getScopingShim();\n  if (!scopingShim) {\n    return;\n  }\n  scopingShim['unscopeNode'](node, currentScopeName);\n}\n\n/**\n * @param {!Node} node\n * @param {string} newScopeName\n * @param {string} oldScopeName\n */\nexport function replaceShadyScoping(node, newScopeName, oldScopeName) {\n  const scopingShim = getScopingShim();\n  if (!scopingShim) {\n    return;\n  }\n  if (oldScopeName) {\n    removeShadyScoping(node, oldScopeName);\n  }\n  addShadyScoping(node, newScopeName);\n}\n\n/**\n * @param {!Node} node\n * @param {string} newScopeName\n * @return {boolean}\n */\nexport function currentScopeIsCorrect(node, newScopeName) {\n  const scopingShim = getScopingShim();\n  if (!scopingShim) {\n    return true;\n  }\n  if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n    // NOTE: as an optimization, only check that all the top-level children\n    // have the correct scope.\n    let correctScope = true;\n    for (let n=node[utils.SHADY_PREFIX + 'firstChild']; n; n = n[utils.SHADY_PREFIX + 'nextSibling']) {\n      correctScope = correctScope &&\n        currentScopeIsCorrect(n, newScopeName);\n    }\n    return correctScope;\n  }\n  if (node.nodeType !== Node.ELEMENT_NODE) {\n    return true;\n  }\n  const currentScope = scopingShim['currentScopeForNode'](node);\n  return currentScope === newScopeName;\n}\n\n/**\n * @param {!Node} node\n * @return {string}\n */\nexport function currentScopeForNode(node) {\n  if (node.nodeType !== Node.ELEMENT_NODE) {\n    return '';\n  }\n  const scopingShim = getScopingShim();\n  if (!scopingShim) {\n    return '';\n  }\n  return scopingShim['currentScopeForNode'](node);\n}\n\n/**\n * Walk over a node's tree and apply visitorFn to each element node\n *\n * @param {Node} node\n * @param {function(!Node):void} visitorFn\n */\nexport function treeVisitor(node, visitorFn) {\n  if (!node) {\n    return;\n  }\n  // this check is necessary if `node` is a Document Fragment\n  if (node.nodeType === Node.ELEMENT_NODE) {\n    visitorFn(node);\n  }\n  for (let n = node[utils.SHADY_PREFIX + 'firstChild']; n; (n = n[utils.SHADY_PREFIX + 'nextSibling'])) {\n    if (n.nodeType === Node.ELEMENT_NODE) {\n      treeVisitor(n, visitorFn);\n    }\n  }\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {getScopingShim, removeShadyScoping, replaceShadyScoping,\n  treeVisitor, currentScopeForNode, currentScopeIsCorrect } from '../style-scoping.js';\nimport {shadyDataForNode, ensureShadyDataForNode} from '../shady-data.js';\nimport {recordInsertBefore, recordRemoveChild} from '../link-nodes.js';\nimport {ownerShadyRootForNode} from '../attach-shadow.js';\n\nconst doc = window.document;\n\nconst preferPerformance = utils.settings.preferPerformance;\n\nconst nativeIsConnectedAccessors =\n/** @type {ObjectPropertyDescriptor} */(\n  Object.getOwnPropertyDescriptor(Node.prototype, 'isConnected')\n);\n\nconst nativeIsConnected = nativeIsConnectedAccessors && nativeIsConnectedAccessors.get;\n\nexport function clearNode(node) {\n  let firstChild;\n  while ((firstChild = node[utils.SHADY_PREFIX + 'firstChild'])) {\n    node[utils.SHADY_PREFIX + 'removeChild'](firstChild);\n  }\n}\n\nfunction removeOwnerShadyRoot(node) {\n  // optimization: only reset the tree if node is actually in a root\n  if (hasCachedOwnerRoot(node)) {\n    for (let n=node[utils.SHADY_PREFIX + 'firstChild']; n; n = n[utils.SHADY_PREFIX + 'nextSibling']) {\n      removeOwnerShadyRoot(n);\n    }\n  }\n  const nodeData = shadyDataForNode(node);\n  if (nodeData) {\n    nodeData.ownerShadyRoot = undefined;\n  }\n}\n\nfunction hasCachedOwnerRoot(node) {\n  const nodeData = shadyDataForNode(node);\n  return Boolean(nodeData && nodeData.ownerShadyRoot !== undefined);\n}\n\n/**\n * Finds the first flattened node that is composed in the node's parent.\n * If the given node is a slot, then the first flattened node is returned\n * if it exists, otherwise advance to the node's nextSibling.\n * @param {Node} node within which to find first composed node\n * @returns {Node} first composed node\n */\nfunction firstComposedNode(node) {\n  let composed = node;\n  if (node && node.localName === 'slot') {\n    const nodeData = shadyDataForNode(node);\n    const flattened = nodeData && nodeData.flattenedNodes;\n    composed = flattened && flattened.length ? flattened[0] :\n      firstComposedNode(node[utils.SHADY_PREFIX + 'nextSibling']);\n  }\n  return composed;\n}\n\n/**\n * @param {Node} node\n * @param {Node=} addedNode\n * @param {Node=} removedNode\n */\nfunction scheduleObserver(node, addedNode, removedNode) {\n  const nodeData = shadyDataForNode(node);\n  const observer = nodeData && nodeData.observer;\n  if (observer) {\n    if (addedNode) {\n      observer.addedNodes.push(addedNode);\n    }\n    if (removedNode) {\n      observer.removedNodes.push(removedNode);\n    }\n    observer.schedule();\n  }\n}\n\nexport const NodePatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Node} */\n  get parentNode() {\n    const nodeData = shadyDataForNode(this);\n    const l = nodeData && nodeData.parentNode;\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'parentNode'];\n  },\n\n  /** @this {Node} */\n  get firstChild() {\n    const nodeData = shadyDataForNode(this);\n    const l = nodeData && nodeData.firstChild;\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'firstChild'];\n  },\n\n  /** @this {Node} */\n  get lastChild() {\n    const nodeData = shadyDataForNode(this);\n    const l = nodeData && nodeData.lastChild;\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'lastChild'];\n  },\n\n  /** @this {Node} */\n  get nextSibling() {\n    const nodeData = shadyDataForNode(this);\n    const l = nodeData && nodeData.nextSibling;\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'nextSibling'];\n  },\n\n  /** @this {Node} */\n  get previousSibling() {\n    const nodeData = shadyDataForNode(this);\n    const l = nodeData && nodeData.previousSibling;\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'previousSibling'];\n  },\n\n  /** @this {Node} */\n  get childNodes() {\n    let childNodes;\n    if (utils.isTrackingLogicalChildNodes(this)) {\n      const nodeData = shadyDataForNode(this);\n      if (!nodeData.childNodes) {\n        nodeData.childNodes = [];\n        for (let n=this[utils.SHADY_PREFIX + 'firstChild']; n; n=n[utils.SHADY_PREFIX + 'nextSibling']) {\n          nodeData.childNodes.push(n);\n        }\n      }\n      childNodes = nodeData.childNodes;\n    } else {\n      childNodes = this[utils.NATIVE_PREFIX + 'childNodes'];\n    }\n    childNodes.item = function(index) {\n      return childNodes[index];\n    }\n    return childNodes;\n  },\n\n  /** @this {Node} */\n  get parentElement() {\n    const nodeData = shadyDataForNode(this);\n    let l = nodeData && nodeData.parentNode;\n    if (l && l.nodeType !== Node.ELEMENT_NODE) {\n      l = null;\n    }\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'parentElement'];\n  },\n\n  /** @this {Node} */\n  get isConnected() {\n    if (nativeIsConnected && nativeIsConnected.call(this)) {\n      return true;\n    }\n    if (this.nodeType == Node.DOCUMENT_FRAGMENT_NODE) {\n      return false;\n    }\n    // Fast path for distributed nodes.\n    const ownerDocument = this.ownerDocument;\n    if (utils.hasDocumentContains) {\n      if (ownerDocument[utils.NATIVE_PREFIX + 'contains'](this)) {\n        return true;\n      }\n    } else if (ownerDocument.documentElement &&\n      ownerDocument.documentElement[utils.NATIVE_PREFIX + 'contains'](this)) {\n      return true;\n    }\n    // Slow path for non-distributed nodes.\n    let node = this;\n    while (node && !(node instanceof Document)) {\n      node = node[utils.SHADY_PREFIX + 'parentNode'] || (utils.isShadyRoot(node) ? /** @type {ShadowRoot} */(node).host : undefined);\n    }\n    return !!(node && node instanceof Document);\n  },\n\n  /** @this {Node} */\n  get textContent() {\n    if (utils.isTrackingLogicalChildNodes(this)) {\n      let tc = [];\n      for (let n=this[utils.SHADY_PREFIX + 'firstChild']; n; n = n[utils.SHADY_PREFIX + 'nextSibling']) {\n        if (n.nodeType !== Node.COMMENT_NODE) {\n          tc.push(n[utils.SHADY_PREFIX + 'textContent']);\n        }\n      }\n      return tc.join('');\n    } else {\n      return this[utils.NATIVE_PREFIX + 'textContent'];\n    }\n  },\n\n  /**\n   * @this {Node}\n   * @param {string} value\n   */\n  set textContent(value) {\n    if (typeof value === 'undefined' || value === null) {\n      value = ''\n    }\n    switch (this.nodeType) {\n      case Node.ELEMENT_NODE:\n      case Node.DOCUMENT_FRAGMENT_NODE:\n        if (!utils.isTrackingLogicalChildNodes(this) && utils.settings.hasDescriptors) {\n          // may be removing a nested slot but fast path if we know we are not.\n          const firstChild = this[utils.SHADY_PREFIX + 'firstChild'];\n          if (firstChild != this[utils.SHADY_PREFIX + 'lastChild'] ||\n            (firstChild && firstChild.nodeType != Node.TEXT_NODE)) {\n            clearNode(this);\n          }\n          this[utils.NATIVE_PREFIX + 'textContent'] = value;\n        } else {\n          clearNode(this);\n          // Document fragments must have no childNodes if setting a blank string\n          if (value.length > 0 || this.nodeType === Node.ELEMENT_NODE) {\n            this[utils.SHADY_PREFIX + 'insertBefore'](document.createTextNode(value))\n          }\n        }\n        break;\n      default:\n        // Note, be wary of patching `nodeValue`.\n        this.nodeValue = value;\n        break;\n    }\n  },\n\n  // Patched `insertBefore`. Note that all mutations that add nodes are routed\n  // here. When a <slot> is added or a node is added to a host with a shadowRoot\n  // with a slot, a standard dom `insert` call is aborted and `_asyncRender`\n  // is called on the relevant shadowRoot. In all other cases, a standard dom\n  // `insert` can be made, but the location and ref_node may need to be changed.\n  /**\n   * @this {Node}\n   * @param {Node} node\n   * @param {Node=} ref_node\n   */\n  insertBefore(node, ref_node) {\n    // optimization: assume native insertBefore is ok if the nodes are not in the document.\n    if (this.ownerDocument !== doc && node.ownerDocument !== doc) {\n      this[utils.NATIVE_PREFIX + 'insertBefore'](node, ref_node);\n      return node;\n    }\n    if (node === this) {\n      throw Error(`Failed to execute 'appendChild' on 'Node': The new child element contains the parent.`);\n    }\n    if (ref_node) {\n      const refData = shadyDataForNode(ref_node);\n      const p = refData && refData.parentNode;\n      if ((p !== undefined && p !== this) ||\n        (p === undefined && ref_node[utils.NATIVE_PREFIX + 'parentNode'] !== this)) {\n        throw Error(`Failed to execute 'insertBefore' on 'Node': The node ` +\n        `before which the new node is to be inserted is not a child of this node.`);\n      }\n    }\n    if (ref_node === node) {\n      return node;\n    }\n    /** @type {!Array<!HTMLSlotElement>} */\n    const slotsAdded = [];\n    const ownerRoot = ownerShadyRootForNode(this);\n    /** @type {string} */\n    const newScopeName = ownerRoot ? ownerRoot.host.localName : currentScopeForNode(this);\n    /** @type {string} */\n    let oldScopeName;\n    // remove from existing location\n    const parentNode = node[utils.SHADY_PREFIX + 'parentNode'];\n    if (parentNode) {\n      oldScopeName = currentScopeForNode(node);\n      const skipUnscoping =\n        // Don't remove scoping if we're inserting into another shadowRoot;\n        // this would be unnecessary since it will be re-scoped below\n        Boolean(ownerRoot) ||\n        // Don't remove scoping if we're being moved between non-shadowRoot\n        // locations (the likely case is when moving pre-scoped nodes in a template)\n        !ownerShadyRootForNode(node) ||\n        // Under preferPerformance, don't remove scoping when moving back into\n        // a document fragment that was previously scoped; the assumption is\n        // that the user should only move correctly-scoped DOM back into it\n        (preferPerformance && this['__noInsertionPoint'] !== undefined);\n      parentNode[utils.SHADY_PREFIX + 'removeChild'](node, skipUnscoping);\n    }\n    // add to new parent\n    let allowNativeInsert = true;\n    const needsScoping = (!preferPerformance ||\n        // Under preferPerformance, only re-scope if we're not coming from a\n        // pre-scoped doc fragment or back into a pre-scoped doc fragment\n        (node['__noInsertionPoint'] === undefined &&\n         this['__noInsertionPoint'] === undefined)) &&\n        !currentScopeIsCorrect(node, newScopeName);\n    const needsSlotFinding = ownerRoot && !node['__noInsertionPoint'] &&\n        (!preferPerformance || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE);\n    if (needsSlotFinding || needsScoping) {\n      // NOTE: avoid node.removeChild as this *can* trigger another patched\n      // method (e.g. custom elements) and we want only the shady method to run.\n      // The following table describes what style scoping actions should happen as a result of this insertion.\n      // document -> shadowRoot: replace\n      // shadowRoot -> shadowRoot: replace\n      // shadowRoot -> shadowRoot of same type: do nothing\n      // shadowRoot -> document: allow unscoping\n      // document -> document: do nothing\n      // The \"same type of shadowRoot\" and \"document to document cases rely on `currentScopeIsCorrect` returning true\n      if (needsScoping) {\n        // in a document or disconnected tree, replace scoping if necessary\n        oldScopeName = oldScopeName || currentScopeForNode(node);\n      }\n      treeVisitor(node, (node) => {\n        if (needsSlotFinding && node.localName === 'slot') {\n          slotsAdded.push(/** @type {!HTMLSlotElement} */(node));\n        }\n        if (needsScoping) {\n          replaceShadyScoping(node, newScopeName, oldScopeName);\n        }\n      });\n    }\n    // if a slot is added, must render containing root.\n    if (slotsAdded.length) {\n      ownerRoot._addSlots(slotsAdded);\n      ownerRoot._asyncRender();\n    }\n    if (utils.isTrackingLogicalChildNodes(this)) {\n      recordInsertBefore(node, this, ref_node);\n      // when inserting into a host with a shadowRoot with slot, use\n      // `shadowRoot._asyncRender()` via `attach-shadow` module\n      const parentData = shadyDataForNode(this);\n      if (utils.hasShadowRootWithSlot(this)) {\n        parentData.root._asyncRender();\n        allowNativeInsert = false;\n      // when inserting into a host with shadowRoot with NO slot, do nothing\n      // as the node should not be added to composed dome anywhere.\n      } else if (parentData.root) {\n        allowNativeInsert = false;\n      }\n    }\n    if (allowNativeInsert) {\n      // if adding to a shadyRoot, add to host instead\n      let container = utils.isShadyRoot(this) ?\n        /** @type {ShadowRoot} */(this).host : this;\n      // if ref_node, get the ref_node that's actually in composed dom.\n      if (ref_node) {\n        ref_node = firstComposedNode(ref_node);\n        container[utils.NATIVE_PREFIX + 'insertBefore'](node, ref_node);\n      } else {\n        container[utils.NATIVE_PREFIX + 'appendChild'](node);\n      }\n    // Since ownerDocument is not patched, it can be incorrect after this call\n    // if the node is physically appended via distribution. This can result\n    // in the custom elements polyfill not upgrading the node if it's in an inert doc.\n    // We correct this by calling `adoptNode`.\n    } else if (node.ownerDocument !== this.ownerDocument) {\n      this.ownerDocument.adoptNode(node);\n    }\n    scheduleObserver(this, node);\n    return node;\n  },\n\n  /**\n   * @this {Node}\n   * @param {Node} node\n   */\n  appendChild(node) {\n    // if this is a shadowRoot and the shadowRoot is passed as `node`\n    // then an optimized append has already been performed, so do nothing.\n    if (!(this == node && utils.isShadyRoot(node))) {\n      return this[utils.SHADY_PREFIX + 'insertBefore'](node);\n    }\n  },\n\n  /**\n   * Patched `removeChild`. Note that all dom \"removals\" are routed here.\n   * Removes the given `node` from the element's `children`.\n   * This method also performs dom composition.\n   * @this {Node}\n   * @param {Node} node\n   * @param {boolean=} skipUnscoping\n   */\n  removeChild(node, skipUnscoping = false) {\n    if (this.ownerDocument !== doc) {\n      return this[utils.NATIVE_PREFIX + 'removeChild'](node);\n    }\n    if (node[utils.SHADY_PREFIX + 'parentNode'] !== this) {\n      throw Error('The node to be removed is not a child of this node: ' +\n        node);\n    }\n    let preventNativeRemove;\n    let ownerRoot = ownerShadyRootForNode(node);\n    const removingInsertionPoint = ownerRoot && ownerRoot._removeContainedSlots(node);\n    const parentData = shadyDataForNode(this);\n    if (utils.isTrackingLogicalChildNodes(this)) {\n      recordRemoveChild(node, this);\n      if (utils.hasShadowRootWithSlot(this)) {\n        parentData.root._asyncRender();\n        preventNativeRemove = true;\n      }\n    }\n    // unscope a node leaving a ShadowRoot if ShadyCSS is present, and this node\n    // is not going to be rescoped in `insertBefore`\n    if (getScopingShim() && !skipUnscoping && ownerRoot\n      && node.nodeType !== Node.TEXT_NODE) {\n      const oldScopeName = currentScopeForNode(node);\n      treeVisitor(node, (node) => {\n        removeShadyScoping(node, oldScopeName);\n      });\n    }\n    removeOwnerShadyRoot(node);\n    // if removing slot, must render containing root\n    if (ownerRoot) {\n      let changeSlotContent = this && this.localName === 'slot';\n      if (changeSlotContent) {\n        preventNativeRemove = true;\n      }\n      if (removingInsertionPoint || changeSlotContent) {\n        ownerRoot._asyncRender();\n      }\n    }\n    if (!preventNativeRemove) {\n      // if removing from a shadyRoot, remove from host instead\n      let container = utils.isShadyRoot(this) ?\n        /** @type {ShadowRoot} */(this).host :\n        this;\n      // not guaranteed to physically be in container; e.g.\n      // (1) if parent has a shadyRoot, element may or may not at distributed\n      // location (could be undistributed)\n      // (2) if parent is a slot, element may not ben in composed dom\n      if (!(parentData.root || node.localName === 'slot') ||\n        (container === node[utils.NATIVE_PREFIX + 'parentNode'])) {\n        container[utils.NATIVE_PREFIX + 'removeChild'](node);\n      }\n    }\n    scheduleObserver(this, null, node);\n    return node;\n  },\n\n  /**\n   * @this {Node}\n   * @param {Node} node\n   * @param {Node=} ref_node\n   */\n  replaceChild(node, ref_node) {\n    this[utils.SHADY_PREFIX + 'insertBefore'](node, ref_node);\n    this[utils.SHADY_PREFIX + 'removeChild'](ref_node);\n    return node;\n  },\n\n  /**\n   * @this {Node}\n   * @param {boolean=} deep\n   */\n  cloneNode(deep) {\n    if (this.localName == 'template') {\n      return this[utils.NATIVE_PREFIX + 'cloneNode'](deep);\n    } else {\n      const n = this[utils.NATIVE_PREFIX + 'cloneNode'](false);\n      // Attribute nodes historically had childNodes, but they have later\n      // been removed from the spec.\n      // Make sure we do not do a deep clone on them for old browsers (IE11)\n      if (deep && n.nodeType !== Node.ATTRIBUTE_NODE) {\n        for (let c=this[utils.SHADY_PREFIX + 'firstChild'], nc; c; c = c[utils.SHADY_PREFIX + 'nextSibling']) {\n          nc = c[utils.SHADY_PREFIX + 'cloneNode'](true);\n          n[utils.SHADY_PREFIX + 'appendChild'](nc);\n        }\n      }\n      return n;\n    }\n  },\n\n  /**\n   * @this {Node}\n   * @param {Object=} options\n   */\n  // TODO(sorvell): implement `options` e.g. `{ composed: boolean }`\n  getRootNode(options) { // eslint-disable-line no-unused-vars\n    if (!this || !this.nodeType) {\n      return;\n    }\n    const nodeData = ensureShadyDataForNode(this);\n    let root = nodeData.ownerShadyRoot;\n    if (root === undefined) {\n      if (utils.isShadyRoot(this)) {\n        root = this;\n        nodeData.ownerShadyRoot = root;\n      } else {\n        let parent = this[utils.SHADY_PREFIX + 'parentNode'];\n        root = parent ? parent[utils.SHADY_PREFIX + 'getRootNode'](options) : this;\n        // memo-ize result for performance but only memo-ize\n        // result if node is in the document. This avoids a problem where a root\n        // can be cached while an element is inside a fragment.\n        // If this happens and we cache the result, the value can become stale\n        // because for perf we avoid processing the subtree of added fragments.\n        if (document.documentElement[utils.NATIVE_PREFIX + 'contains'](this)) {\n          nodeData.ownerShadyRoot = root;\n        }\n      }\n\n    }\n    return root;\n  },\n\n  /** @this {Node} */\n  contains(node) {\n    return utils.contains(this, node);\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {shadyDataForNode} from '../shady-data.js';\n\n/**\n * @param {Node} node\n * @param {Function} matcher\n * @param {Function=} halter\n */\nexport function query(node, matcher, halter) {\n  let list = [];\n  queryChildNodes(node, matcher,\n    halter, list);\n  return list;\n}\n\nfunction queryChildNodes(parent, matcher, halter, list) {\n  for (let n = parent[utils.SHADY_PREFIX + 'firstChild']; n; n = n[utils.SHADY_PREFIX + 'nextSibling']) {\n    if (n.nodeType === Node.ELEMENT_NODE &&\n        queryElement(n, matcher, halter, list)) {\n      return true;\n    }\n  }\n}\n\nfunction queryElement(node, matcher, halter, list) {\n  let result = matcher(node);\n  if (result) {\n    list.push(node);\n  }\n  if (halter && halter(result)) {\n    return result;\n  }\n  queryChildNodes(node, matcher,\n    halter, list);\n}\n\n// Needed on Element, DocumentFragment, Document\nexport const ParentNodePatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Element} */\n  get firstElementChild() {\n    const nodeData = shadyDataForNode(this);\n    if (nodeData && nodeData.firstChild !== undefined) {\n      let n = this[utils.SHADY_PREFIX + 'firstChild'];\n      while (n && n.nodeType !== Node.ELEMENT_NODE) {\n        n = n[utils.SHADY_PREFIX + 'nextSibling'];\n      }\n      return n;\n    } else {\n      return this[utils.NATIVE_PREFIX + 'firstElementChild'];\n    }\n  },\n\n  /** @this {Element} */\n  get lastElementChild() {\n    const nodeData = shadyDataForNode(this);\n    if (nodeData && nodeData.lastChild !== undefined) {\n      let n = this[utils.SHADY_PREFIX + 'lastChild'];\n      while (n && n.nodeType !== Node.ELEMENT_NODE) {\n        n = n[utils.SHADY_PREFIX + 'previousSibling'];\n      }\n      return n;\n    } else {\n      return this[utils.NATIVE_PREFIX + 'lastElementChild'];\n    }\n  },\n\n  /** @this {Element} */\n  get children() {\n    if (!utils.isTrackingLogicalChildNodes(this)) {\n      return this[utils.NATIVE_PREFIX + 'children'];\n    }\n    return utils.createPolyfilledHTMLCollection(Array.prototype.filter.call(\n        utils.childNodesArray(this), (n) => {\n      return (n.nodeType === Node.ELEMENT_NODE);\n    }));\n  },\n\n  /** @this {Element} */\n  get childElementCount() {\n    let children = this[utils.SHADY_PREFIX + 'children'];\n    if(children) {\n      return children.length;\n    }\n    return 0;\n  }\n\n});\n\nexport const QueryPatches = utils.getOwnPropertyDescriptors({\n  // TODO(sorvell): consider doing native QSA and filtering results.\n  /**\n   * @this {Element}\n   * @param  {string} selector\n   */\n  querySelector(selector) {\n    // match selector and halt on first result.\n    let result = query(this, function(n) {\n      return utils.matchesSelector(n, selector);\n    }, function(n) {\n      return Boolean(n);\n    })[0];\n    return result || null;\n  },\n\n  /**\n   * @this {Element}\n   * @param  {string} selector\n   * @param  {boolean} useNative\n   */\n  // TODO(sorvell): `useNative` option relies on native querySelectorAll and\n  // misses distributed nodes, see\n  // https://github.com/webcomponents/shadydom/pull/210#issuecomment-361435503\n  querySelectorAll(selector, useNative) {\n    if (useNative) {\n      const o = Array.prototype.slice.call(this[utils.NATIVE_PREFIX + 'querySelectorAll'](selector));\n      const root = this[utils.SHADY_PREFIX + 'getRootNode']();\n      return o.filter(e => e[utils.SHADY_PREFIX + 'getRootNode']() == root);\n    }\n    return query(this, function(n) {\n      return utils.matchesSelector(n, selector);\n    });\n  }\n\n});\n\n// In preferPerformance mode, create a custom `ParentNodeDocumentOrFragment`\n// that optionally does not mixin querySelector/All; this is a performance\n// optimization. In noPatch, we need to keep the query patches here in order to\n// ensure the query API is available on the wrapper\nexport const ParentNodeDocumentOrFragmentPatches =\n  (utils.settings.preferPerformance && !utils.settings.noPatch) ?\n  Object.assign({}, ParentNodePatches) : ParentNodePatches;\n\nObject.assign(ParentNodePatches, QueryPatches);","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport * as utils from '../utils.js';\nimport { query } from './ParentNode.js';\n\nexport const DocumentOrFragmentPatches = utils.getOwnPropertyDescriptors({\n\n  /**\n   * @this {Element}\n   * @param {string} id\n   */\n  getElementById(id) {\n    if (id === '') {\n      return null;\n    }\n    let result = query(this, function(n) {\n      return n.id == id;\n    }, function(n) {\n      return Boolean(n);\n    })[0];\n    return result || null;\n  }\n\n});","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {ownerShadyRootForNode} from '../attach-shadow.js';\n\nfunction getDocumentActiveElement() {\n  if (utils.settings.hasDescriptors) {\n    return document[utils.NATIVE_PREFIX + 'activeElement'];\n  } else {\n    return document.activeElement;\n  }\n}\n\nexport const DocumentOrShadowRootPatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Document|ShadowRoot} */\n  get activeElement() {\n    let active = getDocumentActiveElement();\n    // In IE11, activeElement might be an empty object if the document is\n    // contained in an iframe.\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10998788/\n    if (!active || !active.nodeType) {\n      return null;\n    }\n    let isShadyRoot = !!(utils.isShadyRoot(this));\n    if (this !== document) {\n      // If this node isn't a document or shady root, then it doesn't have\n      // an active element.\n      if (!isShadyRoot) {\n        return null;\n      }\n      // If this shady root's host is the active element or the active\n      // element is not a descendant of the host (in the composed tree),\n      // then it doesn't have an active element.\n      if (this.host === active ||\n          !this.host[utils.NATIVE_PREFIX + 'contains'](active)) {\n        return null;\n      }\n    }\n    // This node is either the document or a shady root of which the active\n    // element is a (composed) descendant of its host; iterate upwards to\n    // find the active element's most shallow host within it.\n    let activeRoot = ownerShadyRootForNode(active);\n    while (activeRoot && activeRoot !== this) {\n      active = activeRoot.host;\n      activeRoot = ownerShadyRootForNode(active);\n    }\n    if (this === document) {\n      // This node is the document, so activeRoot should be null.\n      return activeRoot ? null : active;\n    } else {\n      // This node is a non-document shady root, and it should be\n      // activeRoot.\n      return activeRoot === this ? active : null;\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {getInnerHTML} from '../innerHTML.js';\nimport {clearNode} from './Node.js';\n\n/** @type {!Document} */\nconst inertDoc = document.implementation.createHTMLDocument('inert');\n\nexport const ElementOrShadowRootPatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Element} */\n  get innerHTML() {\n    if (utils.isTrackingLogicalChildNodes(this)) {\n      const content = this.localName === 'template' ?\n      /** @type {HTMLTemplateElement} */(this).content : this;\n      return getInnerHTML(content, utils.childNodesArray);\n    } else {\n      return this[utils.NATIVE_PREFIX + 'innerHTML'];\n    }\n  },\n\n  /**\n   * @this {Element}\n   * @param {string} value\n   */\n  set innerHTML(value) {\n    if (this.localName === 'template') {\n      this[utils.NATIVE_PREFIX + 'innerHTML'] = value;\n    } else {\n      clearNode(this);\n      const containerName = this.localName || 'div';\n      let htmlContainer;\n      if (!this.namespaceURI || this.namespaceURI === inertDoc.namespaceURI) {\n        htmlContainer = inertDoc.createElement(containerName);\n      } else {\n        htmlContainer = inertDoc.createElementNS(this.namespaceURI, containerName);\n      }\n      if (utils.settings.hasDescriptors) {\n        htmlContainer[utils.NATIVE_PREFIX + 'innerHTML'] = value;\n      } else {\n        htmlContainer.innerHTML = value;\n      }\n      let firstChild;\n      while ((firstChild = htmlContainer[utils.SHADY_PREFIX + 'firstChild'])) {\n        this[utils.SHADY_PREFIX + 'insertBefore'](firstChild);\n      }\n    }\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\n\nexport const ShadowRootPatches = utils.getOwnPropertyDescriptors({\n\n  /**\n   * @this {ShadowRoot}\n   * @param {string} type\n   * @param {Function} fn\n   * @param {Object|boolean=} optionsOrCapture\n   */\n  addEventListener(type, fn, optionsOrCapture) {\n    if (typeof optionsOrCapture !== 'object') {\n      optionsOrCapture = {\n        capture: Boolean(optionsOrCapture)\n      }\n    }\n    // Note, `__shadyTarget` may already be set if an event was added on a <slot> child\n    optionsOrCapture.__shadyTarget = optionsOrCapture.__shadyTarget || this;\n    this.host[utils.SHADY_PREFIX + 'addEventListener'](type, fn, optionsOrCapture);\n  },\n\n  /**\n   * @this {ShadowRoot}\n   * @param {string} type\n   * @param {Function} fn\n   * @param {Object|boolean=} optionsOrCapture\n   */\n  removeEventListener(type, fn, optionsOrCapture) {\n    if (typeof optionsOrCapture !== 'object') {\n      optionsOrCapture = {\n        capture: Boolean(optionsOrCapture)\n      }\n    }\n    // Note, `__shadyTarget` may already be set if an event was added on a <slot> child\n    optionsOrCapture.__shadyTarget = optionsOrCapture.__shadyTarget || this;\n    this.host[utils.SHADY_PREFIX + 'removeEventListener'](type, fn, optionsOrCapture);\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {NodePatches} from './patches/Node.js';\nimport {OutsideDescriptors, InsideDescriptors, TextContentInnerHTMLDescriptors} from './patch-instances.js';\nimport {ParentNodePatches} from './patches/ParentNode.js';\nimport {DocumentOrFragmentPatches} from './patches/DocumentOrFragment.js';\nimport {DocumentOrShadowRootPatches} from './patches/DocumentOrShadowRoot.js';\nimport {ElementOrShadowRootPatches} from './patches/ElementOrShadowRoot.js';\nimport {ShadowRootPatches} from './patches/ShadowRoot.js';\n\n/**\n * @param {!Object} proto\n * @param {string=} prefix\n */\nconst patchShadyAccessors = (proto, prefix) => {\n  utils.patchProperties(proto, ShadowRootPatches, prefix);\n  utils.patchProperties(proto, DocumentOrShadowRootPatches, prefix);\n  utils.patchProperties(proto, ElementOrShadowRootPatches, prefix);\n  // We ensure ParentNode accessors since these do not exist in Edge/IE on DocumentFragments.\n  utils.patchProperties(proto, ParentNodePatches, prefix);\n  // Ensure `shadowRoot` has basic descriptors when we cannot rely\n  // on them coming from DocumentFragment.\n  //\n  // Case 1, noPatching: Because we want noPatch ShadyRoots to have native property\n  // names so that they do not have to be wrapped...\n  // When we do *not* patch Node/DocumentFragment.prototype\n  // we must manually install those properties on ShadyRoot's prototype.\n  // Note, it's important to only install these in this mode so as not to stomp\n  // over CustomElements polyfill's patches on Node/DocumentFragment methods.\n  if (utils.settings.noPatch && !prefix) {\n    utils.patchProperties(proto, NodePatches, prefix);\n    utils.patchProperties(proto, DocumentOrFragmentPatches, prefix);\n  // Case 2, bad descriptors: Ensure accessors are on ShadowRoot.\n  // These descriptors are normally used for instance patching but because\n  // ShadyRoot can always be patched, just do it to the prototype.\n  } else if (!utils.settings.hasDescriptors) {\n    utils.patchProperties(proto, OutsideDescriptors);\n    utils.patchProperties(proto, InsideDescriptors);\n    utils.patchProperties(proto, TextContentInnerHTMLDescriptors);\n  }\n}\n\nexport const patchShadyRoot = (proto) => {\n  proto.__proto__ = DocumentFragment.prototype;\n\n  // patch both prefixed and not, even when noPatch == true.\n  patchShadyAccessors(proto, utils.SHADY_PREFIX);\n  patchShadyAccessors(proto);\n\n  // Ensure native properties are all safely wrapped since ShadowRoot is not an\n  // actual DocumentFragment instance.\n  Object.defineProperties(proto, {\n    nodeType: {\n      value: Node.DOCUMENT_FRAGMENT_NODE,\n      configurable: true\n    },\n    nodeName: {\n      value: '#document-fragment',\n      configurable: true\n    },\n    nodeValue: {\n      value: null,\n      configurable: true\n    }\n  });\n\n  // make undefined\n  [\n    'localName',\n    'namespaceURI',\n    'prefix'\n  ].forEach((prop) => {\n    Object.defineProperty(proto, prop, {\n      value: undefined,\n      configurable: true\n    });\n  });\n\n  // defer properties to host\n  [\n    'ownerDocument',\n    'baseURI',\n    'isConnected'\n  ].forEach((prop) => {\n    Object.defineProperty(proto, prop, {\n      /** @this {ShadowRoot} */\n      get() {\n        return this.host[prop];\n      },\n      configurable: true\n    });\n  });\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport {calculateSplices} from './array-splice.js';\nimport * as utils from './utils.js';\nimport {enqueue} from './flush.js';\nimport {ensureShadyDataForNode, shadyDataForNode} from './shady-data.js';\nimport {recordChildNodes} from './link-nodes.js';\nimport {patchShadyRoot} from './patch-shadyRoot.js';\n\n// Do not export this object. It must be passed as the first argument to the\n// ShadyRoot constructor in `attachShadow` to prevent the constructor from\n// throwing. This prevents the user from being able to manually construct a\n// ShadyRoot (i.e. `new ShadowRoot()`).\nconst ShadyRootConstructionToken = {};\n\nconst CATCHALL_NAME = '__catchall';\nconst SHADYROOT_NAME = 'ShadyRoot';\n\nconst MODE_CLOSED = 'closed';\n\nlet isRendering = utils.settings['deferConnectionCallbacks'] && document.readyState === 'loading';\nlet rootRendered;\n\nfunction ancestorList(node) {\n  let ancestors = [];\n  do {\n    ancestors.unshift(node);\n  } while ((node = node[utils.SHADY_PREFIX + 'parentNode']));\n  return ancestors;\n}\n\n/**\n * @extends {ShadowRoot}\n */\nclass ShadyRoot {\n\n  constructor(token, host, options) {\n    if (token !== ShadyRootConstructionToken) {\n      throw new TypeError('Illegal constructor');\n    }\n    /** @type {boolean} */\n    this._renderPending;\n    /** @type {boolean} */\n    this._hasRendered;\n    /** @type {?Array<HTMLSlotElement>} */\n    this._slotList = null;\n    /** @type {?Object<string, Array<HTMLSlotElement>>} */\n    this._slotMap;\n    /** @type {?Array<HTMLSlotElement>} */\n    this._pendingSlots;\n    this._init(host, options);\n  }\n\n  _init(host, options) {\n    // NOTE: set a fake local name so this element can be\n    // distinguished from a DocumentFragment when patching.\n    // FF doesn't allow this to be `localName`\n    /** @type {string} */\n    this._localName = SHADYROOT_NAME;\n    // root <=> host\n    this.host = host;\n    /** @type {!string|undefined} */\n    this.mode = options && options.mode;\n    recordChildNodes(this.host);\n    const hostData = ensureShadyDataForNode(this.host);\n    /** @type {!ShadyRoot} */\n    hostData.root = this;\n    hostData.publicRoot = this.mode !== MODE_CLOSED ? this : null;\n    // setup root\n    const rootData = ensureShadyDataForNode(this);\n    rootData.firstChild = rootData.lastChild =\n        rootData.parentNode = rootData.nextSibling =\n        rootData.previousSibling = null;\n    // NOTE: optimization flag, only require an asynchronous render\n    // to record parsed children if flag is not set.\n    if (utils.settings['preferPerformance']) {\n      let n;\n      while ((n = this.host[utils.NATIVE_PREFIX + 'firstChild'])) {\n        this.host[utils.NATIVE_PREFIX + 'removeChild'](n);\n      }\n    } else {\n      this._asyncRender();\n    }\n  }\n\n  _asyncRender() {\n    if (!this._renderPending) {\n      this._renderPending = true;\n      enqueue(() => this._render());\n    }\n  }\n\n  // returns the oldest renderPending ancestor root.\n  _getPendingDistributionRoot() {\n    let renderRoot;\n    let root = this;\n    while (root) {\n      if (root._renderPending) {\n        renderRoot = root;\n      }\n      root = root._getDistributionParent();\n    }\n    return renderRoot;\n  }\n\n  // Returns the shadyRoot `this.host` if `this.host`\n  // has children that require distribution.\n  _getDistributionParent() {\n    let root = this.host[utils.SHADY_PREFIX + 'getRootNode']();\n    if (!utils.isShadyRoot(root)) {\n      return;\n    }\n    const nodeData = shadyDataForNode(this.host);\n    if (nodeData && nodeData.__childSlotCount > 0) {\n      return root;\n    }\n  }\n\n  // Renders the top most render pending shadowRoot in the distribution tree.\n  // This is safe because when a distribution parent renders, all children render.\n  _render() {\n    // If this root is not pending, it needs no rendering work. Any pending\n    // parent that needs to render wll cause this root to render.\n    const root = this._renderPending && this._getPendingDistributionRoot();\n    if (root) {\n      root._renderSelf();\n    }\n  }\n\n  _flushInitial() {\n    if (!this._hasRendered && this._renderPending) {\n      this._render();\n    }\n  }\n\n  /** @override */\n  _renderSelf() {\n    // track rendering state.\n    const wasRendering = isRendering;\n    isRendering = true;\n    this._renderPending = false;\n    if (this._slotList) {\n      this._distribute();\n      this._compose();\n    }\n    // NOTE: optimization flag, only process parsed children\n    // if optimization flag is not set.\n    // on initial render remove any undistributed children.\n    if (!utils.settings['preferPerformance'] && !this._hasRendered) {\n      for (let n=this.host[utils.SHADY_PREFIX + 'firstChild']; n; n = n[utils.SHADY_PREFIX + 'nextSibling']) {\n        const data = shadyDataForNode(n);\n        if (n[utils.NATIVE_PREFIX + 'parentNode'] === this.host &&\n            (n.localName === 'slot' || !data.assignedSlot)) {\n          this.host[utils.NATIVE_PREFIX + 'removeChild'](n);\n        }\n      }\n    }\n    this._hasRendered = true;\n    isRendering = wasRendering;\n    if (rootRendered) {\n      rootRendered();\n    }\n  }\n\n  _distribute() {\n    this._validateSlots();\n    // capture # of previously assigned nodes to help determine if dirty.\n    for (let i=0, slot; i < this._slotList.length; i++) {\n      slot = this._slotList[i];\n      this._clearSlotAssignedNodes(slot);\n    }\n    // distribute host children.\n    for (let n=this.host[utils.SHADY_PREFIX + 'firstChild']; n; n=n[utils.SHADY_PREFIX + 'nextSibling']) {\n      this._distributeNodeToSlot(n);\n    }\n    // fallback content, slotchange, and dirty roots\n    for (let i=0; i < this._slotList.length; i++) {\n      const slot = this._slotList[i];\n      const slotData = shadyDataForNode(slot);\n      // distribute fallback content\n      if (!slotData.assignedNodes.length) {\n        for (let n=slot[utils.SHADY_PREFIX + 'firstChild']; n; n=n[utils.SHADY_PREFIX + 'nextSibling']) {\n          this._distributeNodeToSlot(n, slot);\n        }\n      }\n      const slotParentData = shadyDataForNode(slot[utils.SHADY_PREFIX + 'parentNode']);\n      const slotParentRoot = slotParentData && slotParentData.root;\n      if (slotParentRoot && (slotParentRoot._hasInsertionPoint() || slotParentRoot._renderPending)) {\n        slotParentRoot._renderSelf();\n      }\n      this._addAssignedToFlattenedNodes(slotData.flattenedNodes,\n        slotData.assignedNodes);\n      let prevAssignedNodes = slotData._previouslyAssignedNodes;\n      if (prevAssignedNodes) {\n        for (let i=0; i < prevAssignedNodes.length; i++) {\n          shadyDataForNode(prevAssignedNodes[i])._prevAssignedSlot = null;\n        }\n        slotData._previouslyAssignedNodes = null;\n        // dirty if previously less assigned nodes than previously assigned.\n        if (prevAssignedNodes.length > slotData.assignedNodes.length) {\n          slotData.dirty = true;\n        }\n      }\n      /* Note: A slot is marked dirty whenever a node is newly assigned to it\n      or a node is assigned to a different slot (done in `_distributeNodeToSlot`)\n      or if the number of nodes assigned to the slot has decreased (done above);\n      */\n      if (slotData.dirty) {\n        slotData.dirty = false;\n        this._fireSlotChange(slot);\n      }\n    }\n  }\n\n  /**\n   * Distributes given `node` to the appropriate slot based on its `slot`\n   * attribute. If `forcedSlot` is given, then the node is distributed to the\n   * `forcedSlot`.\n   * Note: slot to which the node is assigned will be marked dirty for firing\n   * `slotchange`.\n   * @param {Node} node\n   * @param {Node=} forcedSlot\n   *\n   */\n  _distributeNodeToSlot(node, forcedSlot) {\n    const nodeData = ensureShadyDataForNode(node);\n    let oldSlot = nodeData._prevAssignedSlot;\n    nodeData._prevAssignedSlot = null;\n    let slot = forcedSlot;\n    if (!slot) {\n      let name = node[utils.SHADY_PREFIX + 'slot'] || CATCHALL_NAME;\n      const list = this._slotMap[name];\n      slot = list && list[0];\n    }\n    if (slot) {\n      const slotData = ensureShadyDataForNode(slot);\n      slotData.assignedNodes.push(node);\n      nodeData.assignedSlot = slot;\n    } else {\n      nodeData.assignedSlot = undefined;\n    }\n    if (oldSlot !== nodeData.assignedSlot) {\n      if (nodeData.assignedSlot) {\n        ensureShadyDataForNode(nodeData.assignedSlot).dirty = true;\n      }\n    }\n  }\n\n  /**\n   * Clears the assignedNodes tracking data for a given `slot`. Note, the current\n   * assigned node data is tracked (via _previouslyAssignedNodes and\n   * _prevAssignedSlot) to see if `slotchange` should fire. This data may be out\n   *  of date at this time because the assigned nodes may have already been\n   * distributed to another root. This is ok since this data is only used to\n   * track changes.\n   * @param {HTMLSlotElement} slot\n   */\n  _clearSlotAssignedNodes(slot) {\n    const slotData = shadyDataForNode(slot);\n    let n$ = slotData.assignedNodes;\n    slotData.assignedNodes = [];\n    slotData.flattenedNodes = [];\n    slotData._previouslyAssignedNodes = n$;\n    if (n$) {\n      for (let i=0; i < n$.length; i++) {\n        let n = shadyDataForNode(n$[i]);\n        n._prevAssignedSlot = n.assignedSlot;\n        // only clear if it was previously set to this slot;\n        // this helps ensure that if the node has otherwise been distributed\n        // ignore it.\n        if (n.assignedSlot === slot) {\n          n.assignedSlot = null;\n        }\n      }\n    }\n  }\n\n  _addAssignedToFlattenedNodes(flattened, assigned) {\n    for (let i=0, n; (i<assigned.length) && (n=assigned[i]); i++) {\n      if (n.localName == 'slot') {\n        const nestedAssigned = shadyDataForNode(n).assignedNodes;\n        if (nestedAssigned && nestedAssigned.length) {\n          this._addAssignedToFlattenedNodes(flattened, nestedAssigned);\n        }\n      } else {\n        flattened.push(assigned[i]);\n      }\n    }\n  }\n\n  _fireSlotChange(slot) {\n    // NOTE: cannot bubble correctly here so not setting bubbles: true\n    // Safari tech preview does not bubble but chrome does\n    // Spec says it bubbles (https://dom.spec.whatwg.org/#mutation-observers)\n    slot[utils.NATIVE_PREFIX + 'dispatchEvent'](new Event('slotchange'));\n    const slotData = shadyDataForNode(slot);\n    if (slotData.assignedSlot) {\n      this._fireSlotChange(slotData.assignedSlot);\n    }\n  }\n\n  // Reify dom such that it is at its correct rendering position\n  // based on logical distribution.\n  // NOTE: here we only compose parents of <slot> elements and not the\n  // shadowRoot into the host. The latter is performend via a fast path\n  // in the `logical-mutation`.insertBefore.\n  _compose() {\n    const slots = this._slotList;\n    let composeList = [];\n    for (let i=0; i < slots.length; i++) {\n      const parent = slots[i][utils.SHADY_PREFIX + 'parentNode'];\n      /* compose node only if:\n        (1) parent does not have a shadowRoot since shadowRoot has already\n        composed into the host\n        (2) we're not already composing it\n        [consider (n^2) but rare better than Set]\n      */\n      const parentData = shadyDataForNode(parent);\n      if (!(parentData && parentData.root) &&\n        composeList.indexOf(parent) < 0) {\n        composeList.push(parent);\n      }\n    }\n    for (let i=0; i < composeList.length; i++) {\n      const node = composeList[i];\n      const targetNode = node === this ? this.host : node;\n      this._updateChildNodes(targetNode, this._composeNode(node));\n    }\n  }\n\n  // Returns the list of nodes which should be rendered inside `node`.\n  _composeNode(node) {\n    let children = [];\n    for (let n=node[utils.SHADY_PREFIX + 'firstChild']; n; n = n[utils.SHADY_PREFIX + 'nextSibling']) {\n      // Note: if we see a slot here, the nodes are guaranteed to need to be\n      // composed here. This is because if there is redistribution, it has\n      // already been handled by this point.\n      if (this._isInsertionPoint(n)) {\n        let flattenedNodes = shadyDataForNode(n).flattenedNodes;\n        for (let j = 0; j < flattenedNodes.length; j++) {\n          let distributedNode = flattenedNodes[j];\n            children.push(distributedNode);\n        }\n      } else {\n        children.push(n);\n      }\n    }\n    return children;\n  }\n\n  _isInsertionPoint(node) {\n      return node.localName == 'slot';\n    }\n\n  // Ensures that the rendered node list inside `container` is `children`.\n  _updateChildNodes(container, children) {\n    let composed = utils.nativeChildNodesArray(container);\n    let splices = calculateSplices(children, composed);\n    // process removals\n    for (let i=0, d=0, s; (i<splices.length) && (s=splices[i]); i++) {\n      for (let j=0, n; (j < s.removed.length) && (n=s.removed[j]); j++) {\n        // check if the node is still where we expect it is before trying\n        // to remove it; this can happen if we move a node and\n        // then schedule its previous host for distribution resulting in\n        // the node being removed here.\n        if (n[utils.NATIVE_PREFIX + 'parentNode'] === container) {\n          container[utils.NATIVE_PREFIX + 'removeChild'](n);\n        }\n        // TODO(sorvell): avoid the need for splicing here.\n        composed.splice(s.index + d, 1);\n      }\n      d -= s.addedCount;\n    }\n    // process adds\n    for (let i=0, s, next; (i<splices.length) && (s=splices[i]); i++) { //eslint-disable-line no-redeclare\n      next = composed[s.index];\n      for (let j=s.index, n; j < s.index + s.addedCount; j++) {\n        n = children[j];\n        container[utils.NATIVE_PREFIX + 'insertBefore'](n, next);\n        composed.splice(j, 0, n);\n      }\n    }\n  }\n\n  _ensureSlotData() {\n    this._pendingSlots = this._pendingSlots || [];\n    this._slotList = this._slotList || [];\n    this._slotMap = this._slotMap || {};\n  }\n\n  _addSlots(slots) {\n    this._ensureSlotData();\n    this._pendingSlots.push(...slots);\n  }\n\n  _validateSlots() {\n    if (this._pendingSlots && this._pendingSlots.length) {\n      this._mapSlots(this._pendingSlots);\n      this._pendingSlots = [];\n    }\n  }\n\n  /**\n   * Adds the given slots. Slots are maintained in an dom-ordered list.\n   * In addition a map of name to slot is updated.\n   */\n  _mapSlots(slots) {\n    let slotNamesToSort;\n    for (let i=0; i < slots.length; i++) {\n      const slot = slots[i];\n      // ensure insertionPoints's and their parents have logical dom info.\n      // save logical tree info\n      // a. for shadyRoot\n      // b. for insertion points (fallback)\n      // c. for parents of insertion points\n      recordChildNodes(slot);\n      const slotParent = slot[utils.SHADY_PREFIX + 'parentNode'];\n      recordChildNodes(slotParent);\n      const slotParentData = shadyDataForNode(slotParent);\n      slotParentData.__childSlotCount = (slotParentData.__childSlotCount || 0) + 1;\n      let name = this._nameForSlot(slot);\n      if (this._slotMap[name]) {\n        slotNamesToSort = slotNamesToSort || {};\n        slotNamesToSort[name] = true;\n        this._slotMap[name].push(slot);\n      } else {\n        this._slotMap[name] = [slot];\n      }\n      this._slotList.push(slot);\n    }\n    if (slotNamesToSort) {\n      for (let n in slotNamesToSort) {\n        this._slotMap[n] = this._sortSlots(this._slotMap[n]);\n      }\n    }\n  }\n\n  _nameForSlot(slot) {\n    const name = slot['name'] || slot.getAttribute('name') || CATCHALL_NAME;\n    slot.__slotName = name;\n    return name;\n  }\n\n  /**\n   * Slots are kept in an ordered list. Slots with the same name\n   * are sorted here by tree order.\n   */\n  _sortSlots(slots) {\n    // NOTE: Cannot use `compareDocumentPosition` because it's not polyfilled,\n    // but the code here could be used to polyfill the preceeding/following info\n    // in `compareDocumentPosition`.\n    return slots.sort((a, b) => {\n      let listA = ancestorList(a);\n      let listB = ancestorList(b);\n      for (var i=0; i < listA.length; i++) {\n        let nA = listA[i];\n        let nB = listB[i];\n        if (nA !== nB) {\n          let c$ = utils.childNodesArray(nA[utils.SHADY_PREFIX + 'parentNode']);\n          return c$.indexOf(nA) - c$.indexOf(nB);\n        }\n      }\n    });\n  }\n\n  /**\n   * Removes from tracked slot data any slots contained within `container` and\n   * then updates the tracked data (_slotList and _slotMap).\n   * Any removed slots also have their `assignedNodes` removed from comopsed dom.\n   */\n  _removeContainedSlots(container) {\n    if (!this._slotList) {\n      return;\n    }\n    this._validateSlots();\n    let didRemove;\n    const map = this._slotMap;\n    for (let n in map) {\n      const slots = map[n];\n      for (let i=0; i < slots.length; i++) {\n        const slot = slots[i];\n        if (utils.contains(container, slot)) {\n          slots.splice(i, 1);\n          const x = this._slotList.indexOf(slot);\n          if (x >= 0) {\n            this._slotList.splice(x, 1);\n            const slotParentData = shadyDataForNode(slot[utils.SHADY_PREFIX + 'parentNode']);\n            if (slotParentData && slotParentData.__childSlotCount) {\n              slotParentData.__childSlotCount--;\n            }\n          }\n          i--;\n          this._removeFlattenedNodes(slot);\n          didRemove = true;\n        }\n      }\n    }\n    return didRemove;\n  }\n\n  _updateSlotName(slot) {\n    if (!this._slotList) {\n      return;\n    }\n    // make sure slotMap is initialized with this slot\n    this._validateSlots();\n    const oldName = slot.__slotName;\n    const name = this._nameForSlot(slot);\n    if (name === oldName) {\n      return;\n    }\n    // remove from existing tracking\n    let slots = this._slotMap[oldName];\n    const i = slots.indexOf(slot);\n    if (i >= 0) {\n      slots.splice(i, 1);\n    }\n    // add to new location and sort if nedessary\n    let list = this._slotMap[name] || (this._slotMap[name] = []);\n    list.push(slot);\n    if (list.length > 1) {\n      this._slotMap[name] = this._sortSlots(list);\n    }\n  }\n\n  _removeFlattenedNodes(slot) {\n    const data = shadyDataForNode(slot);\n    let n$ = data.flattenedNodes;\n    if (n$) {\n      for (let i=0; i<n$.length; i++) {\n        let node = n$[i];\n        let parent = node[utils.NATIVE_PREFIX + 'parentNode'];\n        if (parent) {\n          parent[utils.NATIVE_PREFIX + 'removeChild'](node);\n        }\n      }\n    }\n    data.flattenedNodes = [];\n    data.assignedNodes = [];\n  }\n\n  _hasInsertionPoint() {\n    this._validateSlots();\n    return Boolean(this._slotList && this._slotList.length);\n  }\n}\n\npatchShadyRoot(ShadyRoot.prototype);\nexport {ShadyRoot};\n\n/**\n  Implements a pared down version of ShadowDOM's scoping, which is easy to\n  polyfill across browsers.\n*/\nexport const attachShadow = (host, options) => {\n  if (!host) {\n    throw new Error('Must provide a host.');\n  }\n  if (!options) {\n    throw new Error('Not enough arguments.');\n  }\n  let root;\n  // Optimization for booting up a shadowRoot from a fragment rather than\n  // creating one.\n  if (options['shadyUpgradeFragment'] && utils.canUpgrade()) {\n    root = options['shadyUpgradeFragment'];\n    root.__proto__ = ShadowRoot.prototype;\n    root._init(host, options);\n    recordChildNodes(root, root);\n    // Note: qsa is native when used with noPatch.\n    /** @type {?NodeList<Element>} */\n    const slotsAdded = root['__noInsertionPoint'] ? null : root.querySelectorAll('slot');\n    // Reset scoping information so normal scoing rules apply after this.\n    root['__noInsertionPoint'] = undefined;\n    // if a slot is added, must render containing root.\n    if (slotsAdded && slotsAdded.length) {\n      root._addSlots(slotsAdded);\n      root._asyncRender();\n    }\n    /** @type {ShadowRoot} */(root).host[utils.NATIVE_PREFIX + 'appendChild'](root);\n  } else {\n    root = new ShadyRoot(ShadyRootConstructionToken, host, options);\n  }\n  return root;\n}\n\n// Mitigate connect/disconnect spam by wrapping custom element classes.\nif (window['customElements'] && utils.settings.inUse && !utils.settings['preferPerformance']) {\n\n  // process connect/disconnect after roots have rendered to avoid\n  // issues with reaction stack.\n  let connectMap = new Map();\n  rootRendered = function() {\n    // allow elements to connect\n    // save map state (without needing polyfills on IE11)\n    const r = [];\n    connectMap.forEach((v, k) => {\n      r.push([k, v]);\n    });\n    connectMap.clear();\n    for (let i=0; i < r.length; i++) {\n      const e = r[i][0], value = r[i][1];\n      if (value) {\n        e['__shadydom_connectedCallback']();\n      } else {\n        e['__shadydom_disconnectedCallback']();\n      }\n    }\n  }\n\n  // Document is in loading state and flag is set (deferConnectionCallbacks)\n  // so process connection stack when `readystatechange` fires.\n  if (isRendering) {\n    document.addEventListener('readystatechange', () => {\n      isRendering = false;\n      rootRendered();\n    }, {once: true});\n  }\n\n  /*\n   * (1) elements can only be connected/disconnected if they are in the expected\n   * state.\n   * (2) never run connect/disconnect during rendering to avoid reaction stack issues.\n   */\n  const ManageConnect = (base, connected, disconnected) => {\n    let counter = 0;\n    const connectFlag = `__isConnected${counter++}`;\n    if (connected || disconnected) {\n\n      /** @this {!HTMLElement} */\n      base.prototype.connectedCallback = base.prototype['__shadydom_connectedCallback'] = function() {\n        // if rendering defer connected\n        // otherwise connect only if we haven't already\n        if (isRendering) {\n          connectMap.set(this, true);\n        } else if (!this[connectFlag]) {\n          this[connectFlag] = true;\n          if (connected) {\n            connected.call(this);\n          }\n        }\n      }\n\n      /** @this {!HTMLElement} */\n      base.prototype.disconnectedCallback = base.prototype['__shadydom_disconnectedCallback'] = function() {\n        // if rendering, cancel a pending connection and queue disconnect,\n        // otherwise disconnect only if a connection has been allowed\n        if (isRendering) {\n          // This is necessary only because calling removeChild\n          // on a node that requires distribution leaves it in the DOM tree\n          // until distribution.\n          // NOTE: remember this is checking the patched isConnected to determine\n          // if the node is in the logical tree.\n          if (!this.isConnected) {\n            connectMap.set(this, false);\n          }\n        } else if (this[connectFlag]) {\n          this[connectFlag] = false;\n          if (disconnected) {\n            disconnected.call(this);\n          }\n        }\n      }\n    }\n\n    return base;\n  }\n\n  const originalDefine = window['customElements']['define'];\n  const define = function(name, constructor) {\n    const connected = constructor.prototype.connectedCallback;\n    const disconnected = constructor.prototype.disconnectedCallback;\n    originalDefine.call(window['customElements'], name,\n        ManageConnect(constructor, connected, disconnected));\n    // unpatch connected/disconnected on class; custom elements tears this off\n    // so the patch is maintained, but if the user calls these methods for\n    // e.g. testing, they will be as expected.\n    constructor.prototype.connectedCallback = connected;\n    constructor.prototype.disconnectedCallback = disconnected;\n  }\n  // Note, it would be better to only patch the CustomElementRegistry.prototype,\n  // but ShadyCSS patches define directly.\n  window.customElements.define = define;\n  // Still patch the registry directly since Safari 10 loses the patch\n  // unless this is done.\n  Object.defineProperty(window['CustomElementRegistry'].prototype, 'define', {\n    value: define,\n    configurable: true\n  });\n}\n\n/** @return {!ShadyRoot|undefined} */\nexport const ownerShadyRootForNode = (node) => {\n  let root = node[utils.SHADY_PREFIX + 'getRootNode']();\n  if (utils.isShadyRoot(root)) {\n    return root;\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {eventPropertyNames} from './patch-events.js';\n\n/** @implements {IWrapper} */\nclass Wrapper {\n\n  /** @param {!Node} node */\n  constructor(node) {\n    this.node = node;\n  }\n\n  // node\n  addEventListener(name, fn, options) {\n    return this.node[utils.SHADY_PREFIX + 'addEventListener'](name, fn, options);\n  }\n\n  removeEventListener(name, fn, options) {\n    return this.node[utils.SHADY_PREFIX + 'removeEventListener'](name, fn, options);\n  }\n\n  appendChild(node) {\n    return this.node[utils.SHADY_PREFIX + 'appendChild'](node);\n  }\n\n  insertBefore(node, ref_node) {\n    return this.node[utils.SHADY_PREFIX + 'insertBefore'](node, ref_node);\n  }\n\n  removeChild(node) {\n    return this.node[utils.SHADY_PREFIX + 'removeChild'](node);\n  }\n\n  replaceChild(node, ref_node) {\n    return this.node[utils.SHADY_PREFIX + 'replaceChild'](node, ref_node);\n  }\n\n  cloneNode(deep) {\n    return this.node[utils.SHADY_PREFIX + 'cloneNode'](deep);\n  }\n\n  getRootNode(options) {\n    return this.node[utils.SHADY_PREFIX + 'getRootNode'](options);\n  }\n\n  contains(node) {\n    return this.node[utils.SHADY_PREFIX + 'contains'](node);\n  }\n\n  dispatchEvent(event) {\n    return this.node[utils.SHADY_PREFIX + 'dispatchEvent'](event);\n  }\n\n  // element\n  setAttribute(name, value) {\n    this.node[utils.SHADY_PREFIX + 'setAttribute'](name, value);\n  }\n\n  // NOTE: not needed, just here for balance\n  getAttribute(name) {\n    return this.node[utils.NATIVE_PREFIX + 'getAttribute'](name);\n  }\n\n  // NOTE: not needed, just here for balance\n  hasAttribute(name) {\n    return this.node[utils.NATIVE_PREFIX + 'hasAttribute'](name);\n  }\n\n  removeAttribute(name) {\n    this.node[utils.SHADY_PREFIX + 'removeAttribute'](name);\n  }\n\n  attachShadow(options) {\n    return this.node[utils.SHADY_PREFIX + 'attachShadow'](options);\n  }\n\n  /** @return {!Node|undefined} */\n  get activeElement() {\n    if (utils.isShadyRoot(this.node) || this.node.nodeType === Node.DOCUMENT_NODE) {\n      const e = this.node[utils.SHADY_PREFIX + 'activeElement'];\n      return e;\n    }\n  }\n\n  /**\n   * Installed for compatibility with browsers (older Chrome/Safari) that do\n   * not have a configurable `activeElement` accessor. Enables noPatch and\n   * patch mode both to consistently use ShadyDOM.wrap(document)._activeElement.\n   * @override\n   * @return {!Node|undefined}\n   */\n  get _activeElement() {\n    return this.activeElement;\n  }\n\n  // NOTE: not needed, just here for balance\n  /** @override */\n  focus() {\n    this.node[utils.NATIVE_PREFIX + 'focus']();\n  }\n\n  blur() {\n    this.node[utils.SHADY_PREFIX + 'blur']();\n  }\n\n  // document\n  importNode(node, deep) {\n    if (this.node.nodeType === Node.DOCUMENT_NODE) {\n      return this.node[utils.SHADY_PREFIX + 'importNode'](node, deep);\n    }\n  }\n\n  getElementById(id) {\n    if (this.node.nodeType === Node.DOCUMENT_NODE) {\n      return this.node[utils.SHADY_PREFIX + 'getElementById'](id);\n    }\n  }\n\n  // query\n  querySelector(selector) {\n    return this.node[utils.SHADY_PREFIX + 'querySelector'](selector);\n  }\n\n  querySelectorAll(selector, useNative) {\n    return this.node[utils.SHADY_PREFIX + 'querySelectorAll'](selector, useNative);\n  }\n\n  // slot\n  assignedNodes(options) {\n    if (this.node.localName === 'slot') {\n      return this.node[utils.SHADY_PREFIX + 'assignedNodes'](options);\n    }\n  }\n\n  get host() {\n    if (utils.isShadyRoot(this.node)) {\n      return /** @type {!ShadowRoot} */(this.node).host;\n    }\n  }\n\n  get parentNode() {\n    return this.node[utils.SHADY_PREFIX + 'parentNode'];\n  }\n\n  get firstChild() {\n    return this.node[utils.SHADY_PREFIX + 'firstChild'];\n  }\n\n  get lastChild() {\n    return this.node[utils.SHADY_PREFIX + 'lastChild'];\n  }\n\n  get nextSibling() {\n    return this.node[utils.SHADY_PREFIX + 'nextSibling'];\n  }\n\n  get previousSibling() {\n    return this.node[utils.SHADY_PREFIX + 'previousSibling'];\n  }\n\n  get childNodes() {\n    return this.node[utils.SHADY_PREFIX + 'childNodes'];\n  }\n\n  get parentElement() {\n    return this.node[utils.SHADY_PREFIX + 'parentElement'];\n  }\n\n  get firstElementChild() {\n    return this.node[utils.SHADY_PREFIX + 'firstElementChild'];\n  }\n\n  get lastElementChild() {\n    return this.node[utils.SHADY_PREFIX + 'lastElementChild'];\n  }\n\n  get nextElementSibling() {\n    return this.node[utils.SHADY_PREFIX + 'nextElementSibling'];\n  }\n\n  get previousElementSibling() {\n    return this.node[utils.SHADY_PREFIX + 'previousElementSibling'];\n  }\n\n  get children() {\n    return this.node[utils.SHADY_PREFIX + 'children'];\n  }\n\n  get childElementCount() {\n    return this.node[utils.SHADY_PREFIX + 'childElementCount'];\n  }\n\n  get shadowRoot() {\n    return this.node[utils.SHADY_PREFIX + 'shadowRoot'];\n  }\n\n  get assignedSlot() {\n    return this.node[utils.SHADY_PREFIX + 'assignedSlot'];\n  }\n\n  get isConnected() {\n    return this.node[utils.SHADY_PREFIX + 'isConnected'];\n  }\n\n  get innerHTML() {\n    return this.node[utils.SHADY_PREFIX + 'innerHTML'];\n  }\n\n  set innerHTML(value) {\n    this.node[utils.SHADY_PREFIX + 'innerHTML'] = value;\n  }\n\n  get textContent() {\n    return this.node[utils.SHADY_PREFIX + 'textContent'];\n  }\n\n  set textContent(value) {\n    this.node[utils.SHADY_PREFIX + 'textContent'] = value;\n  }\n\n  get slot() {\n    return this.node[utils.SHADY_PREFIX + 'slot'];\n  }\n\n  set slot(value) {\n    this.node[utils.SHADY_PREFIX + 'slot'] = value;\n  }\n\n  get className() {\n    return this.node[utils.SHADY_PREFIX + 'className'];\n  }\n\n  set className(value) {\n    return this.node[utils.SHADY_PREFIX + 'className'] = value;\n  }\n\n}\n\neventPropertyNames.forEach(name => {\n  Object.defineProperty(Wrapper.prototype, name, {\n    /** @this {Wrapper} */\n    get() {\n      return this.node[utils.SHADY_PREFIX + name];\n    },\n    /** @this {Wrapper} */\n    set(value) {\n      this.node[utils.SHADY_PREFIX + name] = value;\n    },\n    configurable: true\n  });\n\n});\n\nexport {Wrapper};\n\nconst wrapperMap = new WeakMap();\n\nexport function wrap(obj) {\n  if (utils.isShadyRoot(obj) || obj instanceof Wrapper) {\n    return obj;\n  }\n  let wrapper = wrapperMap.get(obj)\n  if (!wrapper) {\n    wrapper = new Wrapper(obj);\n    wrapperMap.set(obj, wrapper);\n  }\n  return wrapper;\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {flush} from '../flush.js';\nimport {addEventListener, removeEventListener} from '../patch-events.js';\n\nexport const EventTargetPatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Node} */\n  dispatchEvent(event) {\n    flush();\n    return this[utils.NATIVE_PREFIX + 'dispatchEvent'](event);\n  },\n\n  addEventListener,\n\n  removeEventListener\n\n});","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {shadyDataForNode} from '../shady-data.js';\n\nexport const SlotablePatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Node} */\n  get assignedSlot() {\n    // Force any parent's shadowRoot to flush so that distribution occurs\n    // and this node has an assignedSlot.\n    const parent = this[utils.SHADY_PREFIX + 'parentNode'];\n    const ownerRoot = parent && parent[utils.SHADY_PREFIX + 'shadowRoot'];\n    if (ownerRoot) {\n      ownerRoot._render();\n    }\n    const nodeData = shadyDataForNode(this);\n    return nodeData && nodeData.assignedSlot || null;\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {scopeClassAttribute} from '../style-scoping.js';\nimport {shadyDataForNode} from '../shady-data.js';\nimport {attachShadow, ownerShadyRootForNode} from '../attach-shadow.js';\n\nconst doc = window.document;\n\n/**\n * Should be called whenever an attribute changes. If the `slot` attribute\n * changes, provokes rendering if necessary. If a `<slot>` element's `name`\n * attribute changes, updates the root's slot map and renders.\n * @param {Node} node\n * @param {string} name\n */\nfunction distributeAttributeChange(node, name) {\n  if (name === 'slot') {\n    const parent = node[utils.SHADY_PREFIX + 'parentNode'];\n    if (utils.hasShadowRootWithSlot(parent)) {\n      shadyDataForNode(parent).root._asyncRender();\n    }\n  } else if (node.localName === 'slot' && name === 'name') {\n    let root = ownerShadyRootForNode(node);\n    if (root) {\n      root._updateSlotName(node);\n      root._asyncRender();\n    }\n  }\n}\n\nexport const ElementPatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Element} */\n  get previousElementSibling() {\n    const nodeData = shadyDataForNode(this);\n    if (nodeData && nodeData.previousSibling !== undefined) {\n      let n = this[utils.SHADY_PREFIX + 'previousSibling'];\n      while (n && n.nodeType !== Node.ELEMENT_NODE) {\n        n = n[utils.SHADY_PREFIX + 'previousSibling'];\n      }\n      return n;\n    } else {\n      return this[utils.NATIVE_PREFIX + 'previousElementSibling'];\n    }\n  },\n\n  /** @this {Element} */\n  get nextElementSibling() {\n    const nodeData = shadyDataForNode(this);\n    if (nodeData && nodeData.nextSibling !== undefined) {\n      let n = this[utils.SHADY_PREFIX + 'nextSibling'];\n      while (n && n.nodeType !== Node.ELEMENT_NODE) {\n        n = n[utils.SHADY_PREFIX + 'nextSibling'];\n      }\n      return n;\n    } else {\n      return this[utils.NATIVE_PREFIX + 'nextElementSibling'];\n    }\n  },\n\n  /** @this {Element} */\n  get slot() {\n    return this.getAttribute('slot');\n  },\n\n  /** @this {Element} */\n  set slot(value) {\n    this[utils.SHADY_PREFIX + 'setAttribute']('slot', value);\n  },\n\n  // Note: Can be patched on element prototype on all browsers.\n  // Must be patched on instance on browsers that support native Shadow DOM\n  // but do not have builtin accessors (old Chrome).\n  /** @this {Element} */\n  get shadowRoot() {\n    const nodeData = shadyDataForNode(this);\n    return nodeData && nodeData.publicRoot || null;\n  },\n\n  /** @this {Element} */\n  get className() {\n    return this.getAttribute('class') || '';\n  },\n\n  /**\n   * @this {Element}\n   * @param {string} value\n   */\n  set className(value) {\n    this[utils.SHADY_PREFIX + 'setAttribute']('class', value);\n  },\n\n  /**\n   * @this {Element}\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttribute(attr, value) {\n    if (this.ownerDocument !== doc) {\n      this[utils.NATIVE_PREFIX + 'setAttribute'](attr, value);\n    } else if (!scopeClassAttribute(this, attr, value)) {\n      this[utils.NATIVE_PREFIX + 'setAttribute'](attr, value);\n      distributeAttributeChange(this, attr);\n    }\n  },\n\n  /**\n   * @this {Element}\n   * @param {string} attr\n   */\n  removeAttribute(attr) {\n    this[utils.NATIVE_PREFIX + 'removeAttribute'](attr);\n    distributeAttributeChange(this, attr);\n  },\n\n  /**\n   * @this {Element}\n   * @param {!{mode: string}} options\n   */\n  attachShadow(options) {\n    return attachShadow(this, options);\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {eventPropertyNames} from '../patch-events.js';\nimport {shadyDataForNode, ensureShadyDataForNode} from '../shady-data.js';\n\nexport const HTMLElementPatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {HTMLElement} */\n  blur() {\n    const nodeData = shadyDataForNode(this);\n    let root = nodeData && nodeData.root;\n    let shadowActive = root && root.activeElement;\n    if (shadowActive) {\n      shadowActive[utils.SHADY_PREFIX + 'blur']();\n    } else {\n      this[utils.NATIVE_PREFIX + 'blur']();\n    }\n  }\n\n});\n\neventPropertyNames.forEach(property => {\n  HTMLElementPatches[property] = {\n    /** @this {HTMLElement} */\n    set: function(fn) {\n      const shadyData = ensureShadyDataForNode(this);\n      const eventName = property.substring(2);\n      if (!shadyData.__onCallbackListeners) {\n        shadyData.__onCallbackListeners = {};\n      }\n      shadyData.__onCallbackListeners[property] && this.removeEventListener(eventName, shadyData.__onCallbackListeners[property]);\n      this[utils.SHADY_PREFIX + 'addEventListener'](eventName, fn);\n      shadyData.__onCallbackListeners[property] = fn;\n    },\n    /** @this {HTMLElement} */\n    get() {\n      const shadyData = shadyDataForNode(this);\n      return shadyData && shadyData.__onCallbackListeners && shadyData.__onCallbackListeners[property];\n    },\n    configurable: true\n  };\n});\n\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {shadyDataForNode} from '../shady-data.js';\nimport {addEventListener, removeEventListener} from '../patch-events.js';\n\nexport const SlotPatches = utils.getOwnPropertyDescriptors({\n\n  /**\n   * @this {HTMLSlotElement}\n   * @param {Object=} options\n   */\n  assignedNodes(options) {\n    if (this.localName === 'slot') {\n      // Force any containing shadowRoot to flush so that distribution occurs\n      // and this node has assignedNodes.\n      const root = this[utils.SHADY_PREFIX + 'getRootNode']();\n      if (root && utils.isShadyRoot(root)) {\n        root._render();\n      }\n      const nodeData = shadyDataForNode(this);\n      return nodeData ?\n        ((options && options.flatten ? nodeData.flattenedNodes :\n          nodeData.assignedNodes) || []) :\n        [];\n    }\n  },\n\n  /**\n   * @this {HTMLSlotElement}\n   * @param {string} type\n   * @param {Function} fn\n   * @param {Object|boolean=} optionsOrCapture\n   */\n  addEventListener(type, fn, optionsOrCapture) {\n    // NOTE, check if this is a `slot` because these patches are installed on\n    // Element where browsers don't have `<slot>`\n    if (this.localName !== 'slot' || type === 'slotchange') {\n      addEventListener.call(this, type, fn, optionsOrCapture);\n    } else {\n      if (typeof optionsOrCapture !== 'object') {\n        optionsOrCapture = {\n          capture: Boolean(optionsOrCapture)\n        }\n      }\n      const parent = this[utils.SHADY_PREFIX + 'parentNode'];\n      if (!parent) {\n        throw new Error('ShadyDOM cannot attach event to slot unless it has a `parentNode`');\n      }\n      optionsOrCapture.__shadyTarget = this;\n      parent[utils.SHADY_PREFIX + 'addEventListener'](type, fn, optionsOrCapture);\n    }\n  },\n\n  /**\n   * @this {HTMLSlotElement}\n   * @param {string} type\n   * @param {Function} fn\n   * @param {Object|boolean=} optionsOrCapture\n   */\n  removeEventListener(type, fn, optionsOrCapture) {\n    // NOTE, check if this is a `slot` because these patches are installed on\n    // Element where browsers don't have `<slot>`\n    if (this.localName !== 'slot' || type === 'slotchange') {\n      removeEventListener.call(this, type, fn, optionsOrCapture);\n    } else {\n      if (typeof optionsOrCapture !== 'object') {\n        optionsOrCapture = {\n          capture: Boolean(optionsOrCapture)\n        }\n      }\n      const parent = this[utils.SHADY_PREFIX + 'parentNode'];\n      if (!parent) {\n        throw new Error('ShadyDOM cannot attach event to slot unless it has a `parentNode`');\n      }\n      optionsOrCapture.__shadyTarget = this;\n      parent[utils.SHADY_PREFIX + 'removeEventListener'](type, fn, optionsOrCapture);\n    }\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\n\nconst doc = window.document;\n\nexport const DocumentPatches = utils.getOwnPropertyDescriptors({\n\n  // note: Though not technically correct, we fast path `importNode`\n  // when called on a node not owned by the main document.\n  // This allows, for example, elements that cannot\n  // contain custom elements and are therefore not likely to contain shadowRoots\n  // to cloned natively. This is a fairly significant performance win.\n  /**\n   * @this {Document}\n   * @param {Node} node\n   * @param {boolean} deep\n   */\n  importNode(node, deep) {\n    // A template element normally has no children with shadowRoots, so make\n    // sure we always make a deep copy to correctly construct the template.content\n    if (node.ownerDocument !== doc || node.localName === 'template') {\n      return this[utils.NATIVE_PREFIX + 'importNode'](node, deep);\n    }\n    let n = this[utils.NATIVE_PREFIX + 'importNode'](node, false);\n    if (deep) {\n      for (let c=node[utils.SHADY_PREFIX + 'firstChild'], nc; c; c = c[utils.SHADY_PREFIX + 'nextSibling']) {\n        nc = this[utils.SHADY_PREFIX + 'importNode'](c, true);\n        n[utils.SHADY_PREFIX + 'appendChild'](nc);\n      }\n    }\n    return n;\n  }\n\n});","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport * as utils from '../utils.js';\nimport {addEventListener, removeEventListener} from '../patch-events.js';\n\nexport const WindowPatches = utils.getOwnPropertyDescriptors({\n\n  // NOTE: ensure these methods are bound to `window` so that `this` is correct\n  // when called directly from global context without a receiver; e.g.\n  // `addEventListener(...)`.\n  addEventListener: addEventListener.bind(window),\n\n  removeEventListener: removeEventListener.bind(window)\n\n});","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {EventTargetPatches} from './patches/EventTarget.js';\nimport {NodePatches} from './patches/Node.js';\nimport {SlotablePatches} from './patches/Slotable.js';\nimport {ParentNodePatches, ParentNodeDocumentOrFragmentPatches} from './patches/ParentNode.js';\nimport {ElementPatches} from './patches/Element.js';\nimport {ElementOrShadowRootPatches} from './patches/ElementOrShadowRoot.js';\nimport {HTMLElementPatches} from './patches/HTMLElement.js';\nimport {SlotPatches} from './patches/Slot.js';\nimport {DocumentOrFragmentPatches} from './patches/DocumentOrFragment.js';\nimport {DocumentOrShadowRootPatches} from './patches/DocumentOrShadowRoot.js';\nimport {DocumentPatches} from './patches/Document.js';\nimport {WindowPatches} from './patches/Window.js';\n\n// Some browsers (IE/Edge) have non-standard HTMLElement accessors.\nconst NonStandardHTMLElement = {};\n\nif (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'parentElement')) {\n  NonStandardHTMLElement.parentElement = NodePatches.parentElement;\n}\n\nif (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'contains')) {\n  NonStandardHTMLElement.contains = NodePatches.contains;\n}\n\nif (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'children')) {\n  NonStandardHTMLElement.children = ParentNodePatches.children;\n}\n\nif (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'innerHTML')) {\n  NonStandardHTMLElement.innerHTML = ElementOrShadowRootPatches.innerHTML;\n}\n\nif (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'className')) {\n  NonStandardHTMLElement.className = ElementPatches.className;\n}\n\n// Avoid patching `innerHTML` if it does not exist on Element (IE)\n// and we can patch accessors (hasDescriptors).\nconst ElementShouldHaveInnerHTML = !utils.settings.hasDescriptors || 'innerHTML' in Element.prototype;\n\n// setup patching\nconst patchMap = {\n  EventTarget: [EventTargetPatches],\n  Node: [NodePatches, !window.EventTarget ? EventTargetPatches : null],\n  Text: [SlotablePatches],\n  Element: [ElementPatches, ParentNodePatches, SlotablePatches,\n    ElementShouldHaveInnerHTML ? ElementOrShadowRootPatches : null,\n    !window.HTMLSlotElement ? SlotPatches : null],\n  HTMLElement: [HTMLElementPatches, NonStandardHTMLElement],\n  HTMLSlotElement: [SlotPatches],\n  DocumentFragment: [ParentNodeDocumentOrFragmentPatches, DocumentOrFragmentPatches],\n  Document: [DocumentPatches, ParentNodeDocumentOrFragmentPatches, DocumentOrFragmentPatches, DocumentOrShadowRootPatches],\n  Window: [WindowPatches]\n}\n\nconst getPatchPrototype = (name) => window[name] && window[name].prototype;\n\n// Note, must avoid patching accessors on prototypes when descriptors are not correct\n// because the CustomElements polyfill checks if these exist before patching instances.\n// CustomElements polyfill *only* cares about these accessors.\nconst disallowedNativePatches = utils.settings.hasDescriptors ? null : ['innerHTML', 'textContent'];\n\n/** @param {string=} prefix */\nexport const applyPatches = (prefix) => {\n  const disallowed = prefix ? null : disallowedNativePatches;\n  for (let p in patchMap) {\n    const proto = getPatchPrototype(p);\n    patchMap[p].forEach(patch => proto && patch &&\n        utils.patchProperties(proto, patch, prefix, disallowed));\n  }\n}\n\nexport const addShadyPrefixedProperties = () => {\n  // perform shady patches\n  applyPatches(utils.SHADY_PREFIX);\n\n  // install `_activeElement` because some browsers (older Chrome/Safari) do not have\n  // a 'configurable' `activeElement` accesssor.\n  const descriptor = DocumentOrShadowRootPatches.activeElement;\n  Object.defineProperty(document, '_activeElement', descriptor);\n\n  // On Window, we're patching `addEventListener` which is a weird auto-bound\n  // property that is not directly on the Window prototype.\n  utils.patchProperties(Window.prototype, WindowPatches, utils.SHADY_PREFIX);\n};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Patches elements that interacts with ShadyDOM\n * such that tree traversal and mutation apis act like they would under\n * ShadowDOM.\n *\n * This import enables seemless interaction with ShadyDOM powered\n * custom elements, enabling better interoperation with 3rd party code,\n * libraries, and frameworks that use DOM tree manipulation apis.\n */\n\nimport * as utils from './utils.js';\nimport {flush, enqueue} from './flush.js';\nimport {observeChildren, unobserveChildren, filterMutations} from './observe-changes.js';\nimport {addNativePrefixedProperties, nativeMethods, nativeTree} from './patch-native.js';\nimport {patchInsideElementAccessors, patchOutsideElementAccessors} from './patch-instances.js';\nimport {patchEvents, patchClick, composedPath} from './patch-events.js';\nimport {ShadyRoot} from './attach-shadow.js';\nimport {wrap, Wrapper} from './wrapper.js';\nimport {addShadyPrefixedProperties, applyPatches} from './patch-prototypes.js';\n\n\nif (utils.settings.inUse) {\n\n  let ShadyDOM = {\n    // TODO(sorvell): remove when Polymer does not depend on this.\n    'inUse': utils.settings.inUse,\n    // NOTE: old browsers without prototype accessors (very old Chrome\n    // and Safari) need manually patched accessors to properly set\n    // `innerHTML` and `textContent` when an element is:\n    // (1) inside a shadowRoot\n    // (2) does not have special (slot) children itself\n    // (3) and setting the property needs to provoke distribution (because\n    // a nested slot is added/removed)\n    'patch': (node) => {\n      patchInsideElementAccessors(node);\n      patchOutsideElementAccessors(node);\n      return node;\n    },\n    'isShadyRoot': utils.isShadyRoot,\n    'enqueue': enqueue,\n    'flush': flush,\n    'flushInitial': (root) => {\n      root._flushInitial();\n    },\n    'settings': utils.settings,\n    'filterMutations': filterMutations,\n    'observeChildren': observeChildren,\n    'unobserveChildren': unobserveChildren,\n    // Set to true to defer native custom elements connection until the\n    // document has fully parsed. This enables custom elements that create\n    // shadowRoots to be defined while the document is loading. Elements\n    // customized as they are created by the parser will successfully\n    // render with this flag on.\n    'deferConnectionCallbacks': utils.settings['deferConnectionCallbacks'],\n    // Set to true to speed up the polyfill slightly at the cost of correctness\n    // * does not patch querySelector/All on Document or DocumentFragment\n    // * does not wrap connected/disconnected callbacks to de-dup these\n    // when using native customElements\n    // * does not wait to process children of elements with shadowRoots\n    // meaning shadowRoots should not be created while an element is parsing\n    // (e.g. if a custom element that creates a shadowRoot is defined before\n    // a candidate element in the document below it.\n    'preferPerformance': utils.settings['preferPerformance'],\n    // Integration point with ShadyCSS to disable styling MutationObserver,\n    // as ShadyDOM will now handle dynamic scoping.\n    'handlesDynamicScoping': true,\n    'wrap': utils.settings.noPatch ? wrap : (n) => n,\n    'Wrapper': Wrapper,\n    'composedPath': composedPath,\n    // Set to true to avoid patching regular platform property names. When set,\n    // Shadow DOM compatible behavior is only available when accessing DOM\n    // API using `ShadyDOM.wrap`, e.g. `ShadyDOM.wrap(element).shadowRoot`.\n    // This setting provides a small performance boost, but requires all DOM API\n    // access that requires Shadow DOM behavior to be proxied via `ShadyDOM.wrap`.\n    'noPatch': utils.settings.noPatch,\n    'nativeMethods': nativeMethods,\n    'nativeTree': nativeTree\n  };\n\n  window['ShadyDOM'] = ShadyDOM;\n\n  // Modifies native prototypes for Node, Element, etc. to\n  // make native platform behavior available at prefixed names, e.g.\n  // `utils.NATIVE_PREFIX + 'firstChild'` or `__shady_native_firstChild`.\n  // This allows the standard names to be safely patched while retaining the\n  // ability for native behavior to be used. This polyfill manipulates DOM\n  // by using this saved native behavior.\n  // Note, some browsers do not have proper element descriptors for\n  // accessors; in this case, native behavior for these accessors is simulated\n  // via a TreeWalker.\n  addNativePrefixedProperties();\n\n  // Modifies native prototypes for Node, Element, etc. to make ShadowDOM\n  // behavior available at prefixed names, e.g.\n  // `utils.SHADY_PREFIX + 'firstChild` or `__shady_firstChild`. This is done\n  // so this polyfill can perform Shadow DOM style DOM manipulation.\n  // Because patching normal platform property names is optional, these prefixed\n  // names are used internally.\n  addShadyPrefixedProperties();\n\n  // Modifies native prototypes for Node, Element, etc. to patch\n  // regular platform property names to have Shadow DOM compatible API behavior.\n  // This applies the utils.SHADY_PREFIX behavior to normal names. For example,\n  // if `noPatch` is not set, then `el.__shady_firstChild` is equivalent to\n  // `el.firstChild`.\n  // NOTE, on older browsers (old Chrome/Safari) native accessors cannot be\n  // patched on prototypes (e.g. Node.prototype.firstChild cannot be modified).\n  // On these browsers, instance level patching is performed where needed; this\n  // instance patching is only done when `noPatch` is *not* set.\n  if (!utils.settings.noPatch) {\n    applyPatches();\n    // Patch click event behavior only if we're patching\n    patchClick()\n  }\n\n  // For simplicity, patch events unconditionally.\n  // Patches the event system to have Shadow DOM compatible behavior (e.g.\n  // event retargeting). When `noPatch` is set, retargeting is only available\n  // when adding event listeners and dispatching events via `ShadyDOM.wrap`\n  // (e.g. `ShadyDOM.wrap(element).addEventListener(...)`).\n  patchEvents();\n\n  window.ShadowRoot = /** @type {function(new:ShadowRoot)} */(ShadyRoot);\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n/** @unrestricted */\nclass StyleNode {\n  constructor() {\n    /** @type {number} */\n    this['start'] = 0;\n    /** @type {number} */\n    this['end'] = 0;\n    /** @type {StyleNode} */\n    this['previous'] = null;\n    /** @type {StyleNode} */\n    this['parent'] = null;\n    /** @type {Array<StyleNode>} */\n    this['rules'] = null;\n    /** @type {string} */\n    this['parsedCssText'] = '';\n    /** @type {string} */\n    this['cssText'] = '';\n    /** @type {boolean} */\n    this['atRule'] = false;\n    /** @type {number} */\n    this['type'] = 0;\n    /** @type {string} */\n    this['keyframesName'] = '';\n    /** @type {string} */\n    this['selector'] = '';\n    /** @type {string} */\n    this['parsedSelector'] = '';\n  }\n}\n\nexport {StyleNode}\n\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n  let root = new StyleNode();\n  root['start'] = 0;\n  root['end'] = text.length\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n['rules']) {\n        n['rules'] = [];\n      }\n      let p = n;\n      let previous = p['rules'][p['rules'].length - 1] || null;\n      n = new StyleNode();\n      n['start'] = i + 1;\n      n['parent'] = p;\n      n['previous'] = previous;\n      p['rules'].push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n['end'] = i + 1;\n      n = n['parent'] || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n  let t = text.substring(node['start'], node['end'] - 1);\n  node['parsedCssText'] = node['cssText'] = t.trim();\n  if (node['parent']) {\n    let ss = node['previous'] ? node['previous']['end'] : node['parent']['start'];\n    t = text.substring(ss, node['start'] - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node['parsedSelector'] = node['selector'] = t.trim();\n    node['atRule'] = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node['atRule']) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node['type'] = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node['type'] = types.KEYFRAMES_RULE;\n        node['keyframesName'] =\n          node['selector'].split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node['type'] = types.MIXIN_RULE;\n      } else {\n        node['type'] = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node['rules'];\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n/**\n * stringify parsed css.\n * @param {StyleNode} node\n * @param {boolean=} preserveProperties\n * @param {string=} text\n * @return {string}\n */\nexport function stringify(node, preserveProperties, text = '') {\n  // calc rule cssText\n  let cssText = '';\n  if (node['cssText'] || node['rules']) {\n    let r$ = node['rules'];\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node['cssText'] :\n        removeCustomProps(node['cssText']);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node['selector']) {\n      text += node['selector'] + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node['selector']) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\n/**\n * @param {Array<StyleNode>} rules\n * @return {boolean}\n */\nfunction _hasMixinRules(rules) {\n  let r = rules[0];\n  return Boolean(r) && Boolean(r['selector']) && r['selector'].indexOf(VAR_START) === 0;\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\n/** @enum {number} */\nexport const types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nconst OPEN_BRACE = '{';\nconst CLOSE_BRACE = '}';\n\n// helper regexp's\nconst RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nconst VAR_START = '--';\nconst MEDIA_START = '@media';\nconst AT_START = '@';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport const nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\nlet nativeCssVariables_;\n\n/**\n * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings\n */\nfunction calcCssVariables(settings) {\n  if (settings && settings['shimcssproperties']) {\n    nativeCssVariables_ = false;\n  } else {\n    // chrome 49 has semi-working css vars, check if box-shadow works\n    // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\n    // However, shim css custom properties are only supported with ShadyDOM enabled,\n    // so fall back on native if we do not detect ShadyDOM\n    // Edge 15: custom properties used in ::before and ::after will also be used in the parent element\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12414257/\n    nativeCssVariables_ = nativeShadow || Boolean(!navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/) &&\n      window.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n  }\n}\n\n/** @type {string | undefined} */\nexport let cssBuild;\nif (window.ShadyCSS && window.ShadyCSS.cssBuild !== undefined) {\n  cssBuild = window.ShadyCSS.cssBuild;\n}\n\n/** @type {boolean} */\nexport const disableRuntime = Boolean(window.ShadyCSS && window.ShadyCSS.disableRuntime);\n\nif (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) {\n  nativeCssVariables_ = window.ShadyCSS.nativeCss;\n} else if (window.ShadyCSS) {\n  calcCssVariables(window.ShadyCSS);\n  // reset window variable to let ShadyCSS API take its place\n  window.ShadyCSS = undefined;\n} else {\n  calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']);\n}\n\n// Hack for type error under new type inference which doesn't like that\n// nativeCssVariables is updated in a function and assigns the type\n// `function(): ?` instead of `boolean`.\nexport const nativeCssVariables = /** @type {boolean} */(nativeCssVariables_);","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gi;\nexport const MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nexport const VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nexport const ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nexport const MEDIA_MATCH = /@media\\s(.*)/;\nexport const IS_VAR = /^--/;\nexport const BRACKETED = /\\{[^}]*\\}/g;\nexport const HOST_PREFIX = '(?:^|[^.#[:])';\nexport const HOST_SUFFIX = '($|[.:[\\\\s>+~])';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {!Set<string>} */\nconst styleTextSet = new Set();\n\nexport const scopingAttribute = 'shady-unscoped';\n\n/**\n * Add a specifically-marked style to the document directly, and only one copy of that style.\n *\n * @param {!HTMLStyleElement} style\n * @return {undefined}\n */\nexport function processUnscopedStyle(style) {\n  const text = style.textContent;\n  if (!styleTextSet.has(text)) {\n    styleTextSet.add(text);\n    const newStyle = style.cloneNode(true);\n    document.head.appendChild(newStyle);\n  }\n}\n\n/**\n * Check if a style is supposed to be unscoped\n * @param {!HTMLStyleElement} style\n * @return {boolean} true if the style has the unscoping attribute\n */\nexport function isUnscopedStyle(style) {\n  return style.hasAttribute(scopingAttribute);\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables, cssBuild} from './style-settings.js';\nimport {parse, stringify, types, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {MEDIA_MATCH} from './common-regex.js';\nimport {processUnscopedStyle, isUnscopedStyle} from './unscoped-style-handler.js';\n\n/**\n * @param {string|StyleNode} rules\n * @param {function(StyleNode)=} callback\n * @return {string}\n */\nexport function toCssText (rules, callback) {\n  if (!rules) {\n    return '';\n  }\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @return {StyleNode}\n */\nexport function rulesForStyle(style) {\n  if (!style['__cssRules'] && style.textContent) {\n    style['__cssRules'] = parse(style.textContent);\n  }\n  return style['__cssRules'] || null;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\n/**\n * @param {StyleNode} rule\n * @return {boolean}\n */\nexport function isKeyframesSelector(rule) {\n  return Boolean(rule['parent']) &&\n  rule['parent']['type'] === types.KEYFRAMES_RULE;\n}\n\n/**\n * @param {StyleNode} node\n * @param {Function=} styleRuleCallback\n * @param {Function=} keyframesRuleCallback\n * @param {boolean=} onlyActiveRules\n */\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  let type = node['type'];\n  if (onlyActiveRules) {\n    if (type === types.MEDIA_RULE) {\n      let matchMedia = node['selector'].match(MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node['rules'];\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @param {Node} target\n * @param {Node} contextNode\n * @return {HTMLStyleElement}\n */\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  applyStyle(style, target, contextNode);\n  return style;\n}\n\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @return {HTMLStyleElement}\n */\nexport function createScopeStyle(cssText, moniker) {\n  let style = /** @type {HTMLStyleElement} */(document.createElement('style'));\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\n/**\n * Track the position of the last added style for placing placeholders\n * @type {Node}\n */\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\n/**\n * @param {string} moniker\n * @return {!Comment}\n */\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode['nextSibling'] : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @param {?Node} target\n * @param {?Node} contextNode\n */\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n    target.firstChild;\n  target.insertBefore(style, after);\n  if (!lastHeadApplyNode) {\n    lastHeadApplyNode = style;\n  } else {\n    // only update lastHeadApplyNode if the new style is inserted after the old lastHeadApplyNode\n    let position = style.compareDocumentPosition(lastHeadApplyNode);\n    if (position === Node.DOCUMENT_POSITION_PRECEDING) {\n      lastHeadApplyNode = style;\n    }\n  }\n}\n\n/**\n * @param {string} buildType\n * @return {boolean}\n */\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n/**\n * Walk from text[start] matching parens and\n * returns position of the outer end paren\n * @param {string} text\n * @param {number} start\n * @return {number}\n */\nexport function findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * @param {string} str\n * @param {function(string, string, string, string)} callback\n */\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\n/**\n * @param {Element} element\n * @param {string} value\n */\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (nativeShadow) {\n    element.setAttribute('class', value);\n  } else {\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(element, 'class', value);\n  }\n}\n\n/**\n * @type {function(*):*}\n */\nexport const wrap = window['ShadyDOM'] && window['ShadyDOM']['wrap'] || ((node) => node);\n\n/**\n * @param {Element | {is: string, extends: string}} element\n * @return {{is: string, typeExtension: string}}\n */\nexport function getIsExtends(element) {\n  let localName = element['localName'];\n  let is = '', typeExtension = '';\n  /*\n  NOTE: technically, this can be wrong for certain svg elements\n  with `-` in the name like `<font-face>`\n  */\n  if (localName) {\n    if (localName.indexOf('-') > -1) {\n      is = localName;\n    } else {\n      typeExtension = localName;\n      is = (element.getAttribute && element.getAttribute('is')) || '';\n    }\n  } else {\n    is = /** @type {?} */(element).is;\n    typeExtension = /** @type {?} */(element).extends;\n  }\n  return {is, typeExtension};\n}\n\n/**\n * @param {Element|DocumentFragment} element\n * @return {string}\n */\nexport function gatherStyleText(element) {\n  /** @type {!Array<string>} */\n  const styleTextParts = [];\n  const styles = /** @type {!NodeList<!HTMLStyleElement>} */(element.querySelectorAll('style'));\n  for (let i = 0; i < styles.length; i++) {\n    const style = styles[i];\n    if (isUnscopedStyle(style)) {\n      if (!nativeShadow) {\n        processUnscopedStyle(style);\n        style.parentNode.removeChild(style);\n      }\n    } else {\n      styleTextParts.push(style.textContent);\n      style.parentNode.removeChild(style);\n    }\n  }\n  return styleTextParts.join('').trim();\n}\n\n/**\n * Split a selector separated by commas into an array in a smart way\n * @param {string} selector\n * @return {!Array<string>}\n */\nexport function splitSelectorList(selector) {\n  const parts = [];\n  let part = '';\n  for (let i = 0; i >= 0 && i < selector.length; i++) {\n    // A selector with parentheses will be one complete part\n    if (selector[i] === '(') {\n      // find the matching paren\n      const end = findMatchingParen(selector, i);\n      // push the paren block into the part\n      part += selector.slice(i, end + 1);\n      // move the index to after the paren block\n      i = end;\n    } else if (selector[i] === ',') {\n      parts.push(part);\n      part = '';\n    } else {\n      part += selector[i];\n    }\n  }\n  // catch any pieces after the last comma\n  if (part) {\n    parts.push(part);\n  }\n  return parts;\n}\n\nconst CSS_BUILD_ATTR = 'css-build';\n\n/**\n * Return the polymer-css-build \"build type\" applied to this element\n *\n * @param {!HTMLElement} element\n * @return {string} Can be \"\", \"shady\", or \"shadow\"\n */\nexport function getCssBuild(element) {\n  if (cssBuild !== undefined) {\n    return /** @type {string} */(cssBuild);\n  }\n  if (element.__cssBuild === undefined) {\n    // try attribute first, as it is the common case\n    const attrValue = element.getAttribute(CSS_BUILD_ATTR);\n    if (attrValue) {\n      element.__cssBuild = attrValue;\n    } else {\n      const buildComment = getBuildComment(element);\n      if (buildComment !== '') {\n        // remove build comment so it is not needlessly copied into every element instance\n        removeBuildComment(element);\n      }\n      element.__cssBuild = buildComment;\n    }\n  }\n  return element.__cssBuild || '';\n}\n\n/**\n * Check if the given element, either a <template> or <style>, has been processed\n * by polymer-css-build.\n *\n * If so, then we can make a number of optimizations:\n * - polymer-css-build will decompose mixins into individual CSS Custom Properties,\n * so the ApplyShim can be skipped entirely.\n * - Under native ShadowDOM, the style text can just be copied into each instance\n * without modification\n * - If the build is \"shady\" and ShadyDOM is in use, the styling does not need\n * scoping beyond the shimming of CSS Custom Properties\n *\n * @param {!HTMLElement} element\n * @return {boolean}\n */\nexport function elementHasBuiltCss(element) {\n  return getCssBuild(element) !== '';\n}\n\n/**\n * For templates made with tagged template literals, polymer-css-build will\n * insert a comment of the form `<!--css-build:shadow-->`\n *\n * @param {!HTMLElement} element\n * @return {string}\n */\nexport function getBuildComment(element) {\n  const buildComment = element.localName === 'template' ?\n      /** @type {!HTMLTemplateElement} */ (element).content.firstChild :\n      element.firstChild;\n  if (buildComment instanceof Comment) {\n    const commentParts = buildComment.textContent.trim().split(':');\n    if (commentParts[0] === CSS_BUILD_ATTR) {\n      return commentParts[1];\n    }\n  }\n  return '';\n}\n\n/**\n * Check if the css build status is optimal, and do no unneeded work.\n *\n * @param {string=} cssBuild CSS build status\n * @return {boolean} css build is optimal or not\n */\nexport function isOptimalCssBuild(cssBuild = '') {\n  // CSS custom property shim always requires work\n  if (cssBuild === '' || !nativeCssVariables) {\n    return false;\n  }\n  return nativeShadow ? cssBuild === 'shadow' : cssBuild === 'shady';\n}\n\n/**\n * @param {!HTMLElement} element\n */\nfunction removeBuildComment(element) {\n  const buildComment = element.localName === 'template' ?\n      /** @type {!HTMLTemplateElement} */ (element).content.firstChild :\n      element.firstChild;\n  buildComment.parentNode.removeChild(buildComment);\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport * as StyleUtil from './style-util.js';\nimport {nativeShadow} from './style-settings.js';\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  /**\n   * Given a node and scope name, add a scoping class to each node\n   * in the tree. This facilitates transforming css into scoped rules.\n   * @param {!Node} node\n   * @param {string} scope\n   * @param {boolean=} shouldRemoveScope\n   * @deprecated\n   */\n  dom(node, scope, shouldRemoveScope) {\n    const fn = (node) => {\n      this.element(node, scope || '', shouldRemoveScope);\n    };\n    this._transformDom(node, fn);\n  }\n\n  /**\n   * Given a node and scope name, add a scoping class to each node in the tree.\n   * @param {!Node} node\n   * @param {string} scope\n   */\n  domAddScope(node, scope) {\n    const fn = (node) => {\n      this.element(node, scope || '');\n    };\n    this._transformDom(node, fn);\n  }\n\n  /**\n   * @param {!Node} startNode\n   * @param {!function(!Node)} transformer\n   */\n  _transformDom(startNode, transformer) {\n    if (startNode.nodeType === Node.ELEMENT_NODE) {\n      transformer(startNode)\n    }\n    let c$;\n    if (startNode.localName === 'template') {\n      const template = /** @type {!HTMLTemplateElement} */ (startNode);\n      // In case the template is in svg context, fall back to the node\n      // since it won't be an HTMLTemplateElement with a .content property\n      c$ = (template.content || template._content || template).childNodes;\n    } else {\n      c$ = /** @type {!ParentNode} */ (startNode).children ||\n          startNode.childNodes;\n    }\n    if (c$) {\n      for (let i = 0; i < c$.length; i++) {\n        this._transformDom(c$[i], transformer);\n      }\n    }\n  }\n\n  /**\n   * @param {?} element\n   * @param {?} scope\n   * @param {?=} shouldRemoveScope\n   */\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  /**\n   * Given a node, replace the scoping class to each subnode in the tree.\n   * @param {!Node} node\n   * @param {string} oldScope\n   * @param {string} newScope\n   */\n  domReplaceScope(node, oldScope, newScope) {\n    const fn = (node) => {\n      this.element(node, oldScope, true);\n      this.element(node, newScope);\n    };\n    this._transformDom(node, fn);\n  }\n  /**\n   * Given a node, remove the scoping class to each subnode in the tree.\n   * @param {!Node} node\n   * @param {string} oldScope\n   */\n  domRemoveScope(node, oldScope) {\n    const fn = (node) => {\n      this.element(node, oldScope || '', true);\n    };\n    this._transformDom(node, fn);\n  }\n\n  /**\n   * @param {?} element\n   * @param {?} styleRules\n   * @param {?=} callback\n   * @param {string=} cssBuild\n   * @param {string=} cssText\n   * @return {string}\n   */\n  elementStyles(element, styleRules, callback, cssBuild = '', cssText = '') {\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    if (cssText === '') {\n      if (nativeShadow || cssBuild === 'shady') {\n        cssText = StyleUtil.toCssText(styleRules, callback);\n      } else {\n        let {is, typeExtension} = StyleUtil.getIsExtends(element);\n        cssText = this.css(styleRules, is, typeExtension, callback) + '\\n\\n';\n      }\n    }\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? `[is=${scope}]` : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  /**\n   * transforms a css rule to a scoped rule.\n   *\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule['selector'] = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = StyleUtil.splitSelectorList(rule['selector']);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.filter((part) => Boolean(part)).join(COMPLEX_SELECTOR_SEP);\n  }\n\n  /**\n   * @param {string} selector\n   * @return {string}\n   */\n  _twiddleNthPlus(selector) {\n    return selector.replace(NTH, (m, type, inside) => {\n      if (inside.indexOf('+') > -1) {\n        inside = inside.replace(/\\+/g, '___');\n      } else if (inside.indexOf('___') > -1) {\n        inside = inside.replace(/___/g, '+');\n      }\n      return `:${type}(${inside})`;\n    });\n  }\n\n  /**\n   * Preserve `:matches()` selectors by replacing them with MATCHES_REPLACMENT\n   * and returning an array of `:matches()` selectors.\n   * Use `_replacesMatchesPseudo` to replace the `:matches()` parts\n   *\n   * @param {string} selector\n   * @return {{selector: string, matches: !Array<string>}}\n   */\n  _preserveMatchesPseudo(selector) {\n    /** @type {!Array<string>} */\n    const matches = [];\n    let match;\n    while ((match = selector.match(MATCHES))) {\n      const start = match.index;\n      const end = StyleUtil.findMatchingParen(selector, start);\n      if (end === -1) {\n        throw new Error(`${match.input} selector missing ')'`)\n      }\n      const part = selector.slice(start, end + 1);\n      selector = selector.replace(part, MATCHES_REPLACEMENT);\n      matches.push(part);\n    }\n    return {selector, matches};\n  }\n\n  /**\n   * Replace MATCHES_REPLACMENT character with the given set of `:matches()`\n   * selectors.\n   *\n   * @param {string} selector\n   * @param {!Array<string>} matches\n   * @return {string}\n   */\n  _replaceMatchesPseudo(selector, matches) {\n    const parts = selector.split(MATCHES_REPLACEMENT);\n    return matches.reduce((acc, cur, idx) => acc + cur + parts[idx + 1], parts[0]);\n  }\n\n/**\n * @param {string} selector\n * @param {string} scope\n * @param {string=} hostScope\n */\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    let isNth = NTH.test(selector);\n    if (isNth) {\n      selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`)\n      selector = this._twiddleNthPlus(selector);\n    }\n    // Preserve selectors like `:-webkit-any` so that SIMPLE_SELECTOR_SEP does\n    // not get confused by spaces inside the pseudo selector\n    const isMatches = MATCHES.test(selector);\n    /** @type {!Array<string>} */\n    let matches;\n    if (isMatches) {\n      ({selector, matches} = this._preserveMatchesPseudo(selector));\n    }\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    // replace `:matches()` selectors\n    if (isMatches) {\n      selector = this._replaceMatchesPseudo(selector, matches);\n    }\n    if (isNth) {\n      selector = this._twiddleNthPlus(selector);\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir, after) =>\n      `[dir=\"${dir}\"] ${before}${after}, ${before}[dir=\"${dir}\"]${after}`);\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    const attributes = selector.split(/(\\[.+?\\])/);\n\n    const output = [];\n    for (let i = 0; i < attributes.length; i++) {\n      // Do not attempt to transform any attribute selector content\n      if ((i % 2) === 1) {\n        output.push(attributes[i]);\n      } else {\n        const part = attributes[i];\n\n        if (!(part === '' && i === attributes.length - 1)) {\n          let p$ = part.split(PSEUDO_PREFIX);\n          p$[0] += scope;\n          output.push(p$.join(PSEUDO_PREFIX));\n        }\n      }\n    }\n\n    return output.join('');\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule['selector'] = rule['parsedSelector'];\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  normalizeRootSelector(rule) {\n    if (rule['selector'] === ROOT) {\n      rule['selector'] = 'html';\n    }\n  }\n\n/**\n * @param {string} selector\n */\n  _transformDocumentSelector(selector) {\n    if (selector.match(HOST)) {\n      // remove ':host' type selectors in document rules\n      return '';\n    } else if (selector.match(SLOTTED)) {\n      return this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR)\n    } else {\n      return this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n    }\n  }\n}\n\nconst NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nconst SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nconst COMPLEX_SELECTOR_SEP = ',';\nconst SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=[])+)/g;\nconst SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nconst HOST = ':host';\nconst ROOT = ':root';\nconst SLOTTED = '::slotted';\nconst SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nconst HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nconst SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nconst DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)(.*)/;\nconst CSS_CLASS_PREFIX = '.';\nconst PSEUDO_PREFIX = ':';\nconst CLASS = 'class';\nconst SELECTOR_NO_MATCH = 'should_not_match';\nconst MATCHES = /:(?:matches|any|-(?:webkit|moz)-any)/;\nconst MATCHES_REPLACEMENT = '\\u{e000}';\n\nexport default new StyleTransformer()\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/** @const {string} */\nconst infoKey = '__styleInfo';\n\nexport default class StyleInfo {\n  /**\n   * @param {Element} node\n   * @return {StyleInfo}\n   */\n  static get(node) {\n    if (node) {\n      return node[infoKey];\n    } else {\n      return null;\n    }\n  }\n  /**\n   * @param {!Element} node\n   * @param {StyleInfo} styleInfo\n   * @return {StyleInfo}\n   */\n  static set(node, styleInfo) {\n    node[infoKey] = styleInfo;\n    return styleInfo;\n  }\n  /**\n   * @param {StyleNode} ast\n   * @param {Node=} placeholder\n   * @param {Array<string>=} ownStylePropertyNames\n   * @param {string=} elementName\n   * @param {string=} typeExtension\n   * @param {string=} cssBuild\n   */\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    /** @type {StyleNode} */\n    this.styleRules = ast || null;\n    /** @type {Node} */\n    this.placeholder = placeholder || null;\n    /** @type {!Array<string>} */\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    /** @type {Object} */\n    this.overrideStyleProperties = null;\n    /** @type {string} */\n    this.elementName = elementName || '';\n    /** @type {string} */\n    this.cssBuild = cssBuild || '';\n    /** @type {string} */\n    this.typeExtension = typeExtension || '';\n    /** @type {Object<string, string>} */\n    this.styleProperties = null;\n    /** @type {?string} */\n    this.scopeSelector = null;\n    /** @type {HTMLStyleElement} */\n    this.customStyle = null;\n  }\n  _getStyleRules() {\n    return this.styleRules;\n  }\n}\n\n/* eslint-disable-next-line no-self-assign */\nStyleInfo.prototype['_getStyleRules'] = StyleInfo.prototype._getStyleRules;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport * as RX from './common-regex.js';\nimport StyleInfo from './style-info.js';\n\n// TODO: dedupe with shady\n/**\n * @param {string} selector\n * @return {boolean}\n * @this {Element}\n */\nconst matchesSelector = function(selector) {\n  const method = this.matches || this.matchesSelector ||\n    this.mozMatchesSelector || this.msMatchesSelector ||\n    this.oMatchesSelector || this.webkitMatchesSelector;\n  return method && method.call(this, selector);\n};\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n/**\n * decorates styles with rule info and returns an array of used style property names\n *\n * @param {StyleNode} rules\n * @return {Array<string>}\n */\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule['rules'] = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = RX.VAR_ASSIGN;\n      let cssText = rule['parsedCssText'];\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule['parsedCssText']);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(RX.BRACKETED, '')\n      .replace(RX.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = RX.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        RX.MIXIN_MATCH.lastIndex = 0;\n        m = RX.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule['cssText'] = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule['cssText'];\n    let output = rule['cssText'];\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = RX.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule['cssText'] = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  /**\n   * @param {StyleNode} rules\n   * @param {Element} element\n   */\n  propertyDataFromStyles(rules, element) {\n    let props = {};\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, (rule) => {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        this.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule['parsedSelector'];\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          this.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  /**\n   * @param {Element} scope\n   * @param {StyleNode} rule\n   * @param {string} cssBuild\n   * @param {function(Object)} callback\n   */\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let {is, typeExtension} = StyleUtil.getIsExtends(scope);\n    let hostScope = is ?\n      StyleTransformer._calcHostScope(is, typeExtension) :\n      'html';\n    let parsedSelector = rule['parsedSelector'];\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host because `:host` does not work with `matches`\n      if (!rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n/**\n * @param {Element} scope\n * @param {StyleNode} rules\n * @param {string} cssBuild\n * @return {Object}\n */\n  hostAndRootPropertiesForScope(scope, rules, cssBuild) {\n    let hostProps = {}, rootProps = {};\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, (rule) => {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      this.whenHostOrRootRule(scope, rule, cssBuild, (info) => {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            this.collectProperties(rule, hostProps);\n          } else {\n            this.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  /**\n   * @param {Element} element\n   * @param {Object} properties\n   * @param {string} scopeSelector\n   */\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let {is, typeExtension} = StyleUtil.getIsExtends(element);\n    let hostSelector = StyleTransformer\n      ._calcHostScope(is, typeExtension);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(RX.HOST_PREFIX + rxHostSelector +\n      RX.HOST_SUFFIX);\n    let {styleRules: rules, cssBuild} = StyleInfo.get(element);\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule['cssText']) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    }, cssBuild);\n  }\n\n  /**\n   * @param {Element} element\n   * @param {StyleNode} rules\n   * @param {string} scopeSelector\n   * @return {Object}\n   */\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule['keyframesName']] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  /**\n   * @param {StyleNode} keyframesRule\n   * @return {function(string):string}\n   */\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n/**\n * Transforms `@keyframes` names to be unique for the current host.\n * Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n *\n * @param {StyleNode} rule\n * @param {string} scopeId\n */\n  _scopeKeyframes(rule, scopeId) {\n    // Animation names are of the form [\\w-], so ensure that the name regex does not partially apply\n    // to similarly named keyframe names by checking for a word boundary at the beginning and\n    // a non-word boundary or `-` at the end.\n    rule.keyframesNameRx = new RegExp(`\\\\b${rule['keyframesName']}(?!\\\\B|-)`, 'g');\n    rule.transformedKeyframesName = rule['keyframesName'] + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    rule['selector'] = rule.transformedSelector.replace(\n        rule['keyframesName'], rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  /**\n   * @param {StyleNode} rule\n   * @param {RegExp} hostRx\n   * @param {string} hostSelector\n   * @param {string} scopeId\n   */\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = StyleUtil.splitSelectorList(selector);\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule['selector'] = parts.join(',');\n  }\n\n  /**\n   * @param {Element} element\n   * @param {string} selector\n   * @param {string} old\n   */\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @param {Object} properties\n   * @param {string} selector\n   * @param {HTMLStyleElement} style\n   * @return {HTMLStyleElement}\n   */\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s['_useCount']--;\n      if (s['_useCount'] <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        if (IS_IE && cssText.indexOf('@media') > -1) {\n            // @media rules may be stale in IE 10 and 11\n            // refresh the text content of the style to revalidate them.\n          style.textContent = cssText;\n        }\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style['_useCount'] = style['_useCount'] || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style['_useCount']++;\n      }\n      styleInfo.customStyle = style;\n    }\n    return style;\n  }\n\n  /**\n   * @param {Element} style\n   * @param {Object} properties\n   */\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(/** @type {HTMLStyleElement} */(style));\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      let css = rule['cssText'] = rule['parsedCssText'];\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(/** @type {string} */(css));\n        // replace with reified properties, scenario is same as mixin\n        rule['cssText'] = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\n/**\n * @param {number} n\n * @param {Array<number>} bits\n */\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32, 10);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util.js';\nimport {nativeShadow, disableRuntime} from './style-settings.js';\n\n/** @type {!Object<string, !Node>} */\nconst placeholderMap = {};\n\n/**\n * @param {string} elementName\n * @return {Node}\n */\nexport function getStylePlaceholder(elementName) {\n  return placeholderMap[elementName] || null;\n}\n\n/**\n * @param {string} elementName\n */\nexport function ensureStylePlaceholder(elementName) {\n  if (!placeholderMap[elementName]) {\n    placeholderMap[elementName] = applyStylePlaceHolder(elementName);\n  }\n}\n\n/**\n * @const {CustomElementRegistry}\n */\nconst ce = window['customElements'];\nif (ce && !nativeShadow && !disableRuntime) {\n  /**\n   * @const {function(this:CustomElementRegistry, string,function(new:HTMLElement),{extends: string}=)}\n   */\n  const origDefine = ce['define'];\n  /**\n   * @param {string} name\n   * @param {function(new:HTMLElement)} clazz\n   * @param {{extends: string}=} options\n   */\n  const wrappedDefine = (name, clazz, options) => {\n    ensureStylePlaceholder(name);\n    origDefine.call(/** @type {!CustomElementRegistry} */(ce), name, clazz, options);\n  };\n  ce['define'] = wrappedDefine;\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport {getIsExtends, elementHasBuiltCss, wrap} from './style-util.js';\n\nexport let flush = function() {};\n\n/**\n * @param {!Element} element\n * @return {string}\n */\nfunction getClasses(element) {\n  if (element.classList && element.classList.value) {\n    return element.classList.value;\n  } else {\n    // NOTE: className is patched to remove scoping classes in ShadyDOM\n    // use getAttribute('class') instead, which is unpatched\n    return element.getAttribute('class') || '';\n  }\n}\n\nconst scopeRegExp = new RegExp(`${StyleTransformer.SCOPE_NAME}\\\\s*([^\\\\s]*)`);\n\n/**\n * @param {!Element} element\n * @return {string}\n */\nexport function getCurrentScope(element) {\n  const match = getClasses(element).match(scopeRegExp);\n  if (match) {\n    return match[1];\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {!Node} node\n */\nexport function getOwnerScope(node) {\n  const ownerRoot = wrap(node).getRootNode();\n  if (ownerRoot === node || ownerRoot === node.ownerDocument) {\n    return '';\n  }\n  const host = /** @type {!ShadowRoot} */(ownerRoot).host;\n  if (!host) {\n    // this may actually be a document fragment\n    return '';\n  }\n  return getIsExtends(host).is;\n}\n\n/**\n * @param {!Element} element\n */\nexport function ensureCorrectScope(element) {\n  const currentScope = getCurrentScope(element);\n  const ownerRoot = wrap(element).getRootNode();\n  if (ownerRoot === element) {\n    return;\n  }\n  if (currentScope && ownerRoot === element.ownerDocument) {\n    // node was scoped, but now is in document\n    StyleTransformer.domRemoveScope(element, currentScope);\n  } else if (ownerRoot instanceof ShadowRoot) {\n    const ownerScope = getOwnerScope(element);\n    if (ownerScope !== currentScope) {\n      // node was scoped, but not by its current owner\n      StyleTransformer.domReplaceScope(element, currentScope, ownerScope);\n    }\n  }\n}\n\n/**\n * @param {!HTMLElement|!HTMLDocument} element\n */\nexport function ensureCorrectSubtreeScoping(element) {\n  // find unscoped subtree nodes\n  const unscopedNodes = window['ShadyDOM']['nativeMethods']['querySelectorAll'].call(\n    element, `:not(.${StyleTransformer.SCOPE_NAME})`);\n\n  for (let j = 0; j < unscopedNodes.length; j++) {\n    // it's possible, during large batch inserts, that nodes that aren't\n    // scoped within the current scope were added.\n    // To make sure that any unscoped nodes that were inserted in the current batch are correctly styled,\n    // query all unscoped nodes and force their style-scope to be applied.\n    // This could happen if a sub-element appended an unscoped node in its shadowroot and this function\n    // runs on a parent element of the host of that unscoped node:\n    // parent-element -> element -> unscoped node\n    // Here unscoped node should have the style-scope element, not parent-element.\n    const unscopedNode = unscopedNodes[j];\n    const scopeForPreviouslyUnscopedNode = getOwnerScope(unscopedNode);\n    if (scopeForPreviouslyUnscopedNode) {\n      StyleTransformer.element(unscopedNode, scopeForPreviouslyUnscopedNode);\n    }\n  }\n}\n\n/**\n * @param {HTMLElement} el\n * @return {boolean}\n */\nfunction isElementWithBuiltCss(el) {\n  if (el.localName === 'style' || el.localName === 'template') {\n    return elementHasBuiltCss(el);\n  }\n  return false;\n}\n\n/**\n * @param {Array<MutationRecord|null>|null} mxns\n */\nfunction handler(mxns) {\n  for (let x=0; x < mxns.length; x++) {\n    let mxn = mxns[x];\n    if (mxn.target === document.documentElement ||\n      mxn.target === document.head) {\n      continue;\n    }\n    for (let i=0; i < mxn.addedNodes.length; i++) {\n      let n = mxn.addedNodes[i];\n      if (n.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      n = /** @type {HTMLElement} */(n); // eslint-disable-line no-self-assign\n      let root = n.getRootNode();\n      let currentScope = getCurrentScope(n);\n      // node was scoped, but now is in document\n      // If this element has built css, we must not remove scoping as this node\n      // will be used as a template or style without re - applying scoping as an optimization\n      if (currentScope && root === n.ownerDocument && !isElementWithBuiltCss(n)) {\n        StyleTransformer.domRemoveScope(n, currentScope);\n      } else if (root instanceof ShadowRoot) {\n        const newScope = getOwnerScope(n);\n        // rescope current node and subtree if necessary\n        if (newScope !== currentScope) {\n          StyleTransformer.domReplaceScope(n, currentScope, newScope);\n        }\n        // make sure all the subtree elements are scoped correctly\n        ensureCorrectSubtreeScoping(n);\n      }\n    }\n  }\n}\n\n// if native Shadow DOM is being used, or ShadyDOM handles dynamic scoiping, do not activate the MutationObserver\nif (!nativeShadow && !(window['ShadyDOM'] && window['ShadyDOM']['handlesDynamicScoping'])) {\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window['customElements'] &&\n    !window['customElements']['polyfillWrapFlushCallback']);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window['HTMLImports']) {\n      window['HTMLImports']['whenReady'](delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/**\n * @const {!Object<string, !HTMLTemplateElement>}\n */\nconst templateMap = {};\nexport default templateMap;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\nimport templateMap from './template-map.js';\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/*\n * Utilities for handling invalidating apply-shim mixins for a given template.\n *\n * The invalidation strategy involves keeping track of the \"current\" version of a template's mixins, and updating that count when a mixin is invalidated.\n * The template\n */\n\n/** @const {string} */\nconst CURRENT_VERSION = '_applyShimCurrentVersion';\n\n/** @const {string} */\nconst NEXT_VERSION = '_applyShimNextVersion';\n\n/** @const {string} */\nconst VALIDATING_VERSION = '_applyShimValidatingVersion';\n\n/**\n * @const {Promise<void>}\n */\nconst promise = Promise.resolve();\n\n/**\n * @param {string} elementName\n */\nexport function invalidate(elementName){\n  let template = templateMap[elementName];\n  if (template) {\n    invalidateTemplate(template);\n  }\n}\n\n/**\n * This function can be called multiple times to mark a template invalid\n * and signal that the style inside must be regenerated.\n *\n * Use `startValidatingTemplate` to begin an asynchronous validation cycle.\n * During that cycle, call `templateIsValidating` to see if the template must\n * be revalidated\n * @param {HTMLTemplateElement} template\n */\nexport function invalidateTemplate(template) {\n  // default the current version to 0\n  template[CURRENT_VERSION] = template[CURRENT_VERSION] || 0;\n  // ensure the \"validating for\" flag exists\n  template[VALIDATING_VERSION] = template[VALIDATING_VERSION] || 0;\n  // increment the next version\n  template[NEXT_VERSION] = (template[NEXT_VERSION] || 0) + 1;\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValid(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValid(template);\n  }\n  return true;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValid(template) {\n  return template[CURRENT_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValidating(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValidating(template);\n  }\n  return false;\n}\n\n/**\n * Returns true if the template is currently invalid and `startValidating` has been called since the last invalidation.\n * If false, the template must be validated.\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValidating(template) {\n  return !templateIsValid(template) && template[VALIDATING_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * the template is marked as `validating` for one microtask so that all instances\n * found in the tree crawl of `applyStyle` will update themselves,\n * but the template will only be updated once.\n * @param {string} elementName\n*/\nexport function startValidating(elementName) {\n  let template = templateMap[elementName];\n  startValidatingTemplate(template);\n}\n\n/**\n * Begin an asynchronous invalidation cycle.\n * This should be called after every validation of a template\n *\n * After one microtask, the template will be marked as valid until the next call to `invalidateTemplate`\n * @param {HTMLTemplateElement} template\n */\nexport function startValidatingTemplate(template) {\n  // remember that the current \"next version\" is the reason for this validation cycle\n  template[VALIDATING_VERSION] = template[NEXT_VERSION];\n  // however, there only needs to be one async task to clear the counters\n  if (!template._validating) {\n    template._validating = true;\n    promise.then(function() {\n      // sync the current version to let future invalidations cause a refresh cycle\n      template[CURRENT_VERSION] = template[NEXT_VERSION];\n      template._validating = false;\n    });\n  }\n}\n\n/**\n * @return {boolean}\n */\nexport function elementsAreInvalid() {\n  for (let elementName in templateMap) {\n    let template = templateMap[elementName];\n    if (!templateIsValid(template)) {\n      return true;\n    }\n  }\n  return false;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {Promise<void>} */\nlet readyPromise = null;\n\n/** @type {?function(?function())} */\nlet whenReady = window['HTMLImports'] && window['HTMLImports']['whenReady'] || null;\n\n/** @type {function()} */\nlet resolveFn;\n\n/**\n * @param {?function()} callback\n */\nexport default function documentWait(callback) {\n  requestAnimationFrame(function() {\n    if (whenReady) {\n      whenReady(callback)\n    } else {\n      if (!readyPromise) {\n        readyPromise = new Promise((resolve) => {resolveFn = resolve});\n        if (document.readyState === 'complete') {\n          resolveFn();\n        } else {\n          document.addEventListener('readystatechange', () => {\n            if (document.readyState === 'complete') {\n              resolveFn();\n            }\n          });\n        }\n      }\n      readyPromise.then(function(){ callback && callback(); });\n    }\n  });\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport documentWait from './document-wait.js';\n\n/**\n * @typedef {HTMLStyleElement | {getStyle: function():HTMLStyleElement}}\n */\nexport let CustomStyleProvider;\n\nconst SEEN_MARKER = '__seenByShadyCSS';\nconst CACHED_STYLE = '__shadyCSSCachedStyle';\n\n/** @type {?function(!HTMLStyleElement)} */\nlet transformFn = null;\n\n/** @type {?function()} */\nlet validateFn = null;\n\n/**\nThis interface is provided to add document-level <style> elements to ShadyCSS for processing.\nThese styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles\nIn addition, these styles may also need to be processed for @apply rules and CSS Custom Properties\n\nTo add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`\n\nIn addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.\nThis function will be called when calculating styles.\n\nAn example usage of the document-level styling api can be found in `examples/document-style-lib.js`\n\n@unrestricted\n*/\nexport default class CustomStyleInterface {\n  constructor() {\n    /** @type {!Array<!CustomStyleProvider>} */\n    this['customStyles'] = [];\n    this['enqueued'] = false;\n    // NOTE(dfreedm): use quotes here to prevent closure inlining to `function(){}`;\n    documentWait(() => {\n      if (window['ShadyCSS']['flushCustomStyles']) {\n        window['ShadyCSS']['flushCustomStyles']();\n      }\n    })\n  }\n  /**\n   * Queue a validation for new custom styles to batch style recalculations\n   */\n  enqueueDocumentValidation() {\n    if (this['enqueued'] || !validateFn) {\n      return;\n    }\n    this['enqueued'] = true;\n    documentWait(validateFn);\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   */\n  addCustomStyle(style) {\n    if (!style[SEEN_MARKER]) {\n      style[SEEN_MARKER] = true;\n      this['customStyles'].push(style);\n      this.enqueueDocumentValidation();\n    }\n  }\n  /**\n   * @param {!CustomStyleProvider} customStyle\n   * @return {HTMLStyleElement}\n   */\n  getStyleForCustomStyle(customStyle) {\n    if (customStyle[CACHED_STYLE]) {\n      return customStyle[CACHED_STYLE];\n    }\n    let style;\n    if (customStyle['getStyle']) {\n      style = customStyle['getStyle']();\n    } else {\n      style = customStyle;\n    }\n    return style;\n  }\n  /**\n   * @return {!Array<!CustomStyleProvider>}\n   */\n  processStyles() {\n    const cs = this['customStyles'];\n    for (let i = 0; i < cs.length; i++) {\n      const customStyle = cs[i];\n      if (customStyle[CACHED_STYLE]) {\n        continue;\n      }\n      const style = this.getStyleForCustomStyle(customStyle);\n      if (style) {\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        const styleToTransform = /** @type {!HTMLStyleElement} */(style['__appliedElement'] || style);\n        if (transformFn) {\n          transformFn(styleToTransform);\n        }\n        customStyle[CACHED_STYLE] = styleToTransform;\n      }\n    }\n    return cs;\n  }\n}\n\n/* eslint-disable no-self-assign */\nCustomStyleInterface.prototype['addCustomStyle'] = CustomStyleInterface.prototype.addCustomStyle;\nCustomStyleInterface.prototype['getStyleForCustomStyle'] = CustomStyleInterface.prototype.getStyleForCustomStyle;\nCustomStyleInterface.prototype['processStyles'] = CustomStyleInterface.prototype.processStyles;\n/* eslint-enable no-self-assign */\n\nObject.defineProperties(CustomStyleInterface.prototype, {\n  'transformCallback': {\n    /** @return {?function(!HTMLStyleElement)} */\n    get() {\n      return transformFn;\n    },\n    /** @param {?function(!HTMLStyleElement)} fn */\n    set(fn) {\n      transformFn = fn;\n    }\n  },\n  'validateCallback': {\n    /** @return {?function()} */\n    get() {\n      return validateFn;\n    },\n    /**\n     * @param {?function()} fn\n     * @this {CustomStyleInterface}\n     */\n    set(fn) {\n      let needsEnqueue = false;\n      if (!validateFn) {\n        needsEnqueue = true;\n      }\n      validateFn = fn;\n      if (needsEnqueue) {\n        this.enqueueDocumentValidation();\n      }\n    },\n  }\n})\n\n/** @typedef {{\n * customStyles: !Array<!CustomStyleProvider>,\n * addCustomStyle: function(!CustomStyleProvider),\n * getStyleForCustomStyle: function(!CustomStyleProvider): HTMLStyleElement,\n * findStyles: function(),\n * transformCallback: ?function(!HTMLStyleElement),\n * validateCallback: ?function()\n * }}\n */\nexport const CustomStyleInterfaceInterface = {};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse, StyleNode} from './css-parse.js';\nimport {nativeShadow, nativeCssVariables, disableRuntime} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport StyleProperties from './style-properties.js';\nimport {ensureStylePlaceholder, getStylePlaceholder} from './style-placeholder.js';\nimport StyleInfo from './style-info.js';\nimport StyleCache from './style-cache.js';\nimport {flush as watcherFlush, getOwnerScope, getCurrentScope} from './document-watcher.js';\nimport templateMap from './template-map.js';\nimport * as ApplyShimUtils from './apply-shim-utils.js';\nimport {updateNativeProperties, detectMixin} from './common-utils.js';\nimport {CustomStyleInterfaceInterface} from './custom-style-interface.js'; // eslint-disable-line no-unused-vars\n\n/** @type {!Object<string, string>} */\nconst adoptedCssTextMap = {};\n\n/**\n * @const {StyleCache}\n */\nconst styleCache = new StyleCache();\n\nexport default class ScopingShim {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = /** @type {!HTMLElement} */(document.documentElement);\n    let ast = new StyleNode();\n    ast['rules'] = [];\n    this._documentOwnerStyleInfo = StyleInfo.set(this._documentOwner, new StyleInfo(ast));\n    this._elementsHaveApplied = false;\n    /** @type {?Object} */\n    this._applyShim = null;\n    /** @type {?CustomStyleInterfaceInterface} */\n    this._customStyleInterface = null;\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    return StyleUtil.gatherStyleText(template.content);\n  }\n  /**\n   * Prepare the styling and template for the given element type\n   *\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplate(template, elementName, typeExtension) {\n    this.prepareTemplateDom(template, elementName);\n    this.prepareTemplateStyles(template, elementName, typeExtension);\n  }\n  /**\n   * Prepare styling for the given element type\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplateStyles(template, elementName, typeExtension) {\n    if (template._prepared || disableRuntime) {\n      return;\n    }\n    // style placeholders are only used when ShadyDOM is active\n    if (!nativeShadow) {\n      ensureStylePlaceholder(elementName);\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = StyleUtil.getCssBuild(template);\n    const optimalBuild = StyleUtil.isOptimalCssBuild(cssBuild);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n    };\n    let cssText = this._gatherStyles(template) + (adoptedCssTextMap[elementName] || '');\n    // check if the styling has mixin definitions or uses\n    this._ensure();\n    if (!optimalBuild) {\n      let hasMixins = !cssBuild && detectMixin(cssText);\n      let ast = parse(cssText);\n      // only run the applyshim transforms if there is a mixin involved\n      if (hasMixins && nativeCssVariables && this._applyShim) {\n        this._applyShim['transformRules'](ast, elementName);\n      }\n      template['_styleAst'] = ast;\n    }\n    let ownPropertyNames = [];\n    if (!nativeCssVariables) {\n      ownPropertyNames = StyleProperties.decorateStyles(template['_styleAst']);\n    }\n    if (!ownPropertyNames.length || nativeCssVariables) {\n      let root = nativeShadow ? template.content : null;\n      let placeholder = getStylePlaceholder(elementName);\n      let style = this._generateStaticStyle(info, template['_styleAst'], root, placeholder, cssBuild, optimalBuild ? cssText : '');\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n\n  /**\n   * @param {!Array<string>} cssTextArray\n   * @param {string} elementName\n   */\n  prepareAdoptedCssText(cssTextArray, elementName) {\n    adoptedCssTextMap[elementName] = cssTextArray.join(' ');\n  }\n  /**\n   * Prepare template for the given element type\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   */\n  prepareTemplateDom(template, elementName) {\n    if (disableRuntime) {\n      return;\n    }\n    const cssBuild = StyleUtil.getCssBuild(template);\n    if (!nativeShadow && cssBuild !== 'shady' && !template._domPrepared) {\n      template._domPrepared = true;\n      StyleTransformer.domAddScope(template.content, elementName);\n    }\n  }\n  /**\n   * @param {!{is: string, extends: (string|undefined)}} info\n   * @param {!StyleNode} rules\n   * @param {DocumentFragment} shadowroot\n   * @param {Node} placeholder\n   * @param {string} cssBuild\n   * @param {string=} cssText\n   * @return {?HTMLStyleElement}\n   */\n  _generateStaticStyle(info, rules, shadowroot, placeholder, cssBuild, cssText) {\n    cssText = StyleTransformer.elementStyles(info, rules, null, cssBuild, cssText);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n    return null;\n  }\n  _prepareHost(host) {\n    const {is, typeExtension} = StyleUtil.getIsExtends(host);\n    const placeholder = getStylePlaceholder(is);\n    const template = templateMap[is];\n    if (!template) {\n      return;\n    }\n    const ast = template['_styleAst'];\n    const ownStylePropertyNames = template._ownPropertyNames;\n    const cssBuild = StyleUtil.getCssBuild(template);\n    const styleInfo = new StyleInfo(\n      ast,\n      placeholder,\n      ownStylePropertyNames,\n      is,\n      typeExtension,\n      cssBuild\n    );\n    StyleInfo.set(host, styleInfo);\n    return styleInfo;\n  }\n  _ensureApplyShim() {\n    if (this._applyShim) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.ApplyShim) {\n      this._applyShim = /** @type {!Object} */ (window.ShadyCSS.ApplyShim);\n      this._applyShim['invalidCallback'] = ApplyShimUtils.invalidate;\n    }\n  }\n  _ensureCustomStyleInterface() {\n    if (this._customStyleInterface) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.CustomStyleInterface) {\n      this._customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */(window.ShadyCSS.CustomStyleInterface);\n      /** @type {function(!HTMLStyleElement)} */\n      this._customStyleInterface['transformCallback'] = (style) => {this.transformCustomStyleForDocument(style)};\n      this._customStyleInterface['validateCallback'] = () => {\n        requestAnimationFrame(() => {\n          if (this._customStyleInterface['enqueued'] || this._elementsHaveApplied) {\n            this.flushCustomStyles();\n          }\n        })\n      };\n    }\n  }\n  _ensure() {\n    this._ensureApplyShim();\n    this._ensureCustomStyleInterface();\n  }\n  /**\n   * Flush and apply custom styles to document\n   */\n  flushCustomStyles() {\n    if (disableRuntime) {\n      return;\n    }\n    this._ensure();\n    if (!this._customStyleInterface) {\n      return;\n    }\n    let customStyles = this._customStyleInterface['processStyles']();\n    // early return if custom-styles don't need validation\n    if (!this._customStyleInterface['enqueued']) {\n      return;\n    }\n    // bail if custom styles are built optimally\n    if (StyleUtil.isOptimalCssBuild(this._documentOwnerStyleInfo.cssBuild)) {\n      return;\n    }\n    if (!nativeCssVariables) {\n      this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n      this._applyCustomStyles(customStyles);\n      if (this._elementsHaveApplied) {\n        // if custom elements have upgraded and there are no native css variables, we must recalculate the whole tree\n        this.styleDocument();\n      }\n    } else if (!this._documentOwnerStyleInfo.cssBuild) {\n      this._revalidateCustomStyleApplyShim(customStyles);\n    }\n    this._customStyleInterface['enqueued'] = false;\n  }\n  /**\n   * Apply styles for the given element\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} overrideProps\n   */\n  styleElement(host, overrideProps) {\n    if (disableRuntime) {\n      if (overrideProps) {\n        if (!StyleInfo.get(host)) {\n          StyleInfo.set(host, new StyleInfo(null));\n        }\n        const styleInfo = /** @type {!StyleInfo} */(StyleInfo.get(host));\n        this._mixOverrideStyleProps(styleInfo, overrideProps);\n        this.styleElementNativeVariables(host, styleInfo);\n      }\n      return;\n    }\n    const styleInfo = StyleInfo.get(host) || this._prepareHost(host);\n    // if there is no style info at this point, bail\n    if (!styleInfo) {\n      return;\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (overrideProps) {\n      this._mixOverrideStyleProps(styleInfo, overrideProps);\n    }\n    if (!nativeCssVariables) {\n      this.styleElementShimVariables(host, styleInfo);\n    } else {\n      this.styleElementNativeVariables(host, styleInfo);\n    }\n  }\n  /**\n   * @param {!StyleInfo} styleInfo\n   * @param {Object} overrideProps\n   */\n  _mixOverrideStyleProps(styleInfo, overrideProps) {\n    styleInfo.overrideStyleProperties =\n      styleInfo.overrideStyleProperties || {};\n    Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n  }\n  /**\n   * @param {!HTMLElement} host\n   * @param {!StyleInfo} styleInfo\n   */\n  styleElementShimVariables(host, styleInfo) {\n    this.flush();\n    this._updateProperties(host, styleInfo);\n    if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n      this._applyStyleProperties(host, styleInfo);\n    }\n  }\n  /**\n   * @param {!HTMLElement} host\n   * @param {!StyleInfo} styleInfo\n   */\n  styleElementNativeVariables(host, styleInfo) {\n    const { is } = StyleUtil.getIsExtends(host);\n    if (styleInfo.overrideStyleProperties) {\n      updateNativeProperties(host, styleInfo.overrideStyleProperties);\n    }\n    const template = templateMap[is];\n    // bail early if there is no shadowroot for this element\n    if (!template && !this._isRootOwner(host)) {\n      return;\n    }\n    // bail early if the template was built with polymer-css-build\n    if (template && StyleUtil.elementHasBuiltCss(template)) {\n      return;\n    }\n    if (template && template._style && !ApplyShimUtils.templateIsValid(template)) {\n      // update template\n      if (!ApplyShimUtils.templateIsValidating(template)) {\n        this._ensure();\n        this._applyShim && this._applyShim['transformRules'](template['_styleAst'], is);\n        template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n        ApplyShimUtils.startValidatingTemplate(template);\n      }\n      // update instance if native shadowdom\n      if (nativeShadow) {\n        let root = host.shadowRoot;\n        if (root) {\n          let style = root.querySelector('style');\n          if (style) {\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n      }\n      styleInfo.styleRules = template['_styleAst'];\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = StyleUtil.wrap(node).getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host) || this._prepareHost(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = StyleUtil.getIsExtends(host).is;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    // style owner has not updated properties yet\n    // go up the chain and force property update,\n    // except if the owner is the document\n    if (owner !== this._documentOwner && !ownerProperties) {\n      this._updateProperties(owner, ownerStyleInfo);\n      ownerProperties = ownerStyleInfo.styleProperties;\n    }\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules, styleInfo.cssBuild);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  /**\n   * Update styles of the whole document\n   *\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    this.styleSubtree(this._documentOwner, properties);\n  }\n  /**\n   * Update styles of a subtree\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} properties\n   */\n  styleSubtree(host, properties) {\n    const wrappedHost = StyleUtil.wrap(host);\n    let root = wrappedHost.shadowRoot;\n    if (root || this._isRootOwner(host)) {\n      this.styleElement(host, properties);\n    }\n    // process the shadowdom children of `host`\n    let shadowChildren =\n        root && (/** @type {!ParentNode} */ (root).children || root.childNodes);\n    if (shadowChildren) {\n      for (let i = 0; i < shadowChildren.length; i++) {\n        let c = /** @type {!HTMLElement} */(shadowChildren[i]);\n        this.styleSubtree(c);\n      }\n    } else {\n      // process the lightdom children of `host`\n      let children = wrappedHost.children || wrappedHost.childNodes;\n      if (children) {\n        for (let i = 0; i < children.length; i++) {\n          let c = /** @type {!HTMLElement} */(children[i]);\n          this.styleSubtree(c);\n        }\n      }\n    }\n  }\n  /* Custom Style operations */\n  _revalidateCustomStyleApplyShim(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        this._revalidateApplyShim(s);\n      }\n    }\n  }\n  _applyCustomStyles(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        StyleProperties.applyCustomStyle(s, this._documentOwnerStyleInfo.styleProperties);\n      }\n    }\n  }\n  transformCustomStyleForDocument(style) {\n    const cssBuild = StyleUtil.getCssBuild(style);\n    if (cssBuild !== this._documentOwnerStyleInfo.cssBuild) {\n      this._documentOwnerStyleInfo.cssBuild = cssBuild;\n    }\n    if (StyleUtil.isOptimalCssBuild(cssBuild)) {\n      return;\n    }\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (nativeCssVariables && cssBuild === '') {\n        this._ensure();\n        this._applyShim && this._applyShim['transformRule'](rule);\n      }\n    });\n    if (nativeCssVariables) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules['rules'].push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (nativeCssVariables && this._applyShim) {\n      let ast = StyleUtil.rulesForStyle(style);\n      this._ensure();\n      this._applyShim['transformRules'](ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!nativeCssVariables) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value ? value.trim() : '';\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = StyleUtil.wrap(element).getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!nativeCssVariables) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n  /**\n   * @param {!Element} node\n   * @param {string} scope\n   */\n  scopeNode(node, scope) {\n    StyleTransformer.element(node, scope);\n  }\n  /**\n   * @param {!Element} node\n   * @param {string} scope\n   */\n  unscopeNode(node, scope) {\n    StyleTransformer.element(node, scope, true);\n  }\n  /**\n   * @param {!Node} node\n   * @return {string}\n   */\n  scopeForNode(node) {\n    return getOwnerScope(node);\n  }\n  /**\n   * @param {!Element} node\n   * @return {string}\n   */\n  currentScopeForNode(node) {\n    return getCurrentScope(node);\n  }\n}\n\n/* exports */\n/* eslint-disable no-self-assign */\nScopingShim.prototype['flush'] = ScopingShim.prototype.flush;\nScopingShim.prototype['prepareTemplate'] = ScopingShim.prototype.prepareTemplate;\nScopingShim.prototype['styleElement'] = ScopingShim.prototype.styleElement;\nScopingShim.prototype['styleDocument'] = ScopingShim.prototype.styleDocument;\nScopingShim.prototype['styleSubtree'] = ScopingShim.prototype.styleSubtree;\nScopingShim.prototype['getComputedStyleValue'] = ScopingShim.prototype.getComputedStyleValue;\nScopingShim.prototype['setElementClass'] = ScopingShim.prototype.setElementClass;\nScopingShim.prototype['_styleInfoForNode'] = ScopingShim.prototype._styleInfoForNode;\nScopingShim.prototype['transformCustomStyleForDocument'] = ScopingShim.prototype.transformCustomStyleForDocument;\nScopingShim.prototype['getStyleAst'] = ScopingShim.prototype.getStyleAst;\nScopingShim.prototype['styleAstToString'] = ScopingShim.prototype.styleAstToString;\nScopingShim.prototype['flushCustomStyles'] = ScopingShim.prototype.flushCustomStyles;\nScopingShim.prototype['scopeNode'] = ScopingShim.prototype.scopeNode;\nScopingShim.prototype['unscopeNode'] = ScopingShim.prototype.unscopeNode;\nScopingShim.prototype['scopeForNode'] = ScopingShim.prototype.scopeForNode;\nScopingShim.prototype['currentScopeForNode'] = ScopingShim.prototype.currentScopeForNode;\nScopingShim.prototype['prepareAdoptedCssText'] = ScopingShim.prototype.prepareAdoptedCssText;\n/* eslint-enable no-self-assign */\nObject.defineProperties(ScopingShim.prototype, {\n  'nativeShadow': {\n    get() {\n      return nativeShadow;\n    }\n  },\n  'nativeCss': {\n    get() {\n      return nativeCssVariables;\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    /** @type {number} */\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport { MIXIN_MATCH, VAR_ASSIGN } from './common-regex.js';\n\n/**\n * @param {Element} element\n * @param {Object=} properties\n */\nexport function updateNativeProperties(element, properties) {\n  // remove previous properties\n  for (let p in properties) {\n    // NOTE: for bc with shim, don't apply null values.\n    if (p === null) {\n      element.style.removeProperty(p);\n    } else {\n      element.style.setProperty(p, properties[p]);\n    }\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} property\n * @return {string}\n */\nexport function getComputedStyleValue(element, property) {\n  /**\n   * @const {string}\n   */\n  const value = window.getComputedStyle(element).getPropertyValue(property);\n  if (!value) {\n    return '';\n  } else {\n    return value.trim();\n  }\n}\n\n/**\n * return true if `cssText` contains a mixin definition or consumption\n * @param {string} cssText\n * @return {boolean}\n */\nexport function detectMixin(cssText) {\n  const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n  // reset state of the regexes\n  MIXIN_MATCH.lastIndex = 0;\n  VAR_ASSIGN.lastIndex = 0;\n  return has;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport ScopingShim from '../src/scoping-shim.js';\nimport {nativeCssVariables, nativeShadow, cssBuild, disableRuntime} from '../src/style-settings.js';\n\n/** @const {ScopingShim} */\nconst scopingShim = new ScopingShim();\n\nlet ApplyShim, CustomStyleInterface;\n\nif (window['ShadyCSS']) {\n  ApplyShim = window['ShadyCSS']['ApplyShim'];\n  CustomStyleInterface = window['ShadyCSS']['CustomStyleInterface'];\n}\n\nwindow.ShadyCSS = {\n  ScopingShim: scopingShim,\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplate(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplate(template, elementName, elementExtends)\n  },\n\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   */\n  prepareTemplateDom(template, elementName) {\n    scopingShim.prepareTemplateDom(template, elementName);\n  },\n\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplateStyles(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplateStyles(template, elementName, elementExtends)\n  },\n  /**\n   * @param {!HTMLElement} element\n   * @param {Object=} properties\n   */\n  styleSubtree(element, properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleSubtree(element, properties);\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  styleElement(element) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleElement(element);\n  },\n\n  /**\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleDocument(properties);\n  },\n\n  flushCustomStyles() {\n    scopingShim.flushCustomStyles();\n  },\n\n  /**\n   * @param {Element} element\n   * @param {string} property\n   * @return {string}\n   */\n  getComputedStyleValue(element, property) {\n    return scopingShim.getComputedStyleValue(element, property);\n  },\n\n  nativeCss: nativeCssVariables,\n\n  nativeShadow: nativeShadow,\n\n  cssBuild: cssBuild,\n\n  disableRuntime: disableRuntime,\n};\n\nif (ApplyShim) {\n  window.ShadyCSS.ApplyShim = ApplyShim;\n}\n\nif (CustomStyleInterface) {\n  window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;\n}","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nconst reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = node.isConnected;\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = current.parentNode || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !node.nextSibling) {\n    node = node.parentNode;\n  }\n  return (!node || node === root) ? null : node.nextSibling;\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return start.firstChild ? start.firstChild : nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = element.localName;\n      if (localName === 'link' && element.getAttribute('rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = importNode.firstChild; child; child = child.nextSibling) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = shadowRoot.firstChild; child; child = child.nextSibling) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport * as Utilities from './Utilities.js';\nimport CEState from './CustomElementState.js';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patchesNode = [];\n\n    /** @type {!Array<!function(!Element)>} */\n    this._patchesElement = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructorFunction, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} patch\n   */\n  addNodePatch(patch) {\n    this._hasPatches = true;\n    this._patchesNode.push(patch);\n  }\n\n  /**\n   * @param {!function(!Element)} patch\n   */\n  addElementPatch(patch) {\n    this._hasPatches = true;\n    this._patchesElement.push(patch);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patchElement(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchNode(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patchesNode.length; i++) {\n      this._patchesNode[i](node);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  patchElement(element) {\n    if (!this._hasPatches) return;\n\n    if (element.__CE_patched) return;\n    element.__CE_patched = true;\n\n    for (let i = 0; i < this._patchesNode.length; i++) {\n      this._patchesNode[i](element);\n    }\n\n    for (let i = 0; i < this._patchesElement.length; i++) {\n      this._patchesElement[i](element);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.connectedCallback(element);\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {{\n   *   visitedImports: (!Set<!Node>|undefined),\n   *   upgrade: (!function(!Element)|undefined),\n   * }=} options\n   */\n  patchAndUpgradeTree(root, options = {}) {\n    const visitedImports = options.visitedImports || new Set();\n    const upgrade = options.upgrade || (element => this.upgradeElement(element));\n\n    const elements = [];\n\n    const gatherElements = element => {\n      if (element.localName === 'link' && element.getAttribute('rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof Node) {\n          importNode.__CE_isImportDocument = true;\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        }\n\n        if (importNode && importNode.readyState === 'complete') {\n          importNode.__CE_documentLoadHandled = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          element.addEventListener('load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            clonedVisitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, {visitedImports: clonedVisitedImports, upgrade});\n          });\n        }\n      } else {\n        elements.push(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n    if (this._hasPatches) {\n      for (let i = 0; i < elements.length; i++) {\n        this.patchElement(elements[i]);\n      }\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      upgrade(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    // Prevent elements created in documents without a browsing context from\n    // upgrading.\n    //\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#look-up-a-custom-element-definition\n    //   \"If document does not have a browsing context, return null.\"\n    //\n    // https://html.spec.whatwg.org/multipage/window-object.html#dom-document-defaultview\n    //   \"The defaultView IDL attribute of the Document interface, on getting,\n    //   must return this Document's browsing context's WindowProxy object, if\n    //   this Document has an associated browsing context, or null otherwise.\"\n    const ownerDocument = element.ownerDocument;\n    if (\n      !ownerDocument.defaultView &&\n      !(ownerDocument.__CE_isImportDocument && ownerDocument.__CE_hasRegistry)\n    ) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructorFunction;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = element.getAttribute(name);\n        if (value !== null) {\n          this.attributeChangedCallback(element, name, null, value, null);\n        }\n      }\n    }\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (this._document.readyState === 'loading') {\n      this._observer = new MutationObserver(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      this._observer.observe(this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = this._document.readyState;\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = mutations[i].addedNodes;\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport DocumentConstructionObserver from './DocumentConstructionObserver.js';\nimport Deferred from './Deferred.js';\nimport * as Utilities from './Utilities.js';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<!CustomElementDefinition>}\n     */\n    this._pendingDefinitions = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructorFunction: constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._internals.setDefinition(localName, definition);\n    this._pendingDefinitions.push(definition);\n\n    // If we've already called the flush callback and it hasn't called back yet,\n    // don't call it again.\n    if (!this._flushPending) {\n      this._flushPending = true;\n      this._flushCallback(() => this._flush());\n    }\n  }\n\n  upgrade(element) {\n    this._internals.patchAndUpgradeTree(element);\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n    this._flushPending = false;\n\n    const pendingDefinitions = this._pendingDefinitions;\n\n    /**\n     * Unupgraded elements with definitions that were defined *before* the last\n     * flush, in document order.\n     * @type {!Array<!HTMLElement>}\n     */\n    const elementsWithStableDefinitions = [];\n\n    /**\n     * A map from `localName`s of definitions that were defined *after* the last\n     * flush to unupgraded elements matching that definition, in document order.\n     * @type {!Map<string, !Array<!HTMLElement>>}\n     */\n    const elementsWithPendingDefinitions = new Map();\n    for (let i = 0; i < pendingDefinitions.length; i++) {\n      elementsWithPendingDefinitions.set(pendingDefinitions[i].localName, []);\n    }\n\n    this._internals.patchAndUpgradeTree(document, {\n      upgrade: element => {\n        // Ignore the element if it has already upgraded or failed to upgrade.\n        if (element.__CE_state !== undefined) return;\n\n        const localName = element.localName;\n\n        // If there is an applicable pending definition for the element, add the\n        // element to the list of elements to be upgraded with that definition.\n        const pendingElements = elementsWithPendingDefinitions.get(localName);\n        if (pendingElements) {\n          pendingElements.push(element);\n        // If there is *any other* applicable definition for the element, add it\n        // to the list of elements with stable definitions that need to be upgraded.\n        } else if (this._internals.localNameToDefinition(localName)) {\n          elementsWithStableDefinitions.push(element);\n        }\n      },\n    });\n\n    // Upgrade elements with 'stable' definitions first.\n    for (let i = 0; i < elementsWithStableDefinitions.length; i++) {\n      this._internals.upgradeElement(elementsWithStableDefinitions[i]);\n    }\n\n    // Upgrade elements with 'pending' definitions in the order they were defined.\n    while (pendingDefinitions.length > 0) {\n      const definition = pendingDefinitions.shift();\n      const localName = definition.localName;\n\n      // Attempt to upgrade all applicable elements.\n      const pendingUpgradableElements = elementsWithPendingDefinitions.get(definition.localName);\n      for (let i = 0; i < pendingUpgradableElements.length; i++) {\n        this._internals.upgradeElement(pendingUpgradableElements[i]);\n      }\n\n      // Resolve any promises created by `whenDefined` for the definition.\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructorFunction;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && !this._pendingDefinitions.some(d => d.localName === localName)) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['upgrade'] = CustomElementRegistry.prototype.upgrade;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nexport default {\n  Document_createElement: window.Document.prototype.createElement,\n  Document_createElementNS: window.Document.prototype.createElementNS,\n  Document_importNode: window.Document.prototype.importNode,\n  Document_prepend: window.Document.prototype['prepend'],\n  Document_append: window.Document.prototype['append'],\n  DocumentFragment_prepend: window.DocumentFragment.prototype['prepend'],\n  DocumentFragment_append: window.DocumentFragment.prototype['append'],\n  Node_cloneNode: window.Node.prototype.cloneNode,\n  Node_appendChild: window.Node.prototype.appendChild,\n  Node_insertBefore: window.Node.prototype.insertBefore,\n  Node_removeChild: window.Node.prototype.removeChild,\n  Node_replaceChild: window.Node.prototype.replaceChild,\n  Node_textContent: Object.getOwnPropertyDescriptor(window.Node.prototype, 'textContent'),\n  Element_attachShadow: window.Element.prototype['attachShadow'],\n  Element_innerHTML: Object.getOwnPropertyDescriptor(window.Element.prototype, 'innerHTML'),\n  Element_getAttribute: window.Element.prototype.getAttribute,\n  Element_setAttribute: window.Element.prototype.setAttribute,\n  Element_removeAttribute: window.Element.prototype.removeAttribute,\n  Element_getAttributeNS: window.Element.prototype.getAttributeNS,\n  Element_setAttributeNS: window.Element.prototype.setAttributeNS,\n  Element_removeAttributeNS: window.Element.prototype.removeAttributeNS,\n  Element_insertAdjacentElement: window.Element.prototype['insertAdjacentElement'],\n  Element_insertAdjacentHTML: window.Element.prototype['insertAdjacentHTML'],\n  Element_prepend: window.Element.prototype['prepend'],\n  Element_append: window.Element.prototype['append'],\n  Element_before: window.Element.prototype['before'],\n  Element_after: window.Element.prototype['after'],\n  Element_replaceWith: window.Element.prototype['replaceWith'],\n  Element_remove: window.Element.prototype['remove'],\n  HTMLElement: window.HTMLElement,\n  HTMLElement_innerHTML: Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, 'innerHTML'),\n  HTMLElement_insertAdjacentElement: window.HTMLElement.prototype['insertAdjacentElement'],\n  HTMLElement_insertAdjacentHTML: window.HTMLElement.prototype['insertAdjacentHTML'],\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n * @extends AlreadyConstructedMarkerType\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {!function(...(!Node|string))} builtInMethod\n   * @return {!function(...(!Node|string))}\n   */\n  function appendPrependPatch(builtInMethod) {\n    return /** @this {!Node} */ function(...nodes) {\n      /**\n       * A copy of `nodes`, with any DocumentFragment replaced by its children.\n       * @type {!Array<!Node>}\n       */\n      const flattenedNodes = [];\n\n      /**\n       * Elements in `nodes` that were connected before this call.\n       * @type {!Array<!Node>}\n       */\n      const connectedElements = [];\n\n      for (var i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n\n        if (node instanceof Element && Utilities.isConnected(node)) {\n          connectedElements.push(node);\n        }\n\n        if (node instanceof DocumentFragment) {\n          for (let child = node.firstChild; child; child = child.nextSibling) {\n            flattenedNodes.push(child);\n          }\n        } else {\n          flattenedNodes.push(node);\n        }\n      }\n\n      builtInMethod.apply(this, nodes);\n\n      for (let i = 0; i < connectedElements.length; i++) {\n        internals.disconnectTree(connectedElements[i]);\n      }\n\n      if (Utilities.isConnected(this)) {\n        for (let i = 0; i < flattenedNodes.length; i++) {\n          const node = flattenedNodes[i];\n          if (node instanceof Element) {\n            internals.connectTree(node);\n          }\n        }\n      }\n    };\n  }\n\n  if (builtIn.prepend !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'prepend', appendPrependPatch(builtIn.prepend));\n  }\n\n  if (builtIn.append !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'append', appendPrependPatch(builtIn.append));\n  }\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport CustomElementRegistry from './CustomElementRegistry.js';\n\nimport PatchHTMLElement from './Patch/HTMLElement.js';\nimport PatchDocument from './Patch/Document.js';\nimport PatchDocumentFragment from './Patch/DocumentFragment.js';\nimport PatchNode from './Patch/Node.js';\nimport PatchElement from './Patch/Element.js';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchDocumentFragment(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      const constructor = /** @type {!Function} */ (this.constructor);\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = /** @type {!HTMLElement} */ (Native.Document_createElement.call(document, definition.localName));\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patchElement(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      const toConstructElement = /** @type {!HTMLElement} */ (element);\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(toConstructElement, constructor.prototype);\n      internals.patchElement(toConstructElement);\n\n      return toConstructElement;\n    }\n\n    HTMLElement.prototype = Native.HTMLElement.prototype;\n    // Safari 9 has `writable: false` on the propertyDescriptor\n    // Make it writable so that TypeScript can patch up the\n    // constructor in the ES5 compiled code.\n    Object.defineProperty(HTMLElement.prototype, 'constructor', {\n      writable: true,\n      configurable: true,\n      enumerable: false,\n      value: HTMLElement\n    });\n\n    return HTMLElement;\n  })();\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructorFunction)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElement.call(this, localName));\n      internals.patchElement(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = /** @type {!Node} */ (Native.Document_importNode.call(this, node, !!deep));\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructorFunction)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElementNS.call(this, namespace, localName));\n      internals.patchElement(result);\n      return result;\n    });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: Native.Document_prepend,\n    append: Native.Document_append,\n  });\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport Native from './Native.js';\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  PatchParentNode(internals, DocumentFragment.prototype, {\n    prepend: Native.DocumentFragment_prepend,\n    append: Native.DocumentFragment_append,\n  });\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_appendChild.call(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_appendChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = Native.Node_cloneNode.call(this, !!deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!this.ownerDocument.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_removeChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(nodeToInsert.childNodes);\n        const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        let removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (this.firstChild) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          const childNodes = this.childNodes;\n          const childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (let i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n      },\n    });\n  }\n\n  if (Native.Node_textContent && Native.Node_textContent.get) {\n    patch_textContent(Node.prototype, Native.Node_textContent);\n  } else {\n    internals.addNodePatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          for (let i = 0; i < this.childNodes.length; i++) {\n            const childNode = this.childNodes[i];\n            if (childNode.nodeType === Node.COMMENT_NODE) {\n              continue;\n            }\n            parts.push(childNode.textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          while (this.firstChild) {\n            Native.Node_removeChild.call(this, this.firstChild);\n          }\n          // `textContent = null | undefined | ''` does not result in\n          // a TextNode childNode\n          if (assignedValue != null && assignedValue !== '') {\n            Native.Node_appendChild.call(this, document.createTextNode(assignedValue));\n          }\n        },\n      });\n    });\n  }\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\nimport PatchChildNode from './Interface/ChildNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (Native.Element_attachShadow) {\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = Native.Element_attachShadow.call(this, init);\n        internals.patchNode(shadowRoot);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const isConnected = Utilities.isConnected(this);\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        /** @type {!Array<!Element>|undefined} */\n        let removedElements = undefined;\n        if (isConnected) {\n          removedElements = [];\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this) {\n              removedElements.push(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (removedElements) {\n          for (let i = 0; i < removedElements.length; i++) {\n            const element = removedElements[i];\n            if (element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n  }\n\n  if (Native.Element_innerHTML && Native.Element_innerHTML.get) {\n    patch_innerHTML(Element.prototype, Native.Element_innerHTML);\n  } else if (Native.HTMLElement_innerHTML && Native.HTMLElement_innerHTML.get) {\n    patch_innerHTML(HTMLElement.prototype, Native.HTMLElement_innerHTML);\n  } else {\n    internals.addElementPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return /** @type {!Element} */ (\n                     Native.Node_cloneNode.call(this, true))\n              .innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          const isTemplate = (this.localName === 'template');\n          /** @type {!Node} */\n          const content = isTemplate ? (/** @type {!HTMLTemplateElement} */\n            (this)).content : this;\n          /** @type {!Element} */\n          const rawElement = Native.Document_createElementNS.call(document,\n              this.namespaceURI, this.localName);\n          rawElement.innerHTML = assignedValue;\n\n          while (content.childNodes.length > 0) {\n            Native.Node_removeChild.call(content, content.childNodes[0]);\n          }\n          const container = isTemplate ?\n              /** @type {!HTMLTemplateElement} */ (rawElement).content :\n              rawElement;\n          while (container.childNodes.length > 0) {\n            Native.Node_appendChild.call(content, container.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttribute.call(this, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_setAttribute.call(this, name, newValue);\n      newValue = Native.Element_getAttribute.call(this, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttribute.call(this, name);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_removeAttribute.call(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttributeNS.call(this, namespace, name);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_removeAttributeNS.call(this, namespace, name);\n      // In older browsers, `Element#getAttributeNS` may return the empty string\n      // instead of null if the attribute does not exist. For details, see;\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n      const newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      /**\n       * @this {Element}\n       * @param {string} position\n       * @param {!Element} element\n       * @return {?Element}\n       */\n      function(position, element) {\n        const wasConnected = Utilities.isConnected(element);\n        const insertedElement = /** @type {!Element} */\n          (baseMethod.call(this, position, element));\n\n        if (wasConnected) {\n          internals.disconnectTree(element);\n        }\n\n        if (Utilities.isConnected(insertedElement)) {\n          internals.connectTree(element);\n        }\n        return insertedElement;\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentElement) {\n    patch_insertAdjacentElement(HTMLElement.prototype, Native.HTMLElement_insertAdjacentElement);\n  } else if (Native.Element_insertAdjacentElement) {\n    patch_insertAdjacentElement(Element.prototype, Native.Element_insertAdjacentElement);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  function patch_insertAdjacentHTML(destination, baseMethod) {\n    /**\n     * Patches and upgrades all nodes which are siblings between `start`\n     * (inclusive) and `end` (exclusive). If `end` is `null`, then all siblings\n     * following `start` will be patched and upgraded.\n     * @param {!Node} start\n     * @param {?Node} end\n     */\n    function upgradeNodesInRange(start, end) {\n      const nodes = [];\n      for (let node = start; node !== end; node = node.nextSibling) {\n        nodes.push(node);\n      }\n      for (let i = 0; i < nodes.length; i++) {\n        internals.patchAndUpgradeTree(nodes[i]);\n      }\n    }\n\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentHTML',\n      /**\n       * @this {Element}\n       * @param {string} position\n       * @param {string} text\n       */\n      function(position, text) {\n        position = position.toLowerCase();\n\n        if (position === \"beforebegin\") {\n          const marker = this.previousSibling;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(marker || /** @type {!Node} */ (this.parentNode.firstChild), this);\n        } else if (position === \"afterbegin\") {\n          const marker = this.firstChild;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(/** @type {!Node} */ (this.firstChild), marker);\n        } else if (position === \"beforeend\") {\n          const marker = this.lastChild;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(marker || /** @type {!Node} */ (this.firstChild), null);\n        } else if (position === \"afterend\") {\n          const marker = this.nextSibling;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(/** @type {!Node} */ (this.nextSibling), marker);\n        } else {\n          throw new SyntaxError(`The value provided (${String(position)}) is ` +\n            \"not one of 'beforebegin', 'afterbegin', 'beforeend', or 'afterend'.\");\n        }\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentHTML) {\n    patch_insertAdjacentHTML(HTMLElement.prototype, Native.HTMLElement_insertAdjacentHTML);\n  } else if (Native.Element_insertAdjacentHTML) {\n    patch_insertAdjacentHTML(Element.prototype, Native.Element_insertAdjacentHTML);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentHTML` was not patched.');\n  }\n\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: Native.Element_prepend,\n    append: Native.Element_append,\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: Native.Element_before,\n    after: Native.Element_after,\n    replaceWith: Native.Element_replaceWith,\n    remove: Native.Element_remove,\n  });\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {!function(...(!Node|string))} builtInMethod\n   * @return {!function(...(!Node|string))}\n   */\n  function beforeAfterPatch(builtInMethod) {\n    return /** @this {!Node} */ function(...nodes) {\n      /**\n       * A copy of `nodes`, with any DocumentFragment replaced by its children.\n       * @type {!Array<!Node>}\n       */\n      const flattenedNodes = [];\n\n      /**\n       * Elements in `nodes` that were connected before this call.\n       * @type {!Array<!Node>}\n       */\n      const connectedElements = [];\n\n      for (var i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n\n        if (node instanceof Element && Utilities.isConnected(node)) {\n          connectedElements.push(node);\n        }\n\n        if (node instanceof DocumentFragment) {\n          for (let child = node.firstChild; child; child = child.nextSibling) {\n            flattenedNodes.push(child);\n          }\n        } else {\n          flattenedNodes.push(node);\n        }\n      }\n\n      builtInMethod.apply(this, nodes);\n\n      for (let i = 0; i < connectedElements.length; i++) {\n        internals.disconnectTree(connectedElements[i]);\n      }\n\n      if (Utilities.isConnected(this)) {\n        for (let i = 0; i < flattenedNodes.length; i++) {\n          const node = flattenedNodes[i];\n          if (node instanceof Element) {\n            internals.connectTree(node);\n          }\n        }\n      }\n    };\n  }\n\n  if (builtIn.before !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'before', beforeAfterPatch(builtIn.before));\n  }\n\n  if (builtIn.before !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'after', beforeAfterPatch(builtIn.after));\n  }\n\n  if (builtIn.replaceWith !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'replaceWith',\n      /**\n       * @param {...(!Node|string)} nodes\n       * @this {!Node}\n       */\n      function(...nodes) {\n        /**\n         * A copy of `nodes`, with any DocumentFragment replaced by its children.\n         * @type {!Array<!Node|string>}\n         */\n        const flattenedNodes = [];\n\n        /**\n         * Elements in `nodes` that were connected before this call.\n         * @type {!Array<!Node>}\n         */\n        const connectedElements = [];\n\n        for (var i = 0; i < nodes.length; i++) {\n          const node = nodes[i];\n\n          if (node instanceof Element && Utilities.isConnected(node)) {\n            connectedElements.push(node);\n          }\n\n          if (node instanceof DocumentFragment) {\n            for (let child = node.firstChild; child; child = child.nextSibling) {\n              flattenedNodes.push(child);\n            }\n          } else {\n            flattenedNodes.push(node);\n          }\n        }\n\n        const wasConnected = Utilities.isConnected(this);\n\n        builtIn.replaceWith.apply(this, nodes);\n\n        for (let i = 0; i < connectedElements.length; i++) {\n          internals.disconnectTree(connectedElements[i]);\n        }\n\n        if (wasConnected) {\n          internals.disconnectTree(this);\n          for (let i = 0; i < flattenedNodes.length; i++) {\n            const node = flattenedNodes[i];\n            if (node instanceof Element) {\n              internals.connectTree(node);\n            }\n          }\n        }\n      });\n    }\n\n  if (builtIn.remove !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'remove',\n      /** @this {!Node} */\n      function() {\n        const wasConnected = Utilities.isConnected(this);\n\n        builtIn.remove.call(this);\n\n        if (wasConnected) {\n          internals.disconnectTree(this);\n        }\n      });\n  }\n};\n"],"sourceRoot":""}