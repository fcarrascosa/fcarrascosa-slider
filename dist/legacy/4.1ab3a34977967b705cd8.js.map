{"version":3,"sources":["webpack:///./src/FcarrascosaSlider.js","webpack:///./src/FcarrascosaSliderSlide.js","webpack:///./index.js"],"names":["FcarrascosaSlider","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","currentSlide","latestSelectedSlide","totalAmountOfSlides","querySelectorAll","length","LitElement","type","Number","time","value","interval","Function","_get","prototype","console","warn","goToSlide","initSlider","setInterval","goToNextSlide","bind","clearInterval","targetSlide","selectSlide","slideToSelect","forEach","slide","index","setAttribute","html","_templateObject","css","_templateObject2","FcarrascosaSliderSlide","FcarrascosaSliderSlide_classCallCheck","FcarrascosaSliderSlide_possibleConstructorReturn","FcarrascosaSliderSlide_getPrototypeOf","getAttribute","Error","captionAlignment","caption","FcarrascosaSliderSlide_templateObject","FcarrascosaSliderSlide_templateObject2","image","alt","renderCaption","selected","Boolean","String","_templateObject3","customElements","define","is"],"mappings":"qqDAMqBA,cAsCnB,SAAAA,IAAc,IAAAC,EAAA,mGAAAC,CAAAC,KAAAH,IACZC,EAAAG,EAAAD,KAAAE,EAAAL,GAAAM,KAAAH,QACKI,aAAe,EACpBN,EAAKO,oBAAsB,KAC3BP,EAAKQ,oBAAsBR,EAAKS,iBAAiB,4BAA4BC,OAJjEV,8OAtC+BW,2CAC3B,MAAO,wDAGvB,MAAO,CAILL,aAAc,CACZM,KAAMC,QAKRN,oBAAqB,CACnBK,KAAMC,QAKRL,oBAAqB,CACnBI,KAAMC,QAMRC,KAAM,CACJF,KAAMC,OACNE,MAAO,GAGTC,SAAU,CACRJ,KAAMK,8DAaVC,EAAAd,EAAAL,EAAAoB,WAAA,oBAAAjB,MAAAG,KAAAH,MACiC,IAA7BA,KAAKM,oBAEPY,QAAQC,KAAK,oCAEbnB,KAAKY,KAAOZ,KAAKY,MAAQ,EACzBZ,KAAKoB,UAAU,GACfpB,KAAKqB,mDAKPrB,KAAKc,SAAWQ,YAAYtB,KAAKuB,cAAcC,KAAKxB,MAAmB,IAAZA,KAAKY,4CAIhEa,cAAczB,KAAKc,UACnBd,KAAKc,SAAW,6CAOhB,IAAMY,EAAc1B,KAAKM,oBAAsB,IAAMN,KAAKI,aACtD,EACAJ,KAAKI,aAAe,EACxBJ,KAAKoB,UAAUM,+CAOf,IAAMA,EAAoC,IAAtB1B,KAAKI,aACrBJ,KAAKM,oBAAsB,EAC3BN,KAAKI,aAAe,EACxBJ,KAAKoB,UAAUM,qCAOPA,GACR1B,KAAKK,oBAAsBL,KAAKI,aAChCJ,KAAK2B,YAAYD,uCAOPE,GACV5B,KAAKO,iBAAiB,4BAA4BsB,QAAQ,SAACC,EAAOC,GAChED,EAAME,aAAa,WAAYD,IAAUH,KAE3C5B,KAAKI,aAAewB,mCAuBpB,OAAOK,YAAPC,sCAnBA,OAAOC,YAAPC,wsDC5GiBC,cAGnB,SAAAA,IAAc,IAAAvC,EAEZ,+FAFYwC,CAAAtC,KAAAqC,KACZvC,EAAAyC,EAAAvC,KAAAwC,EAAAH,GAAAlC,KAAAH,QACUyC,aAAa,SAAU,MAAM,IAAIC,MAAM,gCAFrC,OAGR5C,EAAK2C,aAAa,aACpB3C,EAAK6C,iBAAmB7C,EAAK2C,aAAa,sBAAwB,UAJxD3C,8OAHoCW,2CAChC,MAAO,0EA+BvB,OAAOT,KAAK4C,QACRX,YADGY,IAC2B7C,KAAK2C,iBAAqB3C,KAAK4C,SAC7D,oCAsDJ,OAAOX,YAAPa,IACgB9C,KAAK+C,MAAe/C,KAAK4C,SAAW5C,KAAKgD,IAAehD,KAAK4C,SAAW5C,KAAKgD,IACvFhD,KAAKiD,sDA9EX,MAAO,CACLC,SAAU,CACRxC,KAAMyC,SAERP,QAAS,CACPlC,KAAM0C,QAERL,MAAO,CACLrC,KAAM0C,QAERJ,IAAK,CACHtC,KAAM0C,QAERT,iBAAkB,CAChBjC,KAAM0C,wCAYV,OAAOjB,YAAPkB,cCxCJC,eAAeC,OAAO1D,EAAkB2D,GAAI3D,GAC5CyD,eAAeC,OAAOlB,EAAuBmB,GAAInB","file":"legacy/4.1ab3a34977967b705cd8.js","sourcesContent":["import { LitElement, html, css } from 'lit-element';\n\n/**\n * @customElement\n * @demo demo/index.html\n */\nexport default class FcarrascosaSlider extends LitElement {\n  static get is() { return 'fcarrascosa-slider'; }\n\n  static get properties() {\n    return {\n      /**\n       * The index of the current Slide shown in the slider.\n       */\n      currentSlide: {\n        type: Number,\n      },\n      /**\n       * The index of the latest Slide shown in the slider.\n       */\n      latestSelectedSlide: {\n        type: Number,\n      },\n      /**\n       * The amount of slides.\n       */\n      totalAmountOfSlides: {\n        type: Number,\n      },\n\n      /**\n       * The time (in seconds) each slide will be displayed.\n       */\n      time: {\n        type: Number,\n        value: 4,\n      },\n\n      interval: {\n        type: Function,\n      },\n    };\n  }\n\n  constructor() {\n    super();\n    this.currentSlide = 0;\n    this.latestSelectedSlide = null;\n    this.totalAmountOfSlides = this.querySelectorAll('fcarrascosa-slider-slide').length;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.totalAmountOfSlides === 0) {\n      // eslint-disable-next-line no-console\n      console.warn('slider does not have any slides');\n    } else {\n      this.time = this.time || 4;\n      this.goToSlide(0);\n      this.initSlider();\n    }\n  }\n\n  initSlider() {\n    this.interval = setInterval(this.goToNextSlide.bind(this), this.time * 1000);\n  }\n\n  pauseSlider() {\n    clearInterval(this.interval);\n    this.interval = null;\n  }\n\n  /**\n   * Selects the next slide. If it's called from last slide, selects the first.\n   */\n  goToNextSlide() {\n    const targetSlide = this.totalAmountOfSlides - 1 === this.currentSlide\n      ? 0\n      : this.currentSlide + 1;\n    this.goToSlide(targetSlide);\n  }\n\n  /**\n   * Selects the previous slide. If it's called from first slide, selects the last.\n   */\n  goToPreviousSlide() {\n    const targetSlide = this.currentSlide === 0\n      ? this.totalAmountOfSlides - 1\n      : this.currentSlide - 1;\n    this.goToSlide(targetSlide);\n  }\n\n  /**\n   * Sets the latestSelectedSlide and selects the currentSlide\n   * @param targetSlide\n   */\n  goToSlide(targetSlide) {\n    this.latestSelectedSlide = this.currentSlide;\n    this.selectSlide(targetSlide);\n  }\n\n  /**\n   * Selects the currentSlide\n   * @param slideToSelect\n   */\n  selectSlide(slideToSelect) {\n    this.querySelectorAll('fcarrascosa-slider-slide').forEach((slide, index) => {\n      slide.setAttribute('selected', index === slideToSelect);\n    });\n    this.currentSlide = slideToSelect;\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        box-sizing: content-box;\n        display: block;\n        transition: all .5s ease-in-out;\n        position: relative;\n        overflow: hidden;\n      }\n      \n      ::slotted(fcarrascosa-slider-slide) {\n        left: 0;\n        position: relative;\n        top: 0;\n        width: 100%;\n      }\n    `;\n  }\n\n  render() {\n    return html`\n            <slot></slot>\n        `;\n  }\n}\n","import { LitElement, html, css } from 'lit-element';\n\n/**\n * @customElement\n */\nexport default class FcarrascosaSliderSlide extends LitElement {\n  static get is() { return 'fcarrascosa-slider-slide'; }\n\n  constructor() {\n    super();\n    if (!this.getAttribute('image')) throw new Error('Element should have an image');\n    if (this.getAttribute('caption')) {\n      this.captionAlignment = this.getAttribute('caption-alignment') || 'center';\n    }\n  }\n\n  static get properties() {\n    return {\n      selected: {\n        type: Boolean,\n      },\n      caption: {\n        type: String,\n      },\n      image: {\n        type: String,\n      },\n      alt: {\n        type: String,\n      },\n      captionAlignment: {\n        type: String,\n      },\n    };\n  }\n\n  renderCaption() {\n    return this.caption\n      ? html`<div><p caption-align=\"${this.captionAlignment}\">${this.caption}</p></div>`\n      : '';\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: block;\n        height: 0;\n        opacity: 0;\n        position: relative;\n        transition: opacity 1.5s ease-in-out;\n        width: 100%;\n      }\n      \n      :host([selected=\"true\"]) {\n        height: auto;\n        opacity: 1;\n      }\n      \n      img {\n        display: block;\n        width: 100%;\n      }\n      p {\n        bottom: 20px;\n        box-sizing: border-box;\n        left: 0;\n        opacity: 0;\n        padding: 0 20px;\n        position: absolute;\n        transition: opacity 1.5s ease-in-out;\n        width: 100%;\n      }\n      \n      p[caption-align=\"right\"] {\n        text-align: right;\n      }\n      \n      p[caption-align=\"center\"] {\n        text-align: center;\n      }\n      \n      p[caption-align=\"left\"] {\n        padding: 0 20px;\n        text-align: left;\n      }\n      \n      :host([selected=\"true\"]) p {\n        opacity: 1;\n      }\n    `;\n  }\n\n  render() {\n    return html`\n        <img src=\"${this.image}\" alt=\"${this.caption || this.alt}\" title=\"${this.caption || this.alt}\">\n        ${this.renderCaption()}      \n        `;\n  }\n}\n","import FcarrascosaSlider from './src/FcarrascosaSlider';\nimport FcarrascosaSliderSlide from './src/FcarrascosaSliderSlide';\n\ncustomElements.define(FcarrascosaSlider.is, FcarrascosaSlider);\ncustomElements.define(FcarrascosaSliderSlide.is, FcarrascosaSliderSlide);\n"],"sourceRoot":""}