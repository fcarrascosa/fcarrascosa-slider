{"version":3,"sources":["webpack:///./node_modules/@webcomponents/shadydom/src/shady-data.js","webpack:///./node_modules/@webcomponents/shadydom/src/utils.js","webpack:///./node_modules/@webcomponents/shadydom/src/flush.js","webpack:///./node_modules/@webcomponents/shadydom/src/observe-changes.js","webpack:///./node_modules/@webcomponents/shadydom/src/innerHTML.js","webpack:///./node_modules/@webcomponents/shadydom/src/patch-native.js","webpack:///./node_modules/@webcomponents/shadydom/src/patch-instances.js","webpack:///./node_modules/@webcomponents/shadydom/src/patch-events.js","webpack:///./node_modules/@webcomponents/shadydom/src/array-splice.js","webpack:///./node_modules/@webcomponents/shadydom/src/link-nodes.js","webpack:///./node_modules/@webcomponents/shadydom/src/style-scoping.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/Node.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/ParentNode.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/DocumentOrFragment.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/DocumentOrShadowRoot.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/ElementOrShadowRoot.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/ShadowRoot.js","webpack:///./node_modules/@webcomponents/shadydom/src/patch-shadyRoot.js","webpack:///./node_modules/@webcomponents/shadydom/src/attach-shadow.js","webpack:///./node_modules/@webcomponents/shadydom/src/wrapper.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/EventTarget.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/Slotable.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/Element.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/HTMLElement.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/Slot.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/Document.js","webpack:///./node_modules/@webcomponents/shadydom/src/patches/Window.js","webpack:///./node_modules/@webcomponents/shadydom/src/patch-prototypes.js","webpack:///./node_modules/@webcomponents/shadydom/src/shadydom.js","webpack:///./node_modules/@webcomponents/shadycss/src/css-parse.js","webpack:///./node_modules/@webcomponents/shadycss/src/style-settings.js","webpack:///./node_modules/@webcomponents/shadycss/src/common-regex.js","webpack:///./node_modules/@webcomponents/shadycss/src/unscoped-style-handler.js","webpack:///./node_modules/@webcomponents/shadycss/src/style-util.js","webpack:///./node_modules/@webcomponents/shadycss/src/style-transformer.js","webpack:///./node_modules/@webcomponents/shadycss/src/style-info.js","webpack:///./node_modules/@webcomponents/shadycss/src/style-properties.js","webpack:///./node_modules/@webcomponents/shadycss/src/style-placeholder.js","webpack:///./node_modules/@webcomponents/shadycss/src/style-cache.js","webpack:///./node_modules/@webcomponents/shadycss/src/document-watcher.js","webpack:///./node_modules/@webcomponents/shadycss/src/template-map.js","webpack:///./node_modules/@webcomponents/shadycss/src/apply-shim-utils.js","webpack:///./node_modules/@webcomponents/shadycss/src/document-wait.js","webpack:///./node_modules/@webcomponents/shadycss/src/custom-style-interface.js","webpack:///./node_modules/@webcomponents/shadycss/src/scoping-shim.js","webpack:///./node_modules/@webcomponents/shadycss/src/common-utils.js","webpack:///./node_modules/@webcomponents/shadycss/entrypoints/scoping-shim.js","webpack:///./node_modules/@webcomponents/custom-elements/src/Utilities.js","webpack:///./node_modules/@webcomponents/custom-elements/src/CustomElementState.js","webpack:///./node_modules/@webcomponents/custom-elements/src/CustomElementInternals.js","webpack:///./node_modules/@webcomponents/custom-elements/src/DocumentConstructionObserver.js","webpack:///./node_modules/@webcomponents/custom-elements/src/Deferred.js","webpack:///./node_modules/@webcomponents/custom-elements/src/CustomElementRegistry.js","webpack:///./node_modules/@webcomponents/custom-elements/src/Patch/Native.js","webpack:///./node_modules/@webcomponents/custom-elements/src/Patch/HTMLElement.js","webpack:///./node_modules/@webcomponents/custom-elements/src/AlreadyConstructedMarker.js","webpack:///./node_modules/@webcomponents/custom-elements/src/Patch/Interface/ParentNode.js","webpack:///./node_modules/@webcomponents/custom-elements/src/custom-elements.js","webpack:///./node_modules/@webcomponents/custom-elements/src/Patch/Document.js","webpack:///./node_modules/@webcomponents/custom-elements/src/Patch/DocumentFragment.js","webpack:///./node_modules/@webcomponents/custom-elements/src/Patch/Node.js","webpack:///./node_modules/@webcomponents/custom-elements/src/Patch/Element.js","webpack:///./node_modules/@webcomponents/custom-elements/src/Patch/Interface/ChildNode.js"],"names":["ShadyData","_classCallCheck","this","key","value","ensureShadyDataForNode","node","__shady","shadyDataForNode","settings","window","hasNativeShadowDOM","Boolean","Element","prototype","attachShadow","Node","getRootNode","desc","Object","getOwnPropertyDescriptor","hasDescriptors","configurable","get","inUse","noPatch","preferPerformance","IS_IE","navigator","userAgent","match","isTrackingLogicalChildNodes","nodeData","undefined","firstChild","isShadyRoot","obj","_localName","hasShadowRootWithSlot","root","_hasInsertionPoint","p","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","element","selector","call","twiddle","document","createTextNode","content","queue","MutationObserver","length","shift","e","textContent","observe","characterData","scheduled","microtask","callback","push","hasDocumentContains","contains","container","SHADY_PREFIX","getNodeHTMLCollectionName","getAttribute","isValidHTMLCollectionName","name","isNaN","createPolyfilledHTMLCollection","nodes","l","item","index","namedItem","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","NATIVE_PREFIX","nativeChildNodesArray","parent","result","n","childNodesArray","patchProperties","proto","descriptors","prefix","arguments","disallowedPatches","newDescriptor","indexOf","defineProperty","getOwnPropertyDescriptors","HTMLElement","getOwnPropertyNames","forEach","flushList","enqueue","utils","flush","didFlush","AsyncObserver","observe_changes_classCallCheck","_scheduled","addedNodes","removedNodes","callbacks","Set","_this","mutations","takeRecords","cb","escapeAttrRegExp","escapeDataRegExp","escapeReplace","c","escapeAttr","s","replace","makeSet","arr","set","i","voidElements","plaintextParents","getOuterHTML","parentNode","nodeType","ELEMENT_NODE","attr","tagName","localName","attrs","attributes","getInnerHTML","TEXT_NODE","data","escapeData","COMMENT_NODE","console","error","Error","child","c$","childNodes","nativeMethods","querySelector","querySelectorAll","nativeTree","installNativeAccessor","installNativeMethod","fn","defineNativeAccessors","prop","copyProperties","list","descriptor","nodeWalker","createTreeWalker","NodeFilter","SHOW_ALL","elementWalker","SHOW_ELEMENT","inertDoc","implementation","createHTMLDocument","clearNode","ParentNodeAccessors","ParentNodeMethods","InsideDescriptors","lastChild","childElementCount","children","firstElementChild","lastElementChild","shadowRoot","TextContentInnerHTMLDescriptors","innerHTML","OutsideDescriptors","parentElement","nextSibling","previousSibling","nextElementSibling","previousElementSibling","className","enumerable","noInstancePatching","patchOutsideElementAccessors","sd","__outsideAccessors","patchInsideElementAccessors","__insideAccessors","composedProp","supported","eventOptions","listener","eventWrappersName","concat","Date","now","composedGetter","Event","ev","supportsEventOptions","capture","addEventListener","removeEventListener","parseEventOptions","optionsOrCapture","once","passive","shadyTarget","_typeof","__shadyTarget","nativeEventOptions","alwaysComposed","blur","focus","focusin","focusout","click","dblclick","mousedown","mouseenter","mouseleave","mousemove","mouseout","mouseover","mouseup","wheel","beforeinput","input","keydown","keyup","compositionstart","compositionupdate","compositionend","touchstart","touchend","touchmove","touchcancel","pointerover","pointerenter","pointerdown","pointermove","pointerup","pointercancel","pointerout","pointerleave","gotpointercapture","lostpointercapture","dragstart","drag","dragenter","dragleave","dragover","drop","dragend","DOMActivate","DOMFocusIn","DOMFocusOut","keypress","unpatchedEvents","DOMAttrModified","DOMAttributeNameChanged","DOMCharacterDataModified","DOMElementNameChanged","DOMNodeInserted","DOMNodeInsertedIntoDocument","DOMNodeRemoved","DOMNodeRemovedFromDocument","DOMSubtreeModified","getRootNodeWithFallback","eventTarget","pathComposer","startNode","composed","composedPath","current","startRoot","DOCUMENT_FRAGMENT_NODE","host","retarget","refNode","path","ancestor","lastRoot","rootIdx","refNodePath","p$","mixinComposedFlag","Base","klazz","type","options","event","__composed","__proto__","nonBubblingEventsToRetarget","hasRetargeted","target","__relatedTarget","relatedTarget","fireHandlers","phase","hs","__handlers","__immediatePropagationStopped","retargetNonBubblingEvent","lastFiredRoot","__propagationStopped","AT_TARGET","listenerSettingsEqual","savedListener","savedNode","savedType","savedCapture","savedOnce","savedPassive","findListener","wrappers","fnOrObj","_parseEventOptions","handlerType","handleEvent","wrapperFn","lastCurrentTargetDesc","patchEvent","eventPhase","BUBBLING_PHASE","stopImmediatePropagation","CAPTURING_PHASE","bubbles","Window","ret","bubble","_parseEventOptions2","eventLike","getEventWrappers","idx","splice","EventPatchesDescriptors","isTrusted","__composedPath","currentTarget","__relatedTargetComposedPath","stopPropagation","SHADY_PROTO","SHADY_SOURCE_PROTO","getPrototypeOf","hasOwnProperty","patchedProto","create","PatchedEvent","PatchedCustomEvent","CustomEvent","PatchedMouseEvent","MouseEvent","eventPropertyNames","Document","filter","substring","newSplice","removed","addedCount","EDIT_LEAVE","EDIT_UPDATE","EDIT_ADD","EDIT_DELETE","calcSplices","currentStart","currentEnd","old","oldStart","oldEnd","prefixCount","suffixCount","minLength","Math","min","searchLength","equals","sharedPrefix","index1","index2","count","sharedSuffix","ops","distances","j","edits","northWest","west","north","reverse","spliceOperationsFromEditDistances","rowCount","columnCount","Array","calcEditDistances","splices","oldIndex","currentValue","previousValue","linkNode","containerData","ref_node","ref_nodeData","psd","nsd","recordChildNodes","adoptedParent","first","previous","scopingShim","getScopingShim","removeShadyScoping","currentScopeName","replaceShadyScoping","newScopeName","oldScopeName","addShadyScoping","currentScopeForNode","treeVisitor","visitorFn","doc","nativeIsConnectedAccessors","nativeIsConnected","removeOwnerShadyRoot","ownerShadyRoot","hasCachedOwnerRoot","scheduleObserver","addedNode","removedNode","observer","schedule","NodePatches","isConnected","ownerDocument","documentElement","tc","join","nodeValue","insertBefore","refData","slotsAdded","ownerRoot","ownerShadyRootForNode","skipUnscoping","allowNativeInsert","needsScoping","currentScopeIsCorrect","correctScope","needsSlotFinding","_addSlots","_asyncRender","recordInsertBefore","parentData","firstComposedNode","flattened","flattenedNodes","adoptNode","appendChild","removeChild","preventNativeRemove","removingInsertionPoint","_removeContainedSlots","recordRemoveChild","changeSlotContent","replaceChild","cloneNode","deep","ATTRIBUTE_NODE","nc","query","matcher","halter","queryChildNodes","queryElement","ParentNodePatches","QueryPatches","useNative","o","slice","ParentNodeDocumentOrFragmentPatches","assign","DocumentOrFragmentPatches","getElementById","id","DocumentOrShadowRootPatches","activeElement","active","activeRoot","ElementOrShadowRootPatches","htmlContainer","containerName","namespaceURI","createElementNS","createElement","ShadowRootPatches","ShadowRoot_typeof","patchShadyAccessors","rootRendered","ShadyRootConstructionToken","isRendering","readyState","ancestorList","ancestors","unshift","ShadyRoot","token","attach_shadow_classCallCheck","TypeError","_renderPending","_hasRendered","_slotList","_slotMap","_pendingSlots","_init","mode","hostData","publicRoot","rootData","_render","renderRoot","_getDistributionParent","__childSlotCount","_getPendingDistributionRoot","_renderSelf","wasRendering","_distribute","_compose","assignedSlot","_validateSlots","slot","_clearSlotAssignedNodes","_distributeNodeToSlot","slotData","assignedNodes","slotParentData","slotParentRoot","_addAssignedToFlattenedNodes","prevAssignedNodes","_previouslyAssignedNodes","_prevAssignedSlot","dirty","_fireSlotChange","forcedSlot","oldSlot","n$","assigned","nestedAssigned","slots","composeList","targetNode","_updateChildNodes","_composeNode","_isInsertionPoint","distributedNode","d","_this$_pendingSlots","_ensureSlotData","apply","_toConsumableArray","_mapSlots","slotNamesToSort","slotParent","_nameForSlot","_sortSlots","__slotName","sort","a","b","listA","listB","nA","nB","didRemove","map","x","_removeFlattenedNodes","oldName","DocumentFragment","defineProperties","nodeName","ShadowRoot","connectMap","Map","r","v","k","clear","originalDefine","define","constructor","connected","connectedCallback","disconnected","disconnectedCallback","base","counter","connectFlag","ManageConnect","customElements","Wrapper","wrapper_classCallCheck","DOCUMENT_NODE","wrapperMap","WeakMap","EventTargetPatches","dispatchEvent","SlotablePatches","distributeAttributeChange","_updateSlotName","ElementPatches","setAttribute","scopeClassAttribute","removeAttribute","HTMLElementPatches","shadowActive","property","shadyData","eventName","__onCallbackListeners","SlotPatches","flatten","Slot_typeof","DocumentPatches","importNode","WindowPatches","bind","NonStandardHTMLElement","ElementShouldHaveInnerHTML","patchMap","EventTarget","Text","HTMLSlotElement","disallowedNativePatches","applyPatches","disallowed","_loop","patch","ShadyDOM","flushInitial","_flushInitial","filterMutations","targetRootNode","mutation","mutationInScope","from","m","observeChildren","add","_callback","_observer","_node","unobserveChildren","handle","delete","size","deferConnectionCallbacks","handlesDynamicScoping","wrap","wrapper","eventProps","currentNode","textWalker","SHOW_TEXT","nextNode","ParentNodeWalkerDescriptors","newContent","HTMLTemplateElement","addNativePrefixedProperties","addShadyPrefixedProperties","composedClickFn","cancelable","patchClick","activateFocusEventOverrides","StyleNode","parse","text","parseCss","t","trim","ss","code","repeat","_expandUnicodeEscapes","RX","multipleSpaces","lastIndexOf","AT_START","MEDIA_START","types","MEDIA_RULE","keyframesRule","KEYFRAMES_RULE","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","OPEN_BRACE","CLOSE_BRACE","lex","comments","port","stringify","preserveProperties","cssText","rules","_hasMixinRules","mixinApply","varApply","removeCustomPropApply","removeCustomPropAssignment","removeCustomProps","customProp","mixinProp","nativeCssVariables_","cssBuild","nativeShadow","calcCssVariables","CSS","supports","ShadyCSS","disableRuntime","nativeCss","nativeCssVariables","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","MEDIA_MATCH","BRACKETED","styleTextSet","scopingAttribute","processUnscopedStyle","style","has","newStyle","head","isUnscopedStyle","hasAttribute","toCssText","forEachRule","rulesForStyle","isKeyframesSelector","rule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","matchMedia","applyCss","moniker","contextNode","createScopeStyle","applyStyle","lastHeadApplyNode","after","compareDocumentPosition","DOCUMENT_POSITION_PRECEDING","findMatchingParen","start","level","setElementClassRaw","getIsExtends","is","typeExtension","extends","splitSelectorList","parts","part","end","CSS_BUILD_ATTR","getCssBuild","__cssBuild","attrValue","buildComment","Comment","commentParts","getBuildComment","removeBuildComment","elementHasBuiltCss","isOptimalCssBuild","StyleTransformer","scope","shouldRemoveScope","_transformDom","_this2","transformer","template","_content","classList","remove","CLASS","StyleUtil","oldScope","newScope","_this3","_this4","styleRules","_StyleUtil$getIsExten","css","ext","hostScope","_calcHostScope","_calcElementScope","self","isScoped","CSS_CLASS_PREFIX","_transformRule","_transformComplexSelector","transformedSelector","_transformRuleCss","COMPLEX_SELECTOR_SEP","NTH","inside","MATCHES","MATCHES_REPLACEMENT","reduce","acc","cur","_this5","stop","isNth","test","inner","_twiddleNthPlus","isMatches","_this$_preserveMatche","_preserveMatchesPseudo","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","_replaceMatchesPseudo","DIR_PAREN","before","dir","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","output","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","SELECTOR_NO_MATCH","normalizeRootSelector","_transformDocumentSelector","ROOT","SCOPE_DOC_SELECTOR","RegExp","style_transformer","StyleInfo","ast","placeholder","ownStylePropertyNames","elementName","style_info_classCallCheck","overrideStyleProperties","styleProperties","scopeSelector","customStyle","styleInfo","_getStyleRules","method","style_properties","props","keyframes","ruleIndex","decorateRule","collectPropertiesInCssText","propertyInfo","_keyframes","names","properties","collectProperties","collectCssText","any","rx","exec","collectConsumingCssText","valueForProperty","valueForProperties","processVariableAndFallback","str","suffix","comma","fallback","propertyValue","lastIndex","colon","pp","keyframeTransforms","hasAnimations","keyframeNamesToTransform","keyframe","transform","selectorToMatch","bits","parseInt","addToBitMask","parsedSelector","isRoot","isHost","hostProps","rootProps","whenHostOrRootRule","_element","_StyleUtil$getIsExten2","hostSelector","rxHostSelector","hostRx","_StyleInfo$get","_elementKeyframeTransforms","elementStyles","applyProperties","applyKeyframeTransforms","_scopeSelector","keyframesRules","_scopeKeyframes","_keyframesRuleTransformer","keyframesNameRx","transformedKeyframesName","scopeId","transformStyles","placeholderMap","getStylePlaceholder","ensureStylePlaceholder","placeHolder","createComment","ce","origDefine","clazz","StyleCache","typeMax","style_cache_classCallCheck","cache","cacheEntry","ownPropertyNames","pn","tagname","styleElement","entry","_validate","scopeRegExp","SCOPE_NAME","getCurrentScope","getClasses","getOwnerScope","ensureCorrectSubtreeScoping","unscopedNodes","unscopedNode","scopeForPreviouslyUnscopedNode","handler","mxns","mxn","currentScope","el","domRemoveScope","domReplaceScope","childList","subtree","delayedStart","body","requestAnimationFrame","templateMap","CURRENT_VERSION","NEXT_VERSION","VALIDATING_VERSION","promise","Promise","resolve","invalidate","invalidateTemplate","templateIsValid","templateIsValidating","startValidatingTemplate","_validating","then","resolveFn","readyPromise","whenReady","documentWait","CACHED_STYLE","transformFn","validateFn","CustomStyleInterface","custom_style_interface_classCallCheck","enqueueDocumentValidation","cs","getStyleForCustomStyle","styleToTransform","addCustomStyle","processStyles","transformCallback","validateCallback","needsEnqueue","adoptedCssTextMap","styleCache","ScopingShim","scoping_shim_classCallCheck","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","_elementsHaveApplied","_applyShim","_customStyleInterface","watcherFlush","styleTextParts","styles","prepareTemplateDom","prepareTemplateStyles","_prepared","optimalBuild","_gatherStyles","_ensure","hasMixins","detectMixin","StyleProperties","decorateStyles","_generateStaticStyle","_style","_ownPropertyNames","cssTextArray","_domPrepared","domAddScope","shadowroot","ApplyShim","ApplyShimUtils","transformCustomStyleForDocument","flushCustomStyles","_ensureApplyShim","_ensureCustomStyleInterface","customStyles","_revalidateCustomStyleApplyShim","_updateProperties","_applyCustomStyles","styleDocument","overrideProps","_mixOverrideStyleProps","styleElementNativeVariables","_prepareHost","_isRootOwner","styleElementShimVariables","_applyStyleProperties","removeProperty","setProperty","updateNativeProperties","_styleOwnerForNode","fetch","cachedScopeSelector","cachedStyle","oldScopeSelector","_generateScopeSelector","applyElementStyle","applyElementScopeSelector","store","owner","ownerStyleInfo","ownerProperties","hostAndRootProps","hostAndRootPropertiesForScope","propertiesMatchingHost","propertyDataFromStyles","_mixinOverrideStyles","reify","overrides","styleSubtree","wrappedHost","shadowChildren","_revalidateApplyShim","applyCustomStyle","documentRule","getComputedStyle","getPropertyValue","classString","classes","scopeName","classAttr","k$","XSCOPE_NAME","prepareTemplate","getComputedStyleValue","setElementClass","_styleInfoForNode","getStyleAst","styleAstToString","scopeNode","unscopeNode","scopeForNode","prepareAdoptedCssText","elementExtends","reservedTagList","isValidCustomElementName","reserved","validForm","nativeValue","__CE_isImportDocument","nextSiblingOrAncestorSibling","walkDeepDescendantElements","visitedImports","import","__CE_shadowRoot","setPropertyUnchecked","destination","CustomElementState","custom","failed","CustomElementInternals","_localNameToDefinition","_constructorToDefinition","_patchesNode","_patchesElement","_hasPatches","definition","constructorFunction","Utilities","patchElement","__CE_patched","elements","__CE_state","CEState","upgradeElement","upgrade","__CE_hasRegistry","__CE_documentLoadHandled","clonedVisitedImports","patchAndUpgradeTree","defaultView","localNameToDefinition","constructionStack","__CE_definition","attributeChangedCallback","observedAttributes","oldValue","newValue","namespace","DocumentConstructionObserver","internals","DocumentConstructionObserver_classCallCheck","_internals","_document","_handleMutations","disconnect","Deferred","Deferred_classCallCheck","_value","_resolve","_promise","CustomElementRegistry","CustomElementRegistry_classCallCheck","_elementDefinitionIsRunning","_whenDefinedDeferred","_flushCallback","_flushPending","_pendingDefinitions","_documentConstructionObserver","adoptedCallback","Function","SyntaxError","getCallback","callbackValue","setDefinition","_flush","pendingDefinitions","elementsWithStableDefinitions","elementsWithPendingDefinitions","pendingElements","pendingUpgradableElements","deferred","reject","prior","toPromise","some","outer","whenDefined","polyfillWrapFlushCallback","Native","Document_createElement","Document_createElementNS","Document_importNode","Document_prepend","Document_append","DocumentFragment_prepend","DocumentFragment_append","Node_cloneNode","Node_appendChild","Node_insertBefore","Node_removeChild","Node_replaceChild","Node_textContent","Element_attachShadow","Element_innerHTML","Element_getAttribute","Element_setAttribute","Element_removeAttribute","Element_getAttributeNS","getAttributeNS","Element_setAttributeNS","setAttributeNS","Element_removeAttributeNS","removeAttributeNS","Element_insertAdjacentElement","Element_insertAdjacentHTML","Element_prepend","Element_append","Element_before","Element_after","Element_replaceWith","Element_remove","HTMLElement_innerHTML","HTMLElement_insertAdjacentElement","HTMLElement_insertAdjacentHTML","src_AlreadyConstructedMarker","ParentNode","builtIn","appendPrependPatch","builtInMethod","connectedElements","_len","_key","disconnectTree","connectTree","prepend","append","priorCustomElements","constructorToDefinition","setPrototypeOf","AlreadyConstructedMarker","toConstructElement","writable","clone","patchTree","PatchParentNode","PatchDocument","PatchDocumentFragment","patch_textContent","baseDescriptor","assignedValue","childNodesLength","insertedNodes","nativeResult","nodeWasConnected","nodeToInsert","nodeToRemove","nodeToInsertWasConnected","thisIsConnected","addNodePatch","childNode","PatchNode","patch_innerHTML","htmlString","removedElements","patch_insertAdjacentElement","baseMethod","position","wasConnected","insertedElement","patch_insertAdjacentHTML","upgradeNodesInRange","toLowerCase","marker","String","init","patchNode","addElementPatch","isTemplate","rawElement","warn","beforeAfterPatch","replaceWith","_len2","_key2","PatchChildNode","PatchElement"],"mappings":"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","file":"legacy/0.96e9871f3089b4c2d7d4.js","sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\nexport class ShadyData {\n\n  /** @override */\n  toJSON() {\n    return {};\n  }\n}\n\nexport function ensureShadyDataForNode(node) {\n  if (!node.__shady) {\n    node.__shady = new ShadyData();\n  }\n  return node.__shady;\n}\n\nexport function shadyDataForNode(node) {\n  return node && node.__shady;\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport {shadyDataForNode} from './shady-data.js';\n\n/** @type {!Object} */\nexport const settings = window['ShadyDOM'] || {};\n\nsettings.hasNativeShadowDOM = Boolean(Element.prototype.attachShadow && Node.prototype.getRootNode);\n\nconst desc = Object.getOwnPropertyDescriptor(Node.prototype, 'firstChild');\n\nsettings.hasDescriptors = Boolean(desc && desc.configurable && desc.get);\nsettings.inUse = settings['force'] || !settings.hasNativeShadowDOM;\nsettings.noPatch = settings['noPatch'] || false;\nsettings.preferPerformance = settings['preferPerformance'];\n\nconst IS_IE = navigator.userAgent.match('Trident');\nsettings.IS_IE = IS_IE;\n\nexport const canUpgrade = () => !settings.IS_IE;\n\nexport const isTrackingLogicalChildNodes = (node) => {\n  const nodeData = shadyDataForNode(node);\n  return (nodeData && nodeData.firstChild !== undefined);\n}\n\nexport const isShadyRoot = (obj) => {\n  return Boolean(obj._localName === 'ShadyRoot');\n}\n\nexport const hasShadowRootWithSlot = (node) => {\n  const nodeData = shadyDataForNode(node);\n  let root = nodeData && nodeData.root;\n  return (root && root._hasInsertionPoint());\n}\n\nlet p = Element.prototype;\nlet matches = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nexport const matchesSelector = (element, selector) => {\n  return matches.call(element, selector);\n}\n\nexport const mixin = (target, source) => {\n  for (var i in source) {\n    target[i] = source[i];\n  }\n  return target;\n}\n\n// NOTE, prefer MutationObserver over Promise for microtask timing\n// for consistency x-platform.\nlet twiddle = document.createTextNode('');\nlet content = 0;\nlet queue = [];\nnew MutationObserver(() => {\n  while (queue.length) {\n    // catch errors in user code...\n    try {\n      queue.shift()();\n    } catch(e) {\n      // enqueue another record and throw\n      twiddle.textContent = content++;\n      throw(e);\n    }\n  }\n}).observe(twiddle, {characterData: true});\n\n// use MutationObserver to get microtask async timing.\nexport const microtask = (callback) => {\n  queue.push(callback);\n  twiddle.textContent = content++;\n}\n\nexport const hasDocumentContains = Boolean(document.contains);\n\nexport const contains = (container, node) => {\n  while (node) {\n    if (node == container) {\n      return true;\n    }\n    node = node[SHADY_PREFIX + 'parentNode'];\n  }\n  return false;\n}\n\nconst getNodeHTMLCollectionName = (node) =>\n    node.getAttribute('id') || node.getAttribute('name');\n\nconst isValidHTMLCollectionName = (name) => name !== 'length' && isNaN(name);\n\nexport const createPolyfilledHTMLCollection = (nodes) => {\n  // Note: loop in reverse so that the first named item matches the named property\n  for (let l = nodes.length - 1; l >= 0; l--) {\n    const node = nodes[l];\n    const name = getNodeHTMLCollectionName(node);\n\n    if (name && isValidHTMLCollectionName(name)) {\n      nodes[name] = node;\n    }\n  }\n  nodes.item = function(index) {\n    return nodes[index];\n  }\n  nodes.namedItem = function(name) {\n    if (isValidHTMLCollectionName(name) && nodes[name]) {\n      return nodes[name];\n    }\n\n    for (const node of nodes) {\n      const nodeName = getNodeHTMLCollectionName(node);\n\n      if (nodeName == name) {\n        return node;\n      }\n    }\n\n    return null;\n  };\n  return nodes;\n}\n\nexport const NATIVE_PREFIX = '__shady_native_';\nexport const SHADY_PREFIX = '__shady_';\n\nexport const nativeChildNodesArray = (parent) => {\n  const result = [];\n  for (let n=parent[NATIVE_PREFIX + 'firstChild']; n; n = n[NATIVE_PREFIX + 'nextSibling']) {\n    result.push(n);\n  }\n  return result;\n}\n\nexport const childNodesArray = (parent) => {\n  const result = [];\n  for (let n=parent[SHADY_PREFIX + 'firstChild']; n; n = n[SHADY_PREFIX + 'nextSibling']) {\n    result.push(n);\n  }\n  return result;\n}\n\n/**\n * Patch a group of accessors on an object only if it exists or if the `force`\n * argument is true.\n * @param {!Object} proto\n * @param {!Object} descriptors\n * @param {string=} prefix\n * @param {Array=} disallowedPatches\n */\nexport const patchProperties = (proto, descriptors, prefix = '', disallowedPatches) => {\n  for (let p in descriptors) {\n    const newDescriptor = descriptors[p];\n    if (disallowedPatches && disallowedPatches.indexOf(p) >= 0) {\n      continue;\n    }\n    newDescriptor.configurable = true;\n    const name = prefix + p;\n    // NOTE: we prefer writing directly because some browsers\n    // have descriptors that are writable but not configurable (e.g.\n    // `appendChild` on older browsers)\n    if (newDescriptor.value) {\n      proto[name] = newDescriptor.value;\n    } else {\n      // NOTE: this can throw if 'force' is used so catch the error.\n      try {\n        Object.defineProperty(proto, name, newDescriptor);\n      } catch(e) {\n        // this error is harmless so we just trap it.\n      }\n    }\n  }\n}\n\n/** @type {!function(new:HTMLElement)} */\nexport const NativeHTMLElement =\n    (window['customElements'] && window['customElements']['nativeHTMLElement']) ||\n    HTMLElement;\n\n// note, this is not a perfect polyfill since it doesn't include symbols\n/** @return {!Object<!ObjectPropertyDescriptor>} */\nexport const getOwnPropertyDescriptors = (obj) => {\n  const descriptors = {};\n  Object.getOwnPropertyNames(obj).forEach((name) => {\n    descriptors[name] = Object.getOwnPropertyDescriptor(obj, name);\n  });\n  return descriptors;\n};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\n\n// render enqueuer/flusher\nlet flushList = [];\nlet scheduled;\nexport function enqueue(callback) {\n  if (!scheduled) {\n    scheduled = true;\n    utils.microtask(flush);\n  }\n  flushList.push(callback);\n}\n\nexport function flush() {\n  scheduled = false;\n  let didFlush = Boolean(flushList.length);\n  while (flushList.length) {\n    flushList.shift()();\n  }\n  return didFlush;\n}\n\nflush['list'] = flushList;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {ensureShadyDataForNode} from './shady-data.js';\n\nclass AsyncObserver {\n\n  constructor() {\n    this._scheduled = false;\n    this.addedNodes = [];\n    this.removedNodes = [];\n    this.callbacks = new Set();\n  }\n\n  schedule() {\n    if (!this._scheduled) {\n      this._scheduled = true;\n      utils.microtask(() => {\n        this.flush();\n      });\n    }\n  }\n\n  flush() {\n    if (this._scheduled) {\n      this._scheduled = false;\n      let mutations = this.takeRecords();\n      if (mutations.length) {\n        this.callbacks.forEach(function(cb) {\n          cb(mutations);\n        });\n      }\n    }\n  }\n\n  takeRecords() {\n    if (this.addedNodes.length || this.removedNodes.length) {\n      let mutations = [{\n        addedNodes: this.addedNodes,\n        removedNodes: this.removedNodes\n      }];\n      this.addedNodes = [];\n      this.removedNodes = [];\n      return mutations;\n    }\n    return [];\n  }\n\n}\n\n// TODO(sorvell): consider instead polyfilling MutationObserver\n// directly so that users do not have to fork their code.\n// Supporting the entire api may be challenging: e.g. filtering out\n// removed nodes in the wrong scope and seeing non-distributing\n// subtree child mutations.\nexport let observeChildren = function(node, callback) {\n  const sd = ensureShadyDataForNode(node);\n  if (!sd.observer) {\n    sd.observer = new AsyncObserver();\n  }\n  sd.observer.callbacks.add(callback);\n  let observer = sd.observer;\n  return {\n    _callback: callback,\n    _observer: observer,\n    _node: node,\n    takeRecords() {\n      return observer.takeRecords()\n    }\n  };\n}\n\nexport let unobserveChildren = function(handle) {\n  let observer = handle && handle._observer;\n  if (observer) {\n    observer.callbacks.delete(handle._callback);\n    if (!observer.callbacks.size) {\n      ensureShadyDataForNode(handle._node).observer = null;\n    }\n  }\n}\n\nexport function filterMutations(mutations, target) {\n  /** @const {Node} */\n  const targetRootNode = target.getRootNode();\n  return mutations.map(function(mutation) {\n    /** @const {boolean} */\n    const mutationInScope = (targetRootNode === mutation.target.getRootNode());\n    if (mutationInScope && mutation.addedNodes) {\n      let nodes = Array.from(mutation.addedNodes).filter(function(n) {\n        return (targetRootNode === n.getRootNode());\n      });\n      if (nodes.length) {\n        mutation = Object.create(mutation);\n        Object.defineProperty(mutation, 'addedNodes', {\n          value: nodes,\n          configurable: true\n        });\n        return mutation;\n      }\n    } else if (mutationInScope) {\n      return mutation;\n    }\n  }).filter(function(m) { return m});\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n// Cribbed from ShadowDOM polyfill\n// https://github.com/webcomponents/webcomponentsjs/blob/master/src/ShadowDOM/wrappers/HTMLElement.js#L28\n/////////////////////////////////////////////////////////////////////////////\n// innerHTML and outerHTML\n\n// http://www.whatwg.org/specs/web-apps/current-work/multipage/the-end.html#escapingString\nlet escapeAttrRegExp = /[&\\u00A0\"]/g;\nlet escapeDataRegExp = /[&\\u00A0<>]/g;\n\nfunction escapeReplace(c) {\n  switch (c) {\n    case '&':\n      return '&amp;';\n    case '<':\n      return '&lt;';\n    case '>':\n      return '&gt;';\n    case '\"':\n      return '&quot;';\n    case '\\u00A0':\n      return '&nbsp;';\n  }\n}\n\nfunction escapeAttr(s) {\n  return s.replace(escapeAttrRegExp, escapeReplace);\n}\n\nfunction escapeData(s) {\n  return s.replace(escapeDataRegExp, escapeReplace);\n}\n\nfunction makeSet(arr) {\n  let set = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n// http://www.whatwg.org/specs/web-apps/current-work/#void-elements\nlet voidElements = makeSet([\n  'area',\n  'base',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]);\n\nlet plaintextParents = makeSet([\n  'style',\n  'script',\n  'xmp',\n  'iframe',\n  'noembed',\n  'noframes',\n  'plaintext',\n  'noscript'\n]);\n\n/**\n * @param {Node} node\n * @param {Node} parentNode\n * @param {Function=} callback\n */\nexport function getOuterHTML(node, parentNode, callback) {\n  switch (node.nodeType) {\n    case Node.ELEMENT_NODE: {\n      let tagName = node.localName;\n      let s = '<' + tagName;\n      let attrs = node.attributes;\n      for (let i = 0, attr; (attr = attrs[i]); i++) {\n        s += ' ' + attr.name + '=\"' + escapeAttr(attr.value) + '\"';\n      }\n      s += '>';\n      if (voidElements[tagName]) {\n        return s;\n      }\n      return s + getInnerHTML(node, callback) + '</' + tagName + '>';\n    }\n    case Node.TEXT_NODE: {\n      let data = /** @type {Text} */ (node).data;\n      if (parentNode && plaintextParents[parentNode.localName]) {\n        return data;\n      }\n      return escapeData(data);\n    }\n    case Node.COMMENT_NODE: {\n      return '<!--' + /** @type {Comment} */ (node).data + '-->';\n    }\n    default: {\n      window.console.error(node);\n      throw new Error('not implemented');\n    }\n  }\n}\n\n/**\n * @param {Node} node\n * @param {Function=} callback\n */\nexport function getInnerHTML(node, callback) {\n  if (node.localName === 'template') {\n    node =  /** @type {HTMLTemplateElement} */ (node).content;\n  }\n  let s = '';\n  let c$ = callback ? callback(node) : node.childNodes;\n  for (let i=0, l=c$.length, child; (i<l) && (child=c$[i]); i++) {\n    s += getOuterHTML(child, node, callback);\n  }\n  return s;\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport * as utils from './utils.js';\nimport {patchProperties} from './utils.js';\nimport {getInnerHTML} from './innerHTML.js';\n\nconst hasDescriptors = utils.settings.hasDescriptors;\nexport const NATIVE_PREFIX = utils.NATIVE_PREFIX;\n\n// Object on which raw native methods are stored.\n// e.g. `nativeMethods.querySelector.call(node, selector)`\n// same as `node.querySelector(selector)`\nexport const nativeMethods = {\n  /** @this {Element} */\n  querySelector(selector) {\n    return this[NATIVE_PREFIX + 'querySelector'](selector);\n  },\n  /** @this {Element} */\n  querySelectorAll(selector) {\n    return this[NATIVE_PREFIX + 'querySelectorAll'](selector);\n  }\n};\n// Object on which raw native accessors are available via `accessorName(node)`.\n// e.g. `nativeTree.firstChild(node)`\n// same as `node.firstChild`\nexport const nativeTree = {};\n\nconst installNativeAccessor = (name) => {\n  nativeTree[name] = (node) => node[NATIVE_PREFIX + name];\n}\n\nconst installNativeMethod = (name, fn) => {\n  if (!nativeMethods[name]) {\n    nativeMethods[name] = fn;\n  }\n}\n\n\nconst defineNativeAccessors = (proto, descriptors) => {\n  patchProperties(proto, descriptors, NATIVE_PREFIX);\n  // make native accessors available to users\n  for (let prop in descriptors) {\n    installNativeAccessor(prop);\n  }\n}\n\nconst copyProperties = (proto, list = []) => {\n  for (let i = 0; i < list.length; i++) {\n    const name = list[i];\n    const descriptor = Object.getOwnPropertyDescriptor(proto, name);\n    if (descriptor) {\n      Object.defineProperty(proto, NATIVE_PREFIX + name, descriptor);\n      // make native methods/accessors available to users\n      if (descriptor.value) {\n        installNativeMethod(name, descriptor.value);\n      } else {\n        installNativeAccessor(name);\n      }\n    }\n  }\n}\n\n/** @type {!TreeWalker} */\nconst nodeWalker = document.createTreeWalker(document, NodeFilter.SHOW_ALL,\n  null, false);\n\n/** @type {!TreeWalker} */\nconst elementWalker = document.createTreeWalker(document, NodeFilter.SHOW_ELEMENT,\n  null, false);\n\n/** @type {!Document} */\nconst inertDoc = document.implementation.createHTMLDocument('inert');\n\nconst clearNode = node => {\n  let firstChild;\n  while ((firstChild = node[NATIVE_PREFIX + 'firstChild'])) {\n    node[NATIVE_PREFIX + 'removeChild'](firstChild);\n  }\n}\n\nconst ParentNodeAccessors = [\n  'firstElementChild',\n  'lastElementChild',\n  'children',\n  'childElementCount',\n];\n\nconst ParentNodeMethods = [\n  'querySelector',\n  'querySelectorAll'\n  // 'append', 'prepend'\n];\n\nexport const addNativePrefixedProperties = () => {\n\n  // EventTarget\n  const eventProps = [\n    'dispatchEvent',\n    'addEventListener',\n    'removeEventListener'\n  ];\n  if (window.EventTarget) {\n    copyProperties(window.EventTarget.prototype, eventProps);\n  } else {\n    copyProperties(Node.prototype, eventProps);\n    copyProperties(Window.prototype, eventProps);\n  }\n\n\n  // Node\n  if (hasDescriptors) {\n    copyProperties(Node.prototype, [\n      'parentNode',\n      'firstChild',\n      'lastChild',\n      'previousSibling',\n      'nextSibling',\n      'childNodes',\n      'parentElement',\n      'textContent',\n    ]);\n  } else {\n    defineNativeAccessors(Node.prototype, {\n      parentNode: {\n        /** @this {Node} */\n        get() {\n          nodeWalker.currentNode = this;\n          return nodeWalker.parentNode();\n        }\n      },\n      firstChild: {\n        /** @this {Node} */\n        get() {\n          nodeWalker.currentNode = this;\n          return nodeWalker.firstChild();\n        }\n      },\n      lastChild: {\n        /** @this {Node} */\n        get() {\n          nodeWalker.currentNode = this;\n          return nodeWalker.lastChild();\n        }\n\n      },\n      previousSibling: {\n        /** @this {Node} */\n        get() {\n          nodeWalker.currentNode = this;\n          return nodeWalker.previousSibling();\n        }\n      },\n      nextSibling: {\n        /** @this {Node} */\n        get() {\n          nodeWalker.currentNode = this;\n          return nodeWalker.nextSibling();\n        }\n      },\n      // TODO(sorvell): make this a NodeList or whatever\n      childNodes: {\n        /** @this {Node} */\n        get() {\n          const nodes = [];\n          nodeWalker.currentNode = this;\n          let n = nodeWalker.firstChild();\n          while (n) {\n            nodes.push(n);\n            n = nodeWalker.nextSibling();\n          }\n          return nodes;\n        }\n      },\n      parentElement: {\n        /** @this {Node} */\n        get() {\n          elementWalker.currentNode = this;\n          return elementWalker.parentNode();\n        }\n      },\n      textContent: {\n        /** @this {Node} */\n        get() {\n          /* eslint-disable no-case-declarations */\n          switch (this.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n              // TODO(sorvell): This cannot be a single TreeWalker that's reused\n              // at least for Safari 9, but it's unclear why.\n              const textWalker = document.createTreeWalker(this, NodeFilter.SHOW_TEXT,\n                null, false);\n              let content = '', n;\n              while ( (n = textWalker.nextNode()) ) {\n                // TODO(sorvell): can't use textContent since we patch it on Node.prototype!\n                // However, should probably patch it only on element.\n                content += n.nodeValue;\n              }\n              return content;\n            default:\n              return this.nodeValue;\n          }\n        },\n        // Needed on browsers that do not proper accessors (e.g. old versions of Chrome)\n        /** @this {Node} */\n        set(value) {\n          if (typeof value === 'undefined' || value === null) {\n            value = ''\n          }\n          switch (this.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n              clearNode(this);\n              // Document fragments must have no childnodes if setting a blank string\n              if (value.length > 0 || this.nodeType === Node.ELEMENT_NODE) {\n                // Note: old Chrome versions require 2nd argument here\n                this[NATIVE_PREFIX + 'insertBefore'](document.createTextNode(value), undefined);\n              }\n              break;\n            default:\n              // TODO(sorvell): can't do this if patch nodeValue.\n              this.nodeValue = value;\n              break;\n          }\n        }\n      }\n    });\n  }\n\n  copyProperties(Node.prototype, [\n    'appendChild',\n    'insertBefore',\n    'removeChild',\n    'replaceChild',\n    'cloneNode',\n    'contains'\n  ]);\n\n  // NOTE, on some browsers IE 11 / Edge 15 some properties are incorrectly on HTMLElement\n  copyProperties(HTMLElement.prototype, [\n    'parentElement',\n    'contains'\n  ]);\n\n  const ParentNodeWalkerDescriptors = {\n    firstElementChild: {\n      /** @this {ParentNode} */\n      get() {\n        elementWalker.currentNode = this;\n        return elementWalker.firstChild();\n      }\n    },\n    lastElementChild: {\n      /** @this {ParentNode} */\n      get() {\n        elementWalker.currentNode = this;\n        return elementWalker.lastChild();\n      }\n    },\n    children: {\n      /** @this {ParentNode} */\n      get() {\n        let nodes = [];\n        elementWalker.currentNode = this;\n        let n = elementWalker.firstChild();\n        while (n) {\n          nodes.push(n);\n          n = elementWalker.nextSibling();\n        }\n        return utils.createPolyfilledHTMLCollection(nodes);\n      }\n    },\n    childElementCount: {\n      /** @this {ParentNode} */\n      get() {\n        if (this.children) {\n          return this.children.length;\n        }\n        return 0;\n      }\n    }\n  };\n\n  // Element\n  if (hasDescriptors) {\n    copyProperties(Element.prototype, ParentNodeAccessors);\n\n    copyProperties(Element.prototype, [\n      'previousElementSibling',\n      'nextElementSibling',\n      'innerHTML',\n      'className'\n    ]);\n\n    // NOTE, on some browsers IE 11 / Edge 15 some properties are incorrectly on HTMLElement\n    copyProperties(HTMLElement.prototype, [\n      'children',\n      'innerHTML',\n      'className'\n    ]);\n  } else {\n    defineNativeAccessors(Element.prototype, ParentNodeWalkerDescriptors);\n    defineNativeAccessors(Element.prototype, {\n      previousElementSibling: {\n        /** @this {Element} */\n        get() {\n          elementWalker.currentNode = this;\n          return elementWalker.previousSibling();\n        }\n      },\n      nextElementSibling: {\n        /** @this {Element} */\n        get() {\n          elementWalker.currentNode = this;\n          return elementWalker.nextSibling();\n        }\n      },\n      innerHTML: {\n        /** @this {Element} */\n        get() {\n          return getInnerHTML(this, utils.nativeChildNodesArray);\n        },\n        // Needed on browsers that do not proper accessors (e.g. old versions of Chrome)\n        /** @this {Element} */\n        set(value) {\n          const content = this.localName === 'template' ?\n          /** @type {HTMLTemplateElement} */(this).content : this;\n          clearNode(content);\n          const containerName = this.localName || 'div';\n          let htmlContainer;\n          if (!this.namespaceURI || this.namespaceURI === inertDoc.namespaceURI) {\n            htmlContainer = inertDoc.createElement(containerName);\n          } else {\n            htmlContainer = inertDoc.createElementNS(this.namespaceURI, containerName);\n          }\n          htmlContainer.innerHTML = value;\n          const newContent = this.localName === 'template' ?\n            /** @type {HTMLTemplateElement} */(htmlContainer).content : htmlContainer;\n          let firstChild;\n          while ((firstChild = newContent[NATIVE_PREFIX + 'firstChild'])) {\n            // Note: old Chrome versions require 2nd argument here\n            content[NATIVE_PREFIX + 'insertBefore'](firstChild, undefined);\n          }\n        }\n      },\n      className: {\n        /** @this {Element} */\n        get() {\n          return this.getAttribute('class') || '';\n        },\n        /** @this {Element} */\n        set(value) {\n          this.setAttribute('class', value);\n        }\n      }\n    });\n  }\n\n  copyProperties(Element.prototype, [\n    'setAttribute',\n    'getAttribute',\n    'hasAttribute',\n    'removeAttribute',\n    // on older Safari, these are on Element.\n    'focus',\n    'blur',\n  ]);\n  copyProperties(Element.prototype, ParentNodeMethods);\n\n  // HTMLElement\n  copyProperties(HTMLElement.prototype, [\n    'focus',\n    'blur'\n  ]);\n\n  // HTMLTemplateElement\n  if (window.HTMLTemplateElement) {\n    copyProperties(window.HTMLTemplateElement.prototype, ['innerHTML']);\n  }\n\n  // DocumentFragment\n  if (hasDescriptors) {\n    // NOTE, IE 11 does not have on DocumentFragment\n    // firstElementChild\n    // lastElementChild\n    copyProperties(DocumentFragment.prototype, ParentNodeAccessors);\n  } else {\n    defineNativeAccessors(DocumentFragment.prototype, ParentNodeWalkerDescriptors);\n  }\n\n  copyProperties(DocumentFragment.prototype, ParentNodeMethods);\n\n  // Document\n  if (hasDescriptors) {\n    copyProperties(Document.prototype, ParentNodeAccessors);\n    copyProperties(Document.prototype, [\n      'activeElement'\n    ]);\n  } else {\n    defineNativeAccessors(Document.prototype, ParentNodeWalkerDescriptors);\n  }\n\n  copyProperties(Document.prototype, [\n    'importNode',\n    'getElementById'\n  ]);\n  copyProperties(Document.prototype, ParentNodeMethods);\n\n};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {ensureShadyDataForNode} from './shady-data.js';\n\nexport const InsideDescriptors = utils.getOwnPropertyDescriptors({\n\n  /** @this {Node} */\n  get childNodes() {\n    return this[utils.SHADY_PREFIX + 'childNodes'];\n  },\n\n  /** @this {Node} */\n  get firstChild() {\n    return this[utils.SHADY_PREFIX + 'firstChild'];\n  },\n\n  /** @this {Node} */\n  get lastChild() {\n    return this[utils.SHADY_PREFIX + 'lastChild'];\n  },\n\n  /** @this {Node} */\n  get childElementCount() {\n    return this[utils.SHADY_PREFIX + 'childElementCount'];\n  },\n\n  /** @this {Node} */\n  get children() {\n    return this[utils.SHADY_PREFIX + 'children'];\n  },\n\n  /** @this {Node} */\n  get firstElementChild() {\n    return this[utils.SHADY_PREFIX + 'firstElementChild'];\n  },\n\n  /** @this {Node} */\n  get lastElementChild() {\n    return this[utils.SHADY_PREFIX + 'lastElementChild'];\n  },\n\n  /** @this {Node} */\n  get shadowRoot() {\n    return this[utils.SHADY_PREFIX + 'shadowRoot'];\n  },\n\n});\n\nexport const TextContentInnerHTMLDescriptors = utils.getOwnPropertyDescriptors({\n  /** @this {Node} */\n  get textContent() {\n    return this[utils.SHADY_PREFIX + 'textContent'];\n  },\n\n  /** @this {Node} */\n  set textContent(value) {\n    this[utils.SHADY_PREFIX + 'textContent'] = value;\n  },\n\n  /** @this {Node} */\n  get innerHTML() {\n    return this[utils.SHADY_PREFIX + 'innerHTML'];\n  },\n\n  /** @this {Node} */\n  set innerHTML(value) {\n    return this[utils.SHADY_PREFIX + 'innerHTML'] = value;\n  },\n});\n\nexport const OutsideDescriptors = utils.getOwnPropertyDescriptors({\n\n  /** @this {Node} */\n  get parentElement() {\n    return this[utils.SHADY_PREFIX + 'parentElement'];\n  },\n\n  /** @this {Node} */\n  get parentNode() {\n    return this[utils.SHADY_PREFIX + 'parentNode'];\n  },\n\n  /** @this {Node} */\n  get nextSibling() {\n    return this[utils.SHADY_PREFIX + 'nextSibling'];\n  },\n\n  /** @this {Node} */\n  get previousSibling() {\n    return this[utils.SHADY_PREFIX + 'previousSibling'];\n  },\n\n  /** @this {Node} */\n  get nextElementSibling() {\n    return this[utils.SHADY_PREFIX + 'nextElementSibling'];\n  },\n\n  /** @this {Node} */\n  get previousElementSibling() {\n    return this[utils.SHADY_PREFIX + 'previousElementSibling'];\n  },\n\n  /** @this {Node} */\n  get className() {\n    return this[utils.SHADY_PREFIX + 'className'];\n  },\n\n  /** @this {Node} */\n  set className(value) {\n    return this[utils.SHADY_PREFIX + 'className'] = value;\n  }\n\n});\n\nfor (let prop in InsideDescriptors) {\n  InsideDescriptors[prop].enumerable = false;\n}\n\nfor (let prop in TextContentInnerHTMLDescriptors) {\n  TextContentInnerHTMLDescriptors[prop].enumerable = false;\n}\n\nfor (let prop in OutsideDescriptors) {\n  OutsideDescriptors[prop].enumerable = false;\n}\n\nconst noInstancePatching = utils.settings.hasDescriptors || utils.settings.noPatch;\n\n// ensure an element has patched \"outside\" accessors; no-op when not needed\nexport let patchOutsideElementAccessors = noInstancePatching ?\n  function() {} : function(element) {\n    const sd = ensureShadyDataForNode(element);\n    if (!sd.__outsideAccessors) {\n      sd.__outsideAccessors = true;\n      utils.patchProperties(element, OutsideDescriptors);\n    }\n  }\n\n// ensure an element has patched \"inside\" accessors; no-op when not needed\nexport let patchInsideElementAccessors = noInstancePatching ?\n  function() {} : function(element) {\n    const sd = ensureShadyDataForNode(element);\n    if (!sd.__insideAccessors) {\n      sd.__insideAccessors = true;\n      utils.patchProperties(element, InsideDescriptors);\n      // NOTE: There are compatibility issues with patches for `textContent`\n      // and `innerHTML` between CE and SD. Since SD patches are applied\n      // via `ShadyDOM.patch` and CE patches are applied as the tree is walked,\n      // SD patches overwrite CE patches.\n      // * When SD is in patching mode, SD calls through to native\n      // methods not patched by CE (since SD is at the bottom) and CE does not\n      // upgrade, connect, or disconnect elements. Therefore do *not patch*\n      // these accessors in this case.\n      // * When SD is in `noPatch` mode, the SD patches call through to\n      // \"native\" methods that are patched by CE (since CE is at the bottom).\n      // Therefore continue to patch in this case.\n      // If customElements is not loaded, then these accessors should be\n      // patched so they work correctly.\n      if (!window['customElements'] || utils.settings.noPatch) {\n        utils.patchProperties(element, TextContentInnerHTMLDescriptors);\n      }\n    }\n  }","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {shadyDataForNode} from './shady-data.js';\n\n/*\nMake this name unique so it is unlikely to conflict with properties on objects passed to `addEventListener`\nhttps://github.com/webcomponents/shadydom/issues/173\n*/\nconst /** string */ eventWrappersName = `__eventWrappers${Date.now()}`;\n\n/** @type {?function(!Event): boolean} */\nconst composedGetter = (() => {\n  const composedProp = Object.getOwnPropertyDescriptor(Event.prototype, 'composed');\n  return composedProp ? (ev) => composedProp.get.call(ev) : null;\n})();\n\nconst supportsEventOptions = (() => {\n  let supported = false;\n  let eventOptions = {\n    get capture() {\n      supported = true;\n    }\n  }\n  const listener = () => {}\n  // NOTE: These will be unpatched at this point.\n  window.addEventListener('test', listener, eventOptions);\n  window.removeEventListener('test', listener, eventOptions);\n  return supported;\n})();\n\nconst parseEventOptions = (optionsOrCapture) => {\n  let capture, once, passive, shadyTarget;\n  if (optionsOrCapture && typeof optionsOrCapture === 'object') {\n    capture = Boolean(optionsOrCapture.capture);\n    once = Boolean(optionsOrCapture.once);\n    passive = Boolean(optionsOrCapture.passive);\n    shadyTarget = optionsOrCapture.__shadyTarget;\n  } else {\n    capture = Boolean(optionsOrCapture);\n    once = false;\n    passive = false;\n  }\n  return {\n    shadyTarget,\n    capture,\n    once,\n    passive,\n    nativeEventOptions: supportsEventOptions ? optionsOrCapture : capture\n  }\n}\n\n// https://github.com/w3c/webcomponents/issues/513#issuecomment-224183937\nconst alwaysComposed = {\n  'blur': true,\n  'focus': true,\n  'focusin': true,\n  'focusout': true,\n  'click': true,\n  'dblclick': true,\n  'mousedown': true,\n  'mouseenter': true,\n  'mouseleave': true,\n  'mousemove': true,\n  'mouseout': true,\n  'mouseover': true,\n  'mouseup': true,\n  'wheel': true,\n  'beforeinput': true,\n  'input': true,\n  'keydown': true,\n  'keyup': true,\n  'compositionstart': true,\n  'compositionupdate': true,\n  'compositionend': true,\n  'touchstart': true,\n  'touchend': true,\n  'touchmove': true,\n  'touchcancel': true,\n  'pointerover': true,\n  'pointerenter': true,\n  'pointerdown': true,\n  'pointermove': true,\n  'pointerup': true,\n  'pointercancel': true,\n  'pointerout': true,\n  'pointerleave': true,\n  'gotpointercapture': true,\n  'lostpointercapture': true,\n  'dragstart': true,\n  'drag': true,\n  'dragenter': true,\n  'dragleave': true,\n  'dragover': true,\n  'drop': true,\n  'dragend': true,\n  'DOMActivate': true,\n  'DOMFocusIn': true,\n  'DOMFocusOut': true,\n  'keypress': true\n};\n\nconst unpatchedEvents = {\n  'DOMAttrModified': true,\n  'DOMAttributeNameChanged': true,\n  'DOMCharacterDataModified': true,\n  'DOMElementNameChanged': true,\n  'DOMNodeInserted': true,\n  'DOMNodeInsertedIntoDocument': true,\n  'DOMNodeRemoved': true,\n  'DOMNodeRemovedFromDocument': true,\n  'DOMSubtreeModified': true\n}\n\n/**\n * Some EventTarget subclasses are not Node subclasses, and you cannot call\n * `getRootNode()` on them.\n *\n * @param {!(Node|EventTarget)} eventTarget\n * @return {!(Node|EventTarget)}\n */\nfunction getRootNodeWithFallback(eventTarget) {\n  if (eventTarget instanceof Node) {\n    return eventTarget[utils.SHADY_PREFIX + 'getRootNode']();\n  } else {\n    return eventTarget;\n  }\n}\n\nfunction pathComposer(startNode, composed) {\n  let composedPath = [];\n  let current = startNode;\n  let startRoot = getRootNodeWithFallback(startNode);\n  while (current) {\n    composedPath.push(current);\n    if (current[utils.SHADY_PREFIX + 'assignedSlot']) {\n      current = current[utils.SHADY_PREFIX + 'assignedSlot'];\n    } else if (current.nodeType === Node.DOCUMENT_FRAGMENT_NODE && current.host && (composed || current !== startRoot)) {\n      current = current.host;\n    } else {\n      current = current[utils.SHADY_PREFIX + 'parentNode'];\n    }\n  }\n  // event composedPath includes window when startNode's ownerRoot is document\n  if (composedPath[composedPath.length - 1] === document) {\n    composedPath.push(window);\n  }\n  return composedPath;\n}\n\nexport const composedPath = (event) => {\n  if (!event.__composedPath) {\n    event.__composedPath = pathComposer(event.target, true);\n  }\n  return event.__composedPath;\n}\n\nfunction retarget(refNode, path) {\n  if (!utils.isShadyRoot) {\n    return refNode;\n  }\n  // If ANCESTOR's root is not a shadow root or ANCESTOR's root is BASE's\n  // shadow-including inclusive ancestor, return ANCESTOR.\n  let refNodePath = pathComposer(refNode, true);\n  let p$ = path;\n  for (let i=0, ancestor, lastRoot, root, rootIdx; i < p$.length; i++) {\n    ancestor = p$[i];\n    root = getRootNodeWithFallback(ancestor);\n    if (root !== lastRoot) {\n      rootIdx = refNodePath.indexOf(root);\n      lastRoot = root;\n    }\n    if (!utils.isShadyRoot(root) || rootIdx > -1) {\n      return ancestor;\n    }\n  }\n}\n\nlet EventPatches = {\n\n  /**\n   * @this {Event}\n   */\n  get composed() {\n    if (this.__composed === undefined) {\n      // if there's an original `composed` getter on the Event prototype, use that\n      if (composedGetter) {\n        // TODO(web-padawan): see https://github.com/webcomponents/shadydom/issues/275\n        this.__composed = this.type === 'focusin' || this.type === 'focusout' || composedGetter(this);\n      // If the event is trusted, or `isTrusted` is not supported, check the list of always composed events\n      } else if (this.isTrusted !== false) {\n        this.__composed = alwaysComposed[this.type];\n      }\n    }\n    return /** @type {!Event} */(this).__composed || false;\n  },\n\n  /**\n   * @this {Event}\n   */\n  composedPath() {\n    if (!this.__composedPath) {\n      this.__composedPath = pathComposer(this['__target'], this.composed);\n    }\n    return /** @type {!Event} */(this).__composedPath;\n  },\n\n  /**\n   * @this {Event}\n   */\n  get target() {\n    return retarget(this.currentTarget || this['__previousCurrentTarget'], this.composedPath());\n  },\n\n  // http://w3c.github.io/webcomponents/spec/shadow/#event-relatedtarget-retargeting\n  /**\n   * @this {Event}\n   */\n  get relatedTarget() {\n    if (!this.__relatedTarget) {\n      return null;\n    }\n    if (!this.__relatedTargetComposedPath) {\n      this.__relatedTargetComposedPath = pathComposer(this.__relatedTarget, true);\n    }\n    // find the deepest node in relatedTarget composed path that is in the same root with the currentTarget\n    return retarget(this.currentTarget || this['__previousCurrentTarget'], /** @type {!Event} */(this).__relatedTargetComposedPath);\n  },\n  /**\n   * @this {Event}\n   */\n  stopPropagation() {\n    Event.prototype.stopPropagation.call(this);\n    this.__propagationStopped = true;\n  },\n  /**\n   * @this {Event}\n   */\n  stopImmediatePropagation() {\n    Event.prototype.stopImmediatePropagation.call(this);\n    this.__immediatePropagationStopped = true;\n    this.__propagationStopped = true;\n  }\n\n};\n\nfunction mixinComposedFlag(Base) {\n  // NOTE: avoiding use of `class` here so that transpiled output does not\n  // try to do `Base.call` with a dom construtor.\n  let klazz = function(type, options) {\n    let event = new Base(type, options);\n    event.__composed = options && Boolean(options['composed']);\n    return event;\n  }\n  // put constructor properties on subclass\n  klazz.__proto__ = Base;\n  klazz.prototype = Base.prototype;\n  return klazz;\n}\n\nlet nonBubblingEventsToRetarget = {\n  'focus': true,\n  'blur': true\n};\n\n\n/**\n * Check if the event has been retargeted by comparing original `target`, and calculated `target`\n * @param {Event} event\n * @return {boolean} True if the original target and calculated target are the same\n */\nfunction hasRetargeted(event) {\n  return event['__target'] !== event.target || event.__relatedTarget !== event.relatedTarget;\n}\n\n/**\n *\n * @param {Event} event\n * @param {Node} node\n * @param {string} phase\n */\nfunction fireHandlers(event, node, phase) {\n  let hs = node.__handlers && node.__handlers[event.type] &&\n    node.__handlers[event.type][phase];\n  if (hs) {\n    for (let i = 0, fn; (fn = hs[i]); i++) {\n      if (hasRetargeted(event) && event.target === event.relatedTarget) {\n        return;\n      }\n      fn.call(node, event);\n      if (event.__immediatePropagationStopped) {\n        return;\n      }\n    }\n  }\n}\n\nfunction retargetNonBubblingEvent(e) {\n  let path = e.composedPath();\n  let node;\n  // override `currentTarget` to let patched `target` calculate correctly\n  Object.defineProperty(e, 'currentTarget', {\n    get: function() {\n      return node;\n    },\n    configurable: true\n  });\n  for (let i = path.length - 1; i >= 0; i--) {\n    node = path[i];\n    // capture phase fires all capture handlers\n    fireHandlers(e, node, 'capture');\n    if (e.__propagationStopped) {\n      return;\n    }\n  }\n\n  // set the event phase to `AT_TARGET` as in spec\n  Object.defineProperty(e, 'eventPhase', {get() { return Event.AT_TARGET }});\n\n  // the event only needs to be fired when owner roots change when iterating the event path\n  // keep track of the last seen owner root\n  let lastFiredRoot;\n  for (let i = 0; i < path.length; i++) {\n    node = path[i];\n    const nodeData = shadyDataForNode(node);\n    const root = nodeData && nodeData.root;\n    if (i === 0 || (root && root === lastFiredRoot)) {\n      fireHandlers(e, node, 'bubble');\n      // don't bother with window, it doesn't have `getRootNode` and will be last in the path anyway\n      if (node !== window) {\n        lastFiredRoot = node[utils.SHADY_PREFIX + 'getRootNode']();\n      }\n      if (e.__propagationStopped) {\n        return;\n      }\n    }\n  }\n}\n\nfunction listenerSettingsEqual(savedListener, node, type, capture, once, passive) {\n  let {\n    node: savedNode,\n    type: savedType,\n    capture: savedCapture,\n    once: savedOnce,\n    passive: savedPassive\n  } = savedListener;\n  return node === savedNode &&\n    type === savedType &&\n    capture === savedCapture &&\n    once === savedOnce &&\n    passive === savedPassive;\n}\n\nexport function findListener(wrappers, node, type, capture, once, passive) {\n  for (let i = 0; i < wrappers.length; i++) {\n    if (listenerSettingsEqual(wrappers[i], node, type, capture, once, passive)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Firefox can throw on accessing eventWrappers inside of `removeEventListener` during a selenium run\n * Try/Catch accessing eventWrappers to work around\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1353074\n */\nfunction getEventWrappers(eventLike) {\n  let wrappers = null;\n  try {\n    wrappers = eventLike[eventWrappersName];\n  } catch (e) {} // eslint-disable-line no-empty\n  return wrappers;\n}\n\nfunction targetNeedsPathCheck(node) {\n  return utils.isShadyRoot(node) || node.localName === 'slot';\n}\n\n/**\n * @this {EventTarget}\n */\nexport function addEventListener(type, fnOrObj, optionsOrCapture) {\n  const {capture, once, passive, shadyTarget, nativeEventOptions} =\n    parseEventOptions(optionsOrCapture);\n  if (!fnOrObj) {\n    return;\n  }\n\n  const handlerType = typeof fnOrObj;\n\n  // bail if `fnOrObj` is not a function, not an object\n  if (handlerType !== 'function' && handlerType !== 'object') {\n    return;\n  }\n\n  // bail if `fnOrObj` is an object without a `handleEvent` method\n  if (handlerType === 'object' && (!fnOrObj.handleEvent || typeof fnOrObj.handleEvent !== 'function')) {\n    return;\n  }\n\n  if (unpatchedEvents[type]) {\n    return this[utils.NATIVE_PREFIX + 'addEventListener'](type, fnOrObj, nativeEventOptions);\n  }\n\n  // hack to let ShadyRoots have event listeners\n  // event listener will be on host, but `currentTarget`\n  // will be set to shadyroot for event listener\n  let target = shadyTarget || this;\n\n  let wrappers = fnOrObj[eventWrappersName];\n  if (wrappers) {\n    // The callback `fn` might be used for multiple nodes/events. Since we generate\n    // a wrapper function, we need to keep track of it when we remove the listener.\n    // It's more efficient to store the node/type/options information as Array in\n    // `fn` itself rather than the node (we assume that the same callback is used\n    // for few nodes at most, whereas a node will likely have many event listeners).\n    // NOTE(valdrin) invoking external functions is costly, inline has better perf.\n    // Stop if the wrapper function has already been created.\n    if (findListener(wrappers, target, type, capture, once, passive) > -1) {\n      return;\n    }\n  } else {\n    fnOrObj[eventWrappersName] = [];\n  }\n\n  /**\n   * @this {HTMLElement}\n   * @param {Event} e\n   */\n  const wrapperFn = function(e) {\n    // Support `once` option.\n    if (once) {\n      this[utils.SHADY_PREFIX + 'removeEventListener'](type, fnOrObj, optionsOrCapture);\n    }\n    if (!e['__target']) {\n      patchEvent(e);\n    }\n    let lastCurrentTargetDesc;\n    if (target !== this) {\n      // replace `currentTarget` to make `target` and `relatedTarget` correct for inside the shadowroot\n      lastCurrentTargetDesc = Object.getOwnPropertyDescriptor(e, 'currentTarget');\n      Object.defineProperty(e, 'currentTarget', {get() { return target }, configurable: true});\n    }\n    e['__previousCurrentTarget'] = e['currentTarget'];\n    // Always check if a shadowRoot or slot is in the current event path.\n    // If it is not, the event was generated on either the host of the shadowRoot\n    // or a children of the host.\n    if (targetNeedsPathCheck(target) && e.composedPath().indexOf(target) == -1) {\n      return;\n    }\n    // There are two critera that should stop events from firing on this node\n    // 1. the event is not composed and the current node is not in the same root as the target\n    // 2. when bubbling, if after retargeting, relatedTarget and target point to the same node\n    if (e.composed || e.composedPath().indexOf(target) > -1) {\n      if (hasRetargeted(e) && e.target === e.relatedTarget) {\n        if (e.eventPhase === Event.BUBBLING_PHASE) {\n          e.stopImmediatePropagation();\n        }\n        return;\n      }\n      // prevent non-bubbling events from triggering bubbling handlers on shadowroot, but only if not in capture phase\n      if (e.eventPhase !== Event.CAPTURING_PHASE && !e.bubbles && e.target !== target && !(target instanceof Window)) {\n        return;\n      }\n      let ret = handlerType === 'function' ?\n        fnOrObj.call(target, e) :\n        (fnOrObj.handleEvent && fnOrObj.handleEvent(e));\n      if (target !== this) {\n        // replace the \"correct\" `currentTarget`\n        if (lastCurrentTargetDesc) {\n          Object.defineProperty(e, 'currentTarget', lastCurrentTargetDesc);\n          lastCurrentTargetDesc = null;\n        } else {\n          delete e['currentTarget'];\n        }\n      }\n      return ret;\n    }\n  };\n\n  // Store the wrapper information.\n  fnOrObj[eventWrappersName].push({\n    // note: use target here which is either a shadowRoot\n    // (when the host element is proxy'ing the event) or this element\n    node: target,\n    type: type,\n    capture: capture,\n    once: once,\n    passive: passive,\n    wrapperFn: wrapperFn\n  });\n\n  if (nonBubblingEventsToRetarget[type]) {\n    this.__handlers = this.__handlers || {};\n    this.__handlers[type] = this.__handlers[type] ||\n      {'capture': [], 'bubble': []};\n    this.__handlers[type][capture ? 'capture' : 'bubble'].push(wrapperFn);\n  } else {\n    this[utils.NATIVE_PREFIX + 'addEventListener'](type, wrapperFn, nativeEventOptions);\n  }\n}\n\n/**\n * @this {EventTarget}\n */\nexport function removeEventListener(type, fnOrObj, optionsOrCapture) {\n  if (!fnOrObj) {\n    return;\n  }\n  const {capture, once, passive, shadyTarget, nativeEventOptions} =\n    parseEventOptions(optionsOrCapture);\n  if (unpatchedEvents[type]) {\n    return this[utils.NATIVE_PREFIX + 'removeEventListener'](type, fnOrObj, nativeEventOptions);\n  }\n  let target = shadyTarget || this;\n  // Search the wrapped function.\n  let wrapperFn = undefined;\n  let wrappers = getEventWrappers(fnOrObj);\n  if (wrappers) {\n    let idx = findListener(wrappers, target, type, capture, once, passive);\n    if (idx > -1) {\n      wrapperFn = wrappers.splice(idx, 1)[0].wrapperFn;\n      // Cleanup.\n      if (!wrappers.length) {\n        fnOrObj[eventWrappersName] = undefined;\n      }\n    }\n  }\n  this[utils.NATIVE_PREFIX + 'removeEventListener'](type, wrapperFn || fnOrObj,\n    nativeEventOptions);\n  if (wrapperFn && nonBubblingEventsToRetarget[type] &&\n      this.__handlers && this.__handlers[type]) {\n    const arr = this.__handlers[type][capture ? 'capture' : 'bubble'];\n    const idx = arr.indexOf(wrapperFn);\n    if (idx > -1) {\n      arr.splice(idx, 1);\n    }\n  }\n}\n\nfunction activateFocusEventOverrides() {\n  for (let ev in nonBubblingEventsToRetarget) {\n    window[utils.NATIVE_PREFIX + 'addEventListener'](ev, function(e) {\n      if (!e['__target']) {\n        patchEvent(e);\n        retargetNonBubblingEvent(e);\n      }\n    }, true);\n  }\n}\n\nconst EventPatchesDescriptors = utils.getOwnPropertyDescriptors(EventPatches);\n\nconst SHADY_PROTO = '__shady_patchedProto';\nconst SHADY_SOURCE_PROTO = '__shady_sourceProto';\n\nfunction patchEvent(event) {\n  event['__target'] = event.target;\n  event.__relatedTarget = event.relatedTarget;\n  // attempt to patch prototype (via cache)\n  if (utils.settings.hasDescriptors) {\n    const proto = Object.getPrototypeOf(event);\n    if (!Object.hasOwnProperty(proto, SHADY_PROTO)) {\n      const patchedProto = Object.create(proto);\n      patchedProto[SHADY_SOURCE_PROTO] = proto;\n      utils.patchProperties(patchedProto, EventPatchesDescriptors);\n      proto[SHADY_PROTO] = patchedProto;\n    }\n    event.__proto__ = proto[SHADY_PROTO];\n  // and fallback to patching instance\n  } else {\n    utils.patchProperties(event, EventPatchesDescriptors);\n  }\n}\n\nlet PatchedEvent = mixinComposedFlag(Event);\nlet PatchedCustomEvent = mixinComposedFlag(CustomEvent);\nlet PatchedMouseEvent = mixinComposedFlag(MouseEvent);\n\n\nexport function patchEvents() {\n  activateFocusEventOverrides();\n  window.Event = PatchedEvent;\n  window.CustomEvent = PatchedCustomEvent;\n  window.MouseEvent = PatchedMouseEvent;\n}\n\nexport function patchClick() {\n  // Fix up `Element.prototype.click()` if `isTrusted` is supported, but `composed` isn't\n  if (!composedGetter && Object.getOwnPropertyDescriptor(Event.prototype, 'isTrusted')) {\n    /** @this {Element} */\n    const composedClickFn = function() {\n      const ev = new MouseEvent('click', {\n        bubbles: true,\n        cancelable: true,\n        composed: true\n      });\n      this[utils.SHADY_PREFIX + 'dispatchEvent'](ev);\n    };\n    if (Element.prototype.click) {\n      Element.prototype.click = composedClickFn;\n    } else if (HTMLElement.prototype.click) {\n      HTMLElement.prototype.click = composedClickFn;\n    }\n  }\n}\n\nexport const eventPropertyNames = Object.getOwnPropertyNames(Document.prototype)\n    .filter(name => name.substring(0,2) === 'on');\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nfunction newSplice(index, removed, addedCount) {\n  return {\n    index: index,\n    removed: removed,\n    addedCount: addedCount\n  };\n}\n\nconst EDIT_LEAVE = 0;\nconst EDIT_UPDATE = 1;\nconst EDIT_ADD = 2;\nconst EDIT_DELETE = 3;\n\n// Note: This function is *based* on the computation of the Levenshtein\n// \"edit\" distance. The one change is that \"updates\" are treated as two\n// edits - not one. With Array splices, an update is really a delete\n// followed by an add. By retaining this, we optimize for \"keeping\" the\n// maximum array items in the original array. For example:\n//\n//   'xxxx123' -> '123yyyy'\n//\n// With 1-edit updates, the shortest path would be just to update all seven\n// characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n// leaves the substring '123' intact.\nfunction calcEditDistances(current, currentStart, currentEnd,\n                            old, oldStart, oldEnd) {\n  // \"Deletion\" columns\n  let rowCount = oldEnd - oldStart + 1;\n  let columnCount = currentEnd - currentStart + 1;\n  let distances = new Array(rowCount);\n\n  // \"Addition\" rows. Initialize null column.\n  for (let i = 0; i < rowCount; i++) {\n    distances[i] = new Array(columnCount);\n    distances[i][0] = i;\n  }\n\n  // Initialize null row\n  for (let j = 0; j < columnCount; j++)\n    distances[0][j] = j;\n\n  for (let i = 1; i < rowCount; i++) {\n    for (let j = 1; j < columnCount; j++) {\n      if (equals(current[currentStart + j - 1], old[oldStart + i - 1]))\n        distances[i][j] = distances[i - 1][j - 1];\n      else {\n        let north = distances[i - 1][j] + 1;\n        let west = distances[i][j - 1] + 1;\n        distances[i][j] = north < west ? north : west;\n      }\n    }\n  }\n\n  return distances;\n}\n\n// This starts at the final weight, and walks \"backward\" by finding\n// the minimum previous weight recursively until the origin of the weight\n// matrix.\nfunction spliceOperationsFromEditDistances(distances) {\n  let i = distances.length - 1;\n  let j = distances[0].length - 1;\n  let current = distances[i][j];\n  let edits = [];\n  while (i > 0 || j > 0) {\n    if (i == 0) {\n      edits.push(EDIT_ADD);\n      j--;\n      continue;\n    }\n    if (j == 0) {\n      edits.push(EDIT_DELETE);\n      i--;\n      continue;\n    }\n    let northWest = distances[i - 1][j - 1];\n    let west = distances[i - 1][j];\n    let north = distances[i][j - 1];\n\n    let min;\n    if (west < north)\n      min = west < northWest ? west : northWest;\n    else\n      min = north < northWest ? north : northWest;\n\n    if (min == northWest) {\n      if (northWest == current) {\n        edits.push(EDIT_LEAVE);\n      } else {\n        edits.push(EDIT_UPDATE);\n        current = northWest;\n      }\n      i--;\n      j--;\n    } else if (min == west) {\n      edits.push(EDIT_DELETE);\n      i--;\n      current = west;\n    } else {\n      edits.push(EDIT_ADD);\n      j--;\n      current = north;\n    }\n  }\n\n  edits.reverse();\n  return edits;\n}\n\n/**\n * Splice Projection functions:\n *\n * A splice map is a representation of how a previous array of items\n * was transformed into a new array of items. Conceptually it is a list of\n * tuples of\n *\n *   <index, removed, addedCount>\n *\n * which are kept in ascending index order of. The tuple represents that at\n * the |index|, |removed| sequence of items were removed, and counting forward\n * from |index|, |addedCount| items were added.\n */\n\n/**\n * Lacking individual splice mutation information, the minimal set of\n * splices can be synthesized given the previous state and final state of an\n * array. The basic approach is to calculate the edit distance matrix and\n * choose the shortest path through it.\n *\n * Complexity: O(l * p)\n *   l: The length of the current array\n *   p: The length of the old array\n */\nfunction calcSplices(current, currentStart, currentEnd,\n                      old, oldStart, oldEnd) {\n  let prefixCount = 0;\n  let suffixCount = 0;\n  let splice;\n\n  let minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n  if (currentStart == 0 && oldStart == 0)\n    prefixCount = sharedPrefix(current, old, minLength);\n\n  if (currentEnd == current.length && oldEnd == old.length)\n    suffixCount = sharedSuffix(current, old, minLength - prefixCount);\n\n  currentStart += prefixCount;\n  oldStart += prefixCount;\n  currentEnd -= suffixCount;\n  oldEnd -= suffixCount;\n\n  if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0)\n    return [];\n\n  if (currentStart == currentEnd) {\n    splice = newSplice(currentStart, [], 0);\n    while (oldStart < oldEnd)\n      splice.removed.push(old[oldStart++]);\n\n    return [ splice ];\n  } else if (oldStart == oldEnd)\n    return [ newSplice(currentStart, [], currentEnd - currentStart) ];\n\n  let ops = spliceOperationsFromEditDistances(\n      calcEditDistances(current, currentStart, currentEnd,\n                             old, oldStart, oldEnd));\n\n  splice = undefined;\n  let splices = [];\n  let index = currentStart;\n  let oldIndex = oldStart;\n  for (let i = 0; i < ops.length; i++) {\n    switch(ops[i]) {\n      case EDIT_LEAVE:\n        if (splice) {\n          splices.push(splice);\n          splice = undefined;\n        }\n\n        index++;\n        oldIndex++;\n        break;\n      case EDIT_UPDATE:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.addedCount++;\n        index++;\n\n        splice.removed.push(old[oldIndex]);\n        oldIndex++;\n        break;\n      case EDIT_ADD:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.addedCount++;\n        index++;\n        break;\n      case EDIT_DELETE:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.removed.push(old[oldIndex]);\n        oldIndex++;\n        break;\n    }\n  }\n\n  if (splice) {\n    splices.push(splice);\n  }\n  return splices;\n}\n\nfunction sharedPrefix(current, old, searchLength) {\n  for (let i = 0; i < searchLength; i++)\n    if (!equals(current[i], old[i]))\n      return i;\n  return searchLength;\n}\n\nfunction sharedSuffix(current, old, searchLength) {\n  let index1 = current.length;\n  let index2 = old.length;\n  let count = 0;\n  while (count < searchLength && equals(current[--index1], old[--index2]))\n    count++;\n\n  return count;\n}\n\nfunction equals(currentValue, previousValue) {\n  return currentValue === previousValue;\n}\n\nexport function calculateSplices(current, previous) {\n  return calcSplices(current, 0, current.length, previous, 0,\n                          previous.length);\n}\n\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {shadyDataForNode, ensureShadyDataForNode} from './shady-data.js';\nimport {patchInsideElementAccessors, patchOutsideElementAccessors} from './patch-instances.js';\n\nfunction linkNode(node, container, containerData, ref_node) {\n  patchOutsideElementAccessors(node);\n  ref_node = ref_node || null;\n  const nodeData = ensureShadyDataForNode(node);\n  const ref_nodeData = ref_node ? ensureShadyDataForNode(ref_node) : null;\n  // update ref_node.previousSibling <-> node\n  nodeData.previousSibling = ref_node ? ref_nodeData.previousSibling :\n    container[utils.SHADY_PREFIX + 'lastChild'];\n  let psd = shadyDataForNode(nodeData.previousSibling);\n  if (psd) {\n    psd.nextSibling = node;\n  }\n  // update node <-> ref_node\n  let nsd = shadyDataForNode(nodeData.nextSibling = ref_node);\n  if (nsd) {\n    nsd.previousSibling = node;\n  }\n  // update node <-> container\n  nodeData.parentNode = container;\n  if (ref_node) {\n    if (ref_node === containerData.firstChild) {\n      containerData.firstChild = node;\n    }\n  } else {\n    containerData.lastChild = node;\n    if (!containerData.firstChild) {\n      containerData.firstChild = node;\n    }\n  }\n  // remove caching of childNodes\n  containerData.childNodes = null;\n}\n\nexport const recordInsertBefore = (node, container, ref_node) => {\n  patchInsideElementAccessors(container);\n  const containerData = ensureShadyDataForNode(container);\n  if (containerData.firstChild !== undefined) {\n    containerData.childNodes = null;\n  }\n  // handle document fragments\n  if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n    // Note, documentFragments should not have logical DOM so there's\n    // no need update that. It is possible to append a ShadowRoot, but we're\n    // choosing not to support that.\n    const first = node[utils.NATIVE_PREFIX + 'firstChild'];\n    for (let n = first; n; (n = n[utils.NATIVE_PREFIX + 'nextSibling'])) {\n      linkNode(n, container, containerData, ref_node);\n    }\n  } else {\n    linkNode(node, container, containerData, ref_node);\n  }\n}\n\nexport const recordRemoveChild = (node, container) => {\n  const nodeData = ensureShadyDataForNode(node);\n  const containerData = ensureShadyDataForNode(container);\n  if (node === containerData.firstChild) {\n    containerData.firstChild = nodeData.nextSibling;\n  }\n  if (node === containerData.lastChild) {\n    containerData.lastChild = nodeData.previousSibling;\n  }\n  let p = nodeData.previousSibling;\n  let n = nodeData.nextSibling;\n  if (p) {\n    ensureShadyDataForNode(p).nextSibling = n;\n  }\n  if (n) {\n    ensureShadyDataForNode(n).previousSibling = p;\n  }\n  // When an element is removed, logical data is no longer tracked.\n  // Explicitly set `undefined` here to indicate this. This is disginguished\n  // from `null` which is set if info is null.\n  nodeData.parentNode = nodeData.previousSibling =\n  nodeData.nextSibling = undefined;\n  if (containerData.childNodes !== undefined) {\n    // remove caching of childNodes\n    containerData.childNodes = null;\n  }\n}\n\n/**\n * @param  {!Node|DocumentFragment} node\n * @param  {!Node|DocumentFragment=} adoptedParent\n */\nexport const recordChildNodes = (node, adoptedParent) => {\n  const nodeData = ensureShadyDataForNode(node);\n  if (!adoptedParent && nodeData.firstChild !== undefined) {\n    return;\n  }\n  // remove caching of childNodes\n  nodeData.childNodes = null;\n  const first = nodeData.firstChild = node[utils.NATIVE_PREFIX + 'firstChild'];\n  nodeData.lastChild = node[utils.NATIVE_PREFIX + 'lastChild'];\n  patchInsideElementAccessors(node);\n  for (let n = first, previous; n; (n = n[utils.NATIVE_PREFIX + 'nextSibling'])) {\n    const sd = ensureShadyDataForNode(n);\n    sd.parentNode = adoptedParent || node;\n    sd.nextSibling = n[utils.NATIVE_PREFIX + 'nextSibling'];\n    sd.previousSibling = previous || null;\n    previous = n;\n    patchOutsideElementAccessors(n);\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\n\nlet scopingShim = null;\n\nexport function getScopingShim() {\n  if (!scopingShim) {\n    scopingShim = window['ShadyCSS'] && window['ShadyCSS']['ScopingShim'];\n  }\n  return scopingShim || null;\n}\n\n/**\n * @param {!Node} node\n * @param {string} attr\n * @param {string} value\n */\nexport function scopeClassAttribute(node, attr, value) {\n  const scopingShim = getScopingShim();\n  if (scopingShim && attr === 'class') {\n    scopingShim['setElementClass'](node, value);\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {!Node} node\n * @param {string} newScopeName\n */\nexport function addShadyScoping(node, newScopeName) {\n  const scopingShim = getScopingShim();\n  if (!scopingShim) {\n    return;\n  }\n  scopingShim['scopeNode'](node, newScopeName);\n}\n\n/**\n * @param {!Node} node\n * @param {string} currentScopeName\n */\nexport function removeShadyScoping(node, currentScopeName) {\n  const scopingShim = getScopingShim();\n  if (!scopingShim) {\n    return;\n  }\n  scopingShim['unscopeNode'](node, currentScopeName);\n}\n\n/**\n * @param {!Node} node\n * @param {string} newScopeName\n * @param {string} oldScopeName\n */\nexport function replaceShadyScoping(node, newScopeName, oldScopeName) {\n  const scopingShim = getScopingShim();\n  if (!scopingShim) {\n    return;\n  }\n  if (oldScopeName) {\n    removeShadyScoping(node, oldScopeName);\n  }\n  addShadyScoping(node, newScopeName);\n}\n\n/**\n * @param {!Node} node\n * @param {string} newScopeName\n * @return {boolean}\n */\nexport function currentScopeIsCorrect(node, newScopeName) {\n  const scopingShim = getScopingShim();\n  if (!scopingShim) {\n    return true;\n  }\n  if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n    // NOTE: as an optimization, only check that all the top-level children\n    // have the correct scope.\n    let correctScope = true;\n    for (let n=node[utils.SHADY_PREFIX + 'firstChild']; n; n = n[utils.SHADY_PREFIX + 'nextSibling']) {\n      correctScope = correctScope &&\n        currentScopeIsCorrect(n, newScopeName);\n    }\n    return correctScope;\n  }\n  if (node.nodeType !== Node.ELEMENT_NODE) {\n    return true;\n  }\n  const currentScope = scopingShim['currentScopeForNode'](node);\n  return currentScope === newScopeName;\n}\n\n/**\n * @param {!Node} node\n * @return {string}\n */\nexport function currentScopeForNode(node) {\n  if (node.nodeType !== Node.ELEMENT_NODE) {\n    return '';\n  }\n  const scopingShim = getScopingShim();\n  if (!scopingShim) {\n    return '';\n  }\n  return scopingShim['currentScopeForNode'](node);\n}\n\n/**\n * Walk over a node's tree and apply visitorFn to each element node\n *\n * @param {Node} node\n * @param {function(!Node):void} visitorFn\n */\nexport function treeVisitor(node, visitorFn) {\n  if (!node) {\n    return;\n  }\n  // this check is necessary if `node` is a Document Fragment\n  if (node.nodeType === Node.ELEMENT_NODE) {\n    visitorFn(node);\n  }\n  for (let n = node[utils.SHADY_PREFIX + 'firstChild']; n; (n = n[utils.SHADY_PREFIX + 'nextSibling'])) {\n    if (n.nodeType === Node.ELEMENT_NODE) {\n      treeVisitor(n, visitorFn);\n    }\n  }\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {getScopingShim, removeShadyScoping, replaceShadyScoping,\n  treeVisitor, currentScopeForNode, currentScopeIsCorrect } from '../style-scoping.js';\nimport {shadyDataForNode, ensureShadyDataForNode} from '../shady-data.js';\nimport {recordInsertBefore, recordRemoveChild} from '../link-nodes.js';\nimport {ownerShadyRootForNode} from '../attach-shadow.js';\n\nconst doc = window.document;\n\nconst preferPerformance = utils.settings.preferPerformance;\n\nconst nativeIsConnectedAccessors =\n/** @type {ObjectPropertyDescriptor} */(\n  Object.getOwnPropertyDescriptor(Node.prototype, 'isConnected')\n);\n\nconst nativeIsConnected = nativeIsConnectedAccessors && nativeIsConnectedAccessors.get;\n\nexport function clearNode(node) {\n  let firstChild;\n  while ((firstChild = node[utils.SHADY_PREFIX + 'firstChild'])) {\n    node[utils.SHADY_PREFIX + 'removeChild'](firstChild);\n  }\n}\n\nfunction removeOwnerShadyRoot(node) {\n  // optimization: only reset the tree if node is actually in a root\n  if (hasCachedOwnerRoot(node)) {\n    for (let n=node[utils.SHADY_PREFIX + 'firstChild']; n; n = n[utils.SHADY_PREFIX + 'nextSibling']) {\n      removeOwnerShadyRoot(n);\n    }\n  }\n  const nodeData = shadyDataForNode(node);\n  if (nodeData) {\n    nodeData.ownerShadyRoot = undefined;\n  }\n}\n\nfunction hasCachedOwnerRoot(node) {\n  const nodeData = shadyDataForNode(node);\n  return Boolean(nodeData && nodeData.ownerShadyRoot !== undefined);\n}\n\n/**\n * Finds the first flattened node that is composed in the node's parent.\n * If the given node is a slot, then the first flattened node is returned\n * if it exists, otherwise advance to the node's nextSibling.\n * @param {Node} node within which to find first composed node\n * @returns {Node} first composed node\n */\nfunction firstComposedNode(node) {\n  let composed = node;\n  if (node && node.localName === 'slot') {\n    const nodeData = shadyDataForNode(node);\n    const flattened = nodeData && nodeData.flattenedNodes;\n    composed = flattened && flattened.length ? flattened[0] :\n      firstComposedNode(node[utils.SHADY_PREFIX + 'nextSibling']);\n  }\n  return composed;\n}\n\n/**\n * @param {Node} node\n * @param {Node=} addedNode\n * @param {Node=} removedNode\n */\nfunction scheduleObserver(node, addedNode, removedNode) {\n  const nodeData = shadyDataForNode(node);\n  const observer = nodeData && nodeData.observer;\n  if (observer) {\n    if (addedNode) {\n      observer.addedNodes.push(addedNode);\n    }\n    if (removedNode) {\n      observer.removedNodes.push(removedNode);\n    }\n    observer.schedule();\n  }\n}\n\nexport const NodePatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Node} */\n  get parentNode() {\n    const nodeData = shadyDataForNode(this);\n    const l = nodeData && nodeData.parentNode;\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'parentNode'];\n  },\n\n  /** @this {Node} */\n  get firstChild() {\n    const nodeData = shadyDataForNode(this);\n    const l = nodeData && nodeData.firstChild;\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'firstChild'];\n  },\n\n  /** @this {Node} */\n  get lastChild() {\n    const nodeData = shadyDataForNode(this);\n    const l = nodeData && nodeData.lastChild;\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'lastChild'];\n  },\n\n  /** @this {Node} */\n  get nextSibling() {\n    const nodeData = shadyDataForNode(this);\n    const l = nodeData && nodeData.nextSibling;\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'nextSibling'];\n  },\n\n  /** @this {Node} */\n  get previousSibling() {\n    const nodeData = shadyDataForNode(this);\n    const l = nodeData && nodeData.previousSibling;\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'previousSibling'];\n  },\n\n  /** @this {Node} */\n  get childNodes() {\n    let childNodes;\n    if (utils.isTrackingLogicalChildNodes(this)) {\n      const nodeData = shadyDataForNode(this);\n      if (!nodeData.childNodes) {\n        nodeData.childNodes = [];\n        for (let n=this[utils.SHADY_PREFIX + 'firstChild']; n; n=n[utils.SHADY_PREFIX + 'nextSibling']) {\n          nodeData.childNodes.push(n);\n        }\n      }\n      childNodes = nodeData.childNodes;\n    } else {\n      childNodes = this[utils.NATIVE_PREFIX + 'childNodes'];\n    }\n    childNodes.item = function(index) {\n      return childNodes[index];\n    }\n    return childNodes;\n  },\n\n  /** @this {Node} */\n  get parentElement() {\n    const nodeData = shadyDataForNode(this);\n    let l = nodeData && nodeData.parentNode;\n    if (l && l.nodeType !== Node.ELEMENT_NODE) {\n      l = null;\n    }\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'parentElement'];\n  },\n\n  /** @this {Node} */\n  get isConnected() {\n    if (nativeIsConnected && nativeIsConnected.call(this)) {\n      return true;\n    }\n    if (this.nodeType == Node.DOCUMENT_FRAGMENT_NODE) {\n      return false;\n    }\n    // Fast path for distributed nodes.\n    const ownerDocument = this.ownerDocument;\n    if (utils.hasDocumentContains) {\n      if (ownerDocument[utils.NATIVE_PREFIX + 'contains'](this)) {\n        return true;\n      }\n    } else if (ownerDocument.documentElement &&\n      ownerDocument.documentElement[utils.NATIVE_PREFIX + 'contains'](this)) {\n      return true;\n    }\n    // Slow path for non-distributed nodes.\n    let node = this;\n    while (node && !(node instanceof Document)) {\n      node = node[utils.SHADY_PREFIX + 'parentNode'] || (utils.isShadyRoot(node) ? /** @type {ShadowRoot} */(node).host : undefined);\n    }\n    return !!(node && node instanceof Document);\n  },\n\n  /** @this {Node} */\n  get textContent() {\n    if (utils.isTrackingLogicalChildNodes(this)) {\n      let tc = [];\n      for (let n=this[utils.SHADY_PREFIX + 'firstChild']; n; n = n[utils.SHADY_PREFIX + 'nextSibling']) {\n        if (n.nodeType !== Node.COMMENT_NODE) {\n          tc.push(n[utils.SHADY_PREFIX + 'textContent']);\n        }\n      }\n      return tc.join('');\n    } else {\n      return this[utils.NATIVE_PREFIX + 'textContent'];\n    }\n  },\n\n  /**\n   * @this {Node}\n   * @param {string} value\n   */\n  set textContent(value) {\n    if (typeof value === 'undefined' || value === null) {\n      value = ''\n    }\n    switch (this.nodeType) {\n      case Node.ELEMENT_NODE:\n      case Node.DOCUMENT_FRAGMENT_NODE:\n        if (!utils.isTrackingLogicalChildNodes(this) && utils.settings.hasDescriptors) {\n          // may be removing a nested slot but fast path if we know we are not.\n          const firstChild = this[utils.SHADY_PREFIX + 'firstChild'];\n          if (firstChild != this[utils.SHADY_PREFIX + 'lastChild'] ||\n            (firstChild && firstChild.nodeType != Node.TEXT_NODE)) {\n            clearNode(this);\n          }\n          this[utils.NATIVE_PREFIX + 'textContent'] = value;\n        } else {\n          clearNode(this);\n          // Document fragments must have no childNodes if setting a blank string\n          if (value.length > 0 || this.nodeType === Node.ELEMENT_NODE) {\n            this[utils.SHADY_PREFIX + 'insertBefore'](document.createTextNode(value))\n          }\n        }\n        break;\n      default:\n        // Note, be wary of patching `nodeValue`.\n        this.nodeValue = value;\n        break;\n    }\n  },\n\n  // Patched `insertBefore`. Note that all mutations that add nodes are routed\n  // here. When a <slot> is added or a node is added to a host with a shadowRoot\n  // with a slot, a standard dom `insert` call is aborted and `_asyncRender`\n  // is called on the relevant shadowRoot. In all other cases, a standard dom\n  // `insert` can be made, but the location and ref_node may need to be changed.\n  /**\n   * @this {Node}\n   * @param {Node} node\n   * @param {Node=} ref_node\n   */\n  insertBefore(node, ref_node) {\n    // optimization: assume native insertBefore is ok if the nodes are not in the document.\n    if (this.ownerDocument !== doc && node.ownerDocument !== doc) {\n      this[utils.NATIVE_PREFIX + 'insertBefore'](node, ref_node);\n      return node;\n    }\n    if (node === this) {\n      throw Error(`Failed to execute 'appendChild' on 'Node': The new child element contains the parent.`);\n    }\n    if (ref_node) {\n      const refData = shadyDataForNode(ref_node);\n      const p = refData && refData.parentNode;\n      if ((p !== undefined && p !== this) ||\n        (p === undefined && ref_node[utils.NATIVE_PREFIX + 'parentNode'] !== this)) {\n        throw Error(`Failed to execute 'insertBefore' on 'Node': The node ` +\n        `before which the new node is to be inserted is not a child of this node.`);\n      }\n    }\n    if (ref_node === node) {\n      return node;\n    }\n    /** @type {!Array<!HTMLSlotElement>} */\n    const slotsAdded = [];\n    const ownerRoot = ownerShadyRootForNode(this);\n    /** @type {string} */\n    const newScopeName = ownerRoot ? ownerRoot.host.localName : currentScopeForNode(this);\n    /** @type {string} */\n    let oldScopeName;\n    // remove from existing location\n    const parentNode = node[utils.SHADY_PREFIX + 'parentNode'];\n    if (parentNode) {\n      oldScopeName = currentScopeForNode(node);\n      const skipUnscoping =\n        // Don't remove scoping if we're inserting into another shadowRoot;\n        // this would be unnecessary since it will be re-scoped below\n        Boolean(ownerRoot) ||\n        // Don't remove scoping if we're being moved between non-shadowRoot\n        // locations (the likely case is when moving pre-scoped nodes in a template)\n        !ownerShadyRootForNode(node) ||\n        // Under preferPerformance, don't remove scoping when moving back into\n        // a document fragment that was previously scoped; the assumption is\n        // that the user should only move correctly-scoped DOM back into it\n        (preferPerformance && this['__noInsertionPoint'] !== undefined);\n      parentNode[utils.SHADY_PREFIX + 'removeChild'](node, skipUnscoping);\n    }\n    // add to new parent\n    let allowNativeInsert = true;\n    const needsScoping = (!preferPerformance ||\n        // Under preferPerformance, only re-scope if we're not coming from a\n        // pre-scoped doc fragment or back into a pre-scoped doc fragment\n        (node['__noInsertionPoint'] === undefined &&\n         this['__noInsertionPoint'] === undefined)) &&\n        !currentScopeIsCorrect(node, newScopeName);\n    const needsSlotFinding = ownerRoot && !node['__noInsertionPoint'] &&\n        (!preferPerformance || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE);\n    if (needsSlotFinding || needsScoping) {\n      // NOTE: avoid node.removeChild as this *can* trigger another patched\n      // method (e.g. custom elements) and we want only the shady method to run.\n      // The following table describes what style scoping actions should happen as a result of this insertion.\n      // document -> shadowRoot: replace\n      // shadowRoot -> shadowRoot: replace\n      // shadowRoot -> shadowRoot of same type: do nothing\n      // shadowRoot -> document: allow unscoping\n      // document -> document: do nothing\n      // The \"same type of shadowRoot\" and \"document to document cases rely on `currentScopeIsCorrect` returning true\n      if (needsScoping) {\n        // in a document or disconnected tree, replace scoping if necessary\n        oldScopeName = oldScopeName || currentScopeForNode(node);\n      }\n      treeVisitor(node, (node) => {\n        if (needsSlotFinding && node.localName === 'slot') {\n          slotsAdded.push(/** @type {!HTMLSlotElement} */(node));\n        }\n        if (needsScoping) {\n          replaceShadyScoping(node, newScopeName, oldScopeName);\n        }\n      });\n    }\n    // if a slot is added, must render containing root.\n    if (slotsAdded.length) {\n      ownerRoot._addSlots(slotsAdded);\n      ownerRoot._asyncRender();\n    }\n    if (utils.isTrackingLogicalChildNodes(this)) {\n      recordInsertBefore(node, this, ref_node);\n      // when inserting into a host with a shadowRoot with slot, use\n      // `shadowRoot._asyncRender()` via `attach-shadow` module\n      const parentData = shadyDataForNode(this);\n      if (utils.hasShadowRootWithSlot(this)) {\n        parentData.root._asyncRender();\n        allowNativeInsert = false;\n      // when inserting into a host with shadowRoot with NO slot, do nothing\n      // as the node should not be added to composed dome anywhere.\n      } else if (parentData.root) {\n        allowNativeInsert = false;\n      }\n    }\n    if (allowNativeInsert) {\n      // if adding to a shadyRoot, add to host instead\n      let container = utils.isShadyRoot(this) ?\n        /** @type {ShadowRoot} */(this).host : this;\n      // if ref_node, get the ref_node that's actually in composed dom.\n      if (ref_node) {\n        ref_node = firstComposedNode(ref_node);\n        container[utils.NATIVE_PREFIX + 'insertBefore'](node, ref_node);\n      } else {\n        container[utils.NATIVE_PREFIX + 'appendChild'](node);\n      }\n    // Since ownerDocument is not patched, it can be incorrect after this call\n    // if the node is physically appended via distribution. This can result\n    // in the custom elements polyfill not upgrading the node if it's in an inert doc.\n    // We correct this by calling `adoptNode`.\n    } else if (node.ownerDocument !== this.ownerDocument) {\n      this.ownerDocument.adoptNode(node);\n    }\n    scheduleObserver(this, node);\n    return node;\n  },\n\n  /**\n   * @this {Node}\n   * @param {Node} node\n   */\n  appendChild(node) {\n    // if this is a shadowRoot and the shadowRoot is passed as `node`\n    // then an optimized append has already been performed, so do nothing.\n    if (!(this == node && utils.isShadyRoot(node))) {\n      return this[utils.SHADY_PREFIX + 'insertBefore'](node);\n    }\n  },\n\n  /**\n   * Patched `removeChild`. Note that all dom \"removals\" are routed here.\n   * Removes the given `node` from the element's `children`.\n   * This method also performs dom composition.\n   * @this {Node}\n   * @param {Node} node\n   * @param {boolean=} skipUnscoping\n   */\n  removeChild(node, skipUnscoping = false) {\n    if (this.ownerDocument !== doc) {\n      return this[utils.NATIVE_PREFIX + 'removeChild'](node);\n    }\n    if (node[utils.SHADY_PREFIX + 'parentNode'] !== this) {\n      throw Error('The node to be removed is not a child of this node: ' +\n        node);\n    }\n    let preventNativeRemove;\n    let ownerRoot = ownerShadyRootForNode(node);\n    const removingInsertionPoint = ownerRoot && ownerRoot._removeContainedSlots(node);\n    const parentData = shadyDataForNode(this);\n    if (utils.isTrackingLogicalChildNodes(this)) {\n      recordRemoveChild(node, this);\n      if (utils.hasShadowRootWithSlot(this)) {\n        parentData.root._asyncRender();\n        preventNativeRemove = true;\n      }\n    }\n    // unscope a node leaving a ShadowRoot if ShadyCSS is present, and this node\n    // is not going to be rescoped in `insertBefore`\n    if (getScopingShim() && !skipUnscoping && ownerRoot\n      && node.nodeType !== Node.TEXT_NODE) {\n      const oldScopeName = currentScopeForNode(node);\n      treeVisitor(node, (node) => {\n        removeShadyScoping(node, oldScopeName);\n      });\n    }\n    removeOwnerShadyRoot(node);\n    // if removing slot, must render containing root\n    if (ownerRoot) {\n      let changeSlotContent = this && this.localName === 'slot';\n      if (changeSlotContent) {\n        preventNativeRemove = true;\n      }\n      if (removingInsertionPoint || changeSlotContent) {\n        ownerRoot._asyncRender();\n      }\n    }\n    if (!preventNativeRemove) {\n      // if removing from a shadyRoot, remove from host instead\n      let container = utils.isShadyRoot(this) ?\n        /** @type {ShadowRoot} */(this).host :\n        this;\n      // not guaranteed to physically be in container; e.g.\n      // (1) if parent has a shadyRoot, element may or may not at distributed\n      // location (could be undistributed)\n      // (2) if parent is a slot, element may not ben in composed dom\n      if (!(parentData.root || node.localName === 'slot') ||\n        (container === node[utils.NATIVE_PREFIX + 'parentNode'])) {\n        container[utils.NATIVE_PREFIX + 'removeChild'](node);\n      }\n    }\n    scheduleObserver(this, null, node);\n    return node;\n  },\n\n  /**\n   * @this {Node}\n   * @param {Node} node\n   * @param {Node=} ref_node\n   */\n  replaceChild(node, ref_node) {\n    this[utils.SHADY_PREFIX + 'insertBefore'](node, ref_node);\n    this[utils.SHADY_PREFIX + 'removeChild'](ref_node);\n    return node;\n  },\n\n  /**\n   * @this {Node}\n   * @param {boolean=} deep\n   */\n  cloneNode(deep) {\n    if (this.localName == 'template') {\n      return this[utils.NATIVE_PREFIX + 'cloneNode'](deep);\n    } else {\n      const n = this[utils.NATIVE_PREFIX + 'cloneNode'](false);\n      // Attribute nodes historically had childNodes, but they have later\n      // been removed from the spec.\n      // Make sure we do not do a deep clone on them for old browsers (IE11)\n      if (deep && n.nodeType !== Node.ATTRIBUTE_NODE) {\n        for (let c=this[utils.SHADY_PREFIX + 'firstChild'], nc; c; c = c[utils.SHADY_PREFIX + 'nextSibling']) {\n          nc = c[utils.SHADY_PREFIX + 'cloneNode'](true);\n          n[utils.SHADY_PREFIX + 'appendChild'](nc);\n        }\n      }\n      return n;\n    }\n  },\n\n  /**\n   * @this {Node}\n   * @param {Object=} options\n   */\n  // TODO(sorvell): implement `options` e.g. `{ composed: boolean }`\n  getRootNode(options) { // eslint-disable-line no-unused-vars\n    if (!this || !this.nodeType) {\n      return;\n    }\n    const nodeData = ensureShadyDataForNode(this);\n    let root = nodeData.ownerShadyRoot;\n    if (root === undefined) {\n      if (utils.isShadyRoot(this)) {\n        root = this;\n        nodeData.ownerShadyRoot = root;\n      } else {\n        let parent = this[utils.SHADY_PREFIX + 'parentNode'];\n        root = parent ? parent[utils.SHADY_PREFIX + 'getRootNode'](options) : this;\n        // memo-ize result for performance but only memo-ize\n        // result if node is in the document. This avoids a problem where a root\n        // can be cached while an element is inside a fragment.\n        // If this happens and we cache the result, the value can become stale\n        // because for perf we avoid processing the subtree of added fragments.\n        if (document.documentElement[utils.NATIVE_PREFIX + 'contains'](this)) {\n          nodeData.ownerShadyRoot = root;\n        }\n      }\n\n    }\n    return root;\n  },\n\n  /** @this {Node} */\n  contains(node) {\n    return utils.contains(this, node);\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {shadyDataForNode} from '../shady-data.js';\n\n/**\n * @param {Node} node\n * @param {Function} matcher\n * @param {Function=} halter\n */\nexport function query(node, matcher, halter) {\n  let list = [];\n  queryChildNodes(node, matcher,\n    halter, list);\n  return list;\n}\n\nfunction queryChildNodes(parent, matcher, halter, list) {\n  for (let n = parent[utils.SHADY_PREFIX + 'firstChild']; n; n = n[utils.SHADY_PREFIX + 'nextSibling']) {\n    if (n.nodeType === Node.ELEMENT_NODE &&\n        queryElement(n, matcher, halter, list)) {\n      return true;\n    }\n  }\n}\n\nfunction queryElement(node, matcher, halter, list) {\n  let result = matcher(node);\n  if (result) {\n    list.push(node);\n  }\n  if (halter && halter(result)) {\n    return result;\n  }\n  queryChildNodes(node, matcher,\n    halter, list);\n}\n\n// Needed on Element, DocumentFragment, Document\nexport const ParentNodePatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Element} */\n  get firstElementChild() {\n    const nodeData = shadyDataForNode(this);\n    if (nodeData && nodeData.firstChild !== undefined) {\n      let n = this[utils.SHADY_PREFIX + 'firstChild'];\n      while (n && n.nodeType !== Node.ELEMENT_NODE) {\n        n = n[utils.SHADY_PREFIX + 'nextSibling'];\n      }\n      return n;\n    } else {\n      return this[utils.NATIVE_PREFIX + 'firstElementChild'];\n    }\n  },\n\n  /** @this {Element} */\n  get lastElementChild() {\n    const nodeData = shadyDataForNode(this);\n    if (nodeData && nodeData.lastChild !== undefined) {\n      let n = this[utils.SHADY_PREFIX + 'lastChild'];\n      while (n && n.nodeType !== Node.ELEMENT_NODE) {\n        n = n[utils.SHADY_PREFIX + 'previousSibling'];\n      }\n      return n;\n    } else {\n      return this[utils.NATIVE_PREFIX + 'lastElementChild'];\n    }\n  },\n\n  /** @this {Element} */\n  get children() {\n    if (!utils.isTrackingLogicalChildNodes(this)) {\n      return this[utils.NATIVE_PREFIX + 'children'];\n    }\n    return utils.createPolyfilledHTMLCollection(Array.prototype.filter.call(\n        utils.childNodesArray(this), (n) => {\n      return (n.nodeType === Node.ELEMENT_NODE);\n    }));\n  },\n\n  /** @this {Element} */\n  get childElementCount() {\n    let children = this[utils.SHADY_PREFIX + 'children'];\n    if(children) {\n      return children.length;\n    }\n    return 0;\n  }\n\n});\n\nexport const QueryPatches = utils.getOwnPropertyDescriptors({\n  // TODO(sorvell): consider doing native QSA and filtering results.\n  /**\n   * @this {Element}\n   * @param  {string} selector\n   */\n  querySelector(selector) {\n    // match selector and halt on first result.\n    let result = query(this, function(n) {\n      return utils.matchesSelector(n, selector);\n    }, function(n) {\n      return Boolean(n);\n    })[0];\n    return result || null;\n  },\n\n  /**\n   * @this {Element}\n   * @param  {string} selector\n   * @param  {boolean} useNative\n   */\n  // TODO(sorvell): `useNative` option relies on native querySelectorAll and\n  // misses distributed nodes, see\n  // https://github.com/webcomponents/shadydom/pull/210#issuecomment-361435503\n  querySelectorAll(selector, useNative) {\n    if (useNative) {\n      const o = Array.prototype.slice.call(this[utils.NATIVE_PREFIX + 'querySelectorAll'](selector));\n      const root = this[utils.SHADY_PREFIX + 'getRootNode']();\n      return o.filter(e => e[utils.SHADY_PREFIX + 'getRootNode']() == root);\n    }\n    return query(this, function(n) {\n      return utils.matchesSelector(n, selector);\n    });\n  }\n\n});\n\n// In preferPerformance mode, create a custom `ParentNodeDocumentOrFragment`\n// that optionally does not mixin querySelector/All; this is a performance\n// optimization. In noPatch, we need to keep the query patches here in order to\n// ensure the query API is available on the wrapper\nexport const ParentNodeDocumentOrFragmentPatches =\n  (utils.settings.preferPerformance && !utils.settings.noPatch) ?\n  Object.assign({}, ParentNodePatches) : ParentNodePatches;\n\nObject.assign(ParentNodePatches, QueryPatches);","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport * as utils from '../utils.js';\nimport { query } from './ParentNode.js';\n\nexport const DocumentOrFragmentPatches = utils.getOwnPropertyDescriptors({\n\n  /**\n   * @this {Element}\n   * @param {string} id\n   */\n  getElementById(id) {\n    if (id === '') {\n      return null;\n    }\n    let result = query(this, function(n) {\n      return n.id == id;\n    }, function(n) {\n      return Boolean(n);\n    })[0];\n    return result || null;\n  }\n\n});","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {ownerShadyRootForNode} from '../attach-shadow.js';\n\nfunction getDocumentActiveElement() {\n  if (utils.settings.hasDescriptors) {\n    return document[utils.NATIVE_PREFIX + 'activeElement'];\n  } else {\n    return document.activeElement;\n  }\n}\n\nexport const DocumentOrShadowRootPatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Document|ShadowRoot} */\n  get activeElement() {\n    let active = getDocumentActiveElement();\n    // In IE11, activeElement might be an empty object if the document is\n    // contained in an iframe.\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10998788/\n    if (!active || !active.nodeType) {\n      return null;\n    }\n    let isShadyRoot = !!(utils.isShadyRoot(this));\n    if (this !== document) {\n      // If this node isn't a document or shady root, then it doesn't have\n      // an active element.\n      if (!isShadyRoot) {\n        return null;\n      }\n      // If this shady root's host is the active element or the active\n      // element is not a descendant of the host (in the composed tree),\n      // then it doesn't have an active element.\n      if (this.host === active ||\n          !this.host[utils.NATIVE_PREFIX + 'contains'](active)) {\n        return null;\n      }\n    }\n    // This node is either the document or a shady root of which the active\n    // element is a (composed) descendant of its host; iterate upwards to\n    // find the active element's most shallow host within it.\n    let activeRoot = ownerShadyRootForNode(active);\n    while (activeRoot && activeRoot !== this) {\n      active = activeRoot.host;\n      activeRoot = ownerShadyRootForNode(active);\n    }\n    if (this === document) {\n      // This node is the document, so activeRoot should be null.\n      return activeRoot ? null : active;\n    } else {\n      // This node is a non-document shady root, and it should be\n      // activeRoot.\n      return activeRoot === this ? active : null;\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {getInnerHTML} from '../innerHTML.js';\nimport {clearNode} from './Node.js';\n\n/** @type {!Document} */\nconst inertDoc = document.implementation.createHTMLDocument('inert');\n\nexport const ElementOrShadowRootPatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Element} */\n  get innerHTML() {\n    if (utils.isTrackingLogicalChildNodes(this)) {\n      const content = this.localName === 'template' ?\n      /** @type {HTMLTemplateElement} */(this).content : this;\n      return getInnerHTML(content, utils.childNodesArray);\n    } else {\n      return this[utils.NATIVE_PREFIX + 'innerHTML'];\n    }\n  },\n\n  /**\n   * @this {Element}\n   * @param {string} value\n   */\n  set innerHTML(value) {\n    if (this.localName === 'template') {\n      this[utils.NATIVE_PREFIX + 'innerHTML'] = value;\n    } else {\n      clearNode(this);\n      const containerName = this.localName || 'div';\n      let htmlContainer;\n      if (!this.namespaceURI || this.namespaceURI === inertDoc.namespaceURI) {\n        htmlContainer = inertDoc.createElement(containerName);\n      } else {\n        htmlContainer = inertDoc.createElementNS(this.namespaceURI, containerName);\n      }\n      if (utils.settings.hasDescriptors) {\n        htmlContainer[utils.NATIVE_PREFIX + 'innerHTML'] = value;\n      } else {\n        htmlContainer.innerHTML = value;\n      }\n      let firstChild;\n      while ((firstChild = htmlContainer[utils.SHADY_PREFIX + 'firstChild'])) {\n        this[utils.SHADY_PREFIX + 'insertBefore'](firstChild);\n      }\n    }\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\n\nexport const ShadowRootPatches = utils.getOwnPropertyDescriptors({\n\n  /**\n   * @this {ShadowRoot}\n   * @param {string} type\n   * @param {Function} fn\n   * @param {Object|boolean=} optionsOrCapture\n   */\n  addEventListener(type, fn, optionsOrCapture) {\n    if (typeof optionsOrCapture !== 'object') {\n      optionsOrCapture = {\n        capture: Boolean(optionsOrCapture)\n      }\n    }\n    // Note, `__shadyTarget` may already be set if an event was added on a <slot> child\n    optionsOrCapture.__shadyTarget = optionsOrCapture.__shadyTarget || this;\n    this.host[utils.SHADY_PREFIX + 'addEventListener'](type, fn, optionsOrCapture);\n  },\n\n  /**\n   * @this {ShadowRoot}\n   * @param {string} type\n   * @param {Function} fn\n   * @param {Object|boolean=} optionsOrCapture\n   */\n  removeEventListener(type, fn, optionsOrCapture) {\n    if (typeof optionsOrCapture !== 'object') {\n      optionsOrCapture = {\n        capture: Boolean(optionsOrCapture)\n      }\n    }\n    // Note, `__shadyTarget` may already be set if an event was added on a <slot> child\n    optionsOrCapture.__shadyTarget = optionsOrCapture.__shadyTarget || this;\n    this.host[utils.SHADY_PREFIX + 'removeEventListener'](type, fn, optionsOrCapture);\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {NodePatches} from './patches/Node.js';\nimport {OutsideDescriptors, InsideDescriptors, TextContentInnerHTMLDescriptors} from './patch-instances.js';\nimport {ParentNodePatches} from './patches/ParentNode.js';\nimport {DocumentOrFragmentPatches} from './patches/DocumentOrFragment.js';\nimport {DocumentOrShadowRootPatches} from './patches/DocumentOrShadowRoot.js';\nimport {ElementOrShadowRootPatches} from './patches/ElementOrShadowRoot.js';\nimport {ShadowRootPatches} from './patches/ShadowRoot.js';\n\n/**\n * @param {!Object} proto\n * @param {string=} prefix\n */\nconst patchShadyAccessors = (proto, prefix) => {\n  utils.patchProperties(proto, ShadowRootPatches, prefix);\n  utils.patchProperties(proto, DocumentOrShadowRootPatches, prefix);\n  utils.patchProperties(proto, ElementOrShadowRootPatches, prefix);\n  // We ensure ParentNode accessors since these do not exist in Edge/IE on DocumentFragments.\n  utils.patchProperties(proto, ParentNodePatches, prefix);\n  // Ensure `shadowRoot` has basic descriptors when we cannot rely\n  // on them coming from DocumentFragment.\n  //\n  // Case 1, noPatching: Because we want noPatch ShadyRoots to have native property\n  // names so that they do not have to be wrapped...\n  // When we do *not* patch Node/DocumentFragment.prototype\n  // we must manually install those properties on ShadyRoot's prototype.\n  // Note, it's important to only install these in this mode so as not to stomp\n  // over CustomElements polyfill's patches on Node/DocumentFragment methods.\n  if (utils.settings.noPatch && !prefix) {\n    utils.patchProperties(proto, NodePatches, prefix);\n    utils.patchProperties(proto, DocumentOrFragmentPatches, prefix);\n  // Case 2, bad descriptors: Ensure accessors are on ShadowRoot.\n  // These descriptors are normally used for instance patching but because\n  // ShadyRoot can always be patched, just do it to the prototype.\n  } else if (!utils.settings.hasDescriptors) {\n    utils.patchProperties(proto, OutsideDescriptors);\n    utils.patchProperties(proto, InsideDescriptors);\n    utils.patchProperties(proto, TextContentInnerHTMLDescriptors);\n  }\n}\n\nexport const patchShadyRoot = (proto) => {\n  proto.__proto__ = DocumentFragment.prototype;\n\n  // patch both prefixed and not, even when noPatch == true.\n  patchShadyAccessors(proto, utils.SHADY_PREFIX);\n  patchShadyAccessors(proto);\n\n  // Ensure native properties are all safely wrapped since ShadowRoot is not an\n  // actual DocumentFragment instance.\n  Object.defineProperties(proto, {\n    nodeType: {\n      value: Node.DOCUMENT_FRAGMENT_NODE,\n      configurable: true\n    },\n    nodeName: {\n      value: '#document-fragment',\n      configurable: true\n    },\n    nodeValue: {\n      value: null,\n      configurable: true\n    }\n  });\n\n  // make undefined\n  [\n    'localName',\n    'namespaceURI',\n    'prefix'\n  ].forEach((prop) => {\n    Object.defineProperty(proto, prop, {\n      value: undefined,\n      configurable: true\n    });\n  });\n\n  // defer properties to host\n  [\n    'ownerDocument',\n    'baseURI',\n    'isConnected'\n  ].forEach((prop) => {\n    Object.defineProperty(proto, prop, {\n      /** @this {ShadowRoot} */\n      get() {\n        return this.host[prop];\n      },\n      configurable: true\n    });\n  });\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport {calculateSplices} from './array-splice.js';\nimport * as utils from './utils.js';\nimport {enqueue} from './flush.js';\nimport {ensureShadyDataForNode, shadyDataForNode} from './shady-data.js';\nimport {recordChildNodes} from './link-nodes.js';\nimport {patchShadyRoot} from './patch-shadyRoot.js';\n\n// Do not export this object. It must be passed as the first argument to the\n// ShadyRoot constructor in `attachShadow` to prevent the constructor from\n// throwing. This prevents the user from being able to manually construct a\n// ShadyRoot (i.e. `new ShadowRoot()`).\nconst ShadyRootConstructionToken = {};\n\nconst CATCHALL_NAME = '__catchall';\nconst SHADYROOT_NAME = 'ShadyRoot';\n\nconst MODE_CLOSED = 'closed';\n\nlet isRendering = utils.settings['deferConnectionCallbacks'] && document.readyState === 'loading';\nlet rootRendered;\n\nfunction ancestorList(node) {\n  let ancestors = [];\n  do {\n    ancestors.unshift(node);\n  } while ((node = node[utils.SHADY_PREFIX + 'parentNode']));\n  return ancestors;\n}\n\n/**\n * @extends {ShadowRoot}\n */\nclass ShadyRoot {\n\n  constructor(token, host, options) {\n    if (token !== ShadyRootConstructionToken) {\n      throw new TypeError('Illegal constructor');\n    }\n    /** @type {boolean} */\n    this._renderPending;\n    /** @type {boolean} */\n    this._hasRendered;\n    /** @type {?Array<HTMLSlotElement>} */\n    this._slotList = null;\n    /** @type {?Object<string, Array<HTMLSlotElement>>} */\n    this._slotMap;\n    /** @type {?Array<HTMLSlotElement>} */\n    this._pendingSlots;\n    this._init(host, options);\n  }\n\n  _init(host, options) {\n    // NOTE: set a fake local name so this element can be\n    // distinguished from a DocumentFragment when patching.\n    // FF doesn't allow this to be `localName`\n    /** @type {string} */\n    this._localName = SHADYROOT_NAME;\n    // root <=> host\n    this.host = host;\n    /** @type {!string|undefined} */\n    this.mode = options && options.mode;\n    recordChildNodes(this.host);\n    const hostData = ensureShadyDataForNode(this.host);\n    /** @type {!ShadyRoot} */\n    hostData.root = this;\n    hostData.publicRoot = this.mode !== MODE_CLOSED ? this : null;\n    // setup root\n    const rootData = ensureShadyDataForNode(this);\n    rootData.firstChild = rootData.lastChild =\n        rootData.parentNode = rootData.nextSibling =\n        rootData.previousSibling = null;\n    // NOTE: optimization flag, only require an asynchronous render\n    // to record parsed children if flag is not set.\n    if (utils.settings['preferPerformance']) {\n      let n;\n      while ((n = this.host[utils.NATIVE_PREFIX + 'firstChild'])) {\n        this.host[utils.NATIVE_PREFIX + 'removeChild'](n);\n      }\n    } else {\n      this._asyncRender();\n    }\n  }\n\n  _asyncRender() {\n    if (!this._renderPending) {\n      this._renderPending = true;\n      enqueue(() => this._render());\n    }\n  }\n\n  // returns the oldest renderPending ancestor root.\n  _getPendingDistributionRoot() {\n    let renderRoot;\n    let root = this;\n    while (root) {\n      if (root._renderPending) {\n        renderRoot = root;\n      }\n      root = root._getDistributionParent();\n    }\n    return renderRoot;\n  }\n\n  // Returns the shadyRoot `this.host` if `this.host`\n  // has children that require distribution.\n  _getDistributionParent() {\n    let root = this.host[utils.SHADY_PREFIX + 'getRootNode']();\n    if (!utils.isShadyRoot(root)) {\n      return;\n    }\n    const nodeData = shadyDataForNode(this.host);\n    if (nodeData && nodeData.__childSlotCount > 0) {\n      return root;\n    }\n  }\n\n  // Renders the top most render pending shadowRoot in the distribution tree.\n  // This is safe because when a distribution parent renders, all children render.\n  _render() {\n    // If this root is not pending, it needs no rendering work. Any pending\n    // parent that needs to render wll cause this root to render.\n    const root = this._renderPending && this._getPendingDistributionRoot();\n    if (root) {\n      root._renderSelf();\n    }\n  }\n\n  _flushInitial() {\n    if (!this._hasRendered && this._renderPending) {\n      this._render();\n    }\n  }\n\n  /** @override */\n  _renderSelf() {\n    // track rendering state.\n    const wasRendering = isRendering;\n    isRendering = true;\n    this._renderPending = false;\n    if (this._slotList) {\n      this._distribute();\n      this._compose();\n    }\n    // NOTE: optimization flag, only process parsed children\n    // if optimization flag is not set.\n    // on initial render remove any undistributed children.\n    if (!utils.settings['preferPerformance'] && !this._hasRendered) {\n      for (let n=this.host[utils.SHADY_PREFIX + 'firstChild']; n; n = n[utils.SHADY_PREFIX + 'nextSibling']) {\n        const data = shadyDataForNode(n);\n        if (n[utils.NATIVE_PREFIX + 'parentNode'] === this.host &&\n            (n.localName === 'slot' || !data.assignedSlot)) {\n          this.host[utils.NATIVE_PREFIX + 'removeChild'](n);\n        }\n      }\n    }\n    this._hasRendered = true;\n    isRendering = wasRendering;\n    if (rootRendered) {\n      rootRendered();\n    }\n  }\n\n  _distribute() {\n    this._validateSlots();\n    // capture # of previously assigned nodes to help determine if dirty.\n    for (let i=0, slot; i < this._slotList.length; i++) {\n      slot = this._slotList[i];\n      this._clearSlotAssignedNodes(slot);\n    }\n    // distribute host children.\n    for (let n=this.host[utils.SHADY_PREFIX + 'firstChild']; n; n=n[utils.SHADY_PREFIX + 'nextSibling']) {\n      this._distributeNodeToSlot(n);\n    }\n    // fallback content, slotchange, and dirty roots\n    for (let i=0; i < this._slotList.length; i++) {\n      const slot = this._slotList[i];\n      const slotData = shadyDataForNode(slot);\n      // distribute fallback content\n      if (!slotData.assignedNodes.length) {\n        for (let n=slot[utils.SHADY_PREFIX + 'firstChild']; n; n=n[utils.SHADY_PREFIX + 'nextSibling']) {\n          this._distributeNodeToSlot(n, slot);\n        }\n      }\n      const slotParentData = shadyDataForNode(slot[utils.SHADY_PREFIX + 'parentNode']);\n      const slotParentRoot = slotParentData && slotParentData.root;\n      if (slotParentRoot && (slotParentRoot._hasInsertionPoint() || slotParentRoot._renderPending)) {\n        slotParentRoot._renderSelf();\n      }\n      this._addAssignedToFlattenedNodes(slotData.flattenedNodes,\n        slotData.assignedNodes);\n      let prevAssignedNodes = slotData._previouslyAssignedNodes;\n      if (prevAssignedNodes) {\n        for (let i=0; i < prevAssignedNodes.length; i++) {\n          shadyDataForNode(prevAssignedNodes[i])._prevAssignedSlot = null;\n        }\n        slotData._previouslyAssignedNodes = null;\n        // dirty if previously less assigned nodes than previously assigned.\n        if (prevAssignedNodes.length > slotData.assignedNodes.length) {\n          slotData.dirty = true;\n        }\n      }\n      /* Note: A slot is marked dirty whenever a node is newly assigned to it\n      or a node is assigned to a different slot (done in `_distributeNodeToSlot`)\n      or if the number of nodes assigned to the slot has decreased (done above);\n      */\n      if (slotData.dirty) {\n        slotData.dirty = false;\n        this._fireSlotChange(slot);\n      }\n    }\n  }\n\n  /**\n   * Distributes given `node` to the appropriate slot based on its `slot`\n   * attribute. If `forcedSlot` is given, then the node is distributed to the\n   * `forcedSlot`.\n   * Note: slot to which the node is assigned will be marked dirty for firing\n   * `slotchange`.\n   * @param {Node} node\n   * @param {Node=} forcedSlot\n   *\n   */\n  _distributeNodeToSlot(node, forcedSlot) {\n    const nodeData = ensureShadyDataForNode(node);\n    let oldSlot = nodeData._prevAssignedSlot;\n    nodeData._prevAssignedSlot = null;\n    let slot = forcedSlot;\n    if (!slot) {\n      let name = node[utils.SHADY_PREFIX + 'slot'] || CATCHALL_NAME;\n      const list = this._slotMap[name];\n      slot = list && list[0];\n    }\n    if (slot) {\n      const slotData = ensureShadyDataForNode(slot);\n      slotData.assignedNodes.push(node);\n      nodeData.assignedSlot = slot;\n    } else {\n      nodeData.assignedSlot = undefined;\n    }\n    if (oldSlot !== nodeData.assignedSlot) {\n      if (nodeData.assignedSlot) {\n        ensureShadyDataForNode(nodeData.assignedSlot).dirty = true;\n      }\n    }\n  }\n\n  /**\n   * Clears the assignedNodes tracking data for a given `slot`. Note, the current\n   * assigned node data is tracked (via _previouslyAssignedNodes and\n   * _prevAssignedSlot) to see if `slotchange` should fire. This data may be out\n   *  of date at this time because the assigned nodes may have already been\n   * distributed to another root. This is ok since this data is only used to\n   * track changes.\n   * @param {HTMLSlotElement} slot\n   */\n  _clearSlotAssignedNodes(slot) {\n    const slotData = shadyDataForNode(slot);\n    let n$ = slotData.assignedNodes;\n    slotData.assignedNodes = [];\n    slotData.flattenedNodes = [];\n    slotData._previouslyAssignedNodes = n$;\n    if (n$) {\n      for (let i=0; i < n$.length; i++) {\n        let n = shadyDataForNode(n$[i]);\n        n._prevAssignedSlot = n.assignedSlot;\n        // only clear if it was previously set to this slot;\n        // this helps ensure that if the node has otherwise been distributed\n        // ignore it.\n        if (n.assignedSlot === slot) {\n          n.assignedSlot = null;\n        }\n      }\n    }\n  }\n\n  _addAssignedToFlattenedNodes(flattened, assigned) {\n    for (let i=0, n; (i<assigned.length) && (n=assigned[i]); i++) {\n      if (n.localName == 'slot') {\n        const nestedAssigned = shadyDataForNode(n).assignedNodes;\n        if (nestedAssigned && nestedAssigned.length) {\n          this._addAssignedToFlattenedNodes(flattened, nestedAssigned);\n        }\n      } else {\n        flattened.push(assigned[i]);\n      }\n    }\n  }\n\n  _fireSlotChange(slot) {\n    // NOTE: cannot bubble correctly here so not setting bubbles: true\n    // Safari tech preview does not bubble but chrome does\n    // Spec says it bubbles (https://dom.spec.whatwg.org/#mutation-observers)\n    slot[utils.NATIVE_PREFIX + 'dispatchEvent'](new Event('slotchange'));\n    const slotData = shadyDataForNode(slot);\n    if (slotData.assignedSlot) {\n      this._fireSlotChange(slotData.assignedSlot);\n    }\n  }\n\n  // Reify dom such that it is at its correct rendering position\n  // based on logical distribution.\n  // NOTE: here we only compose parents of <slot> elements and not the\n  // shadowRoot into the host. The latter is performend via a fast path\n  // in the `logical-mutation`.insertBefore.\n  _compose() {\n    const slots = this._slotList;\n    let composeList = [];\n    for (let i=0; i < slots.length; i++) {\n      const parent = slots[i][utils.SHADY_PREFIX + 'parentNode'];\n      /* compose node only if:\n        (1) parent does not have a shadowRoot since shadowRoot has already\n        composed into the host\n        (2) we're not already composing it\n        [consider (n^2) but rare better than Set]\n      */\n      const parentData = shadyDataForNode(parent);\n      if (!(parentData && parentData.root) &&\n        composeList.indexOf(parent) < 0) {\n        composeList.push(parent);\n      }\n    }\n    for (let i=0; i < composeList.length; i++) {\n      const node = composeList[i];\n      const targetNode = node === this ? this.host : node;\n      this._updateChildNodes(targetNode, this._composeNode(node));\n    }\n  }\n\n  // Returns the list of nodes which should be rendered inside `node`.\n  _composeNode(node) {\n    let children = [];\n    for (let n=node[utils.SHADY_PREFIX + 'firstChild']; n; n = n[utils.SHADY_PREFIX + 'nextSibling']) {\n      // Note: if we see a slot here, the nodes are guaranteed to need to be\n      // composed here. This is because if there is redistribution, it has\n      // already been handled by this point.\n      if (this._isInsertionPoint(n)) {\n        let flattenedNodes = shadyDataForNode(n).flattenedNodes;\n        for (let j = 0; j < flattenedNodes.length; j++) {\n          let distributedNode = flattenedNodes[j];\n            children.push(distributedNode);\n        }\n      } else {\n        children.push(n);\n      }\n    }\n    return children;\n  }\n\n  _isInsertionPoint(node) {\n      return node.localName == 'slot';\n    }\n\n  // Ensures that the rendered node list inside `container` is `children`.\n  _updateChildNodes(container, children) {\n    let composed = utils.nativeChildNodesArray(container);\n    let splices = calculateSplices(children, composed);\n    // process removals\n    for (let i=0, d=0, s; (i<splices.length) && (s=splices[i]); i++) {\n      for (let j=0, n; (j < s.removed.length) && (n=s.removed[j]); j++) {\n        // check if the node is still where we expect it is before trying\n        // to remove it; this can happen if we move a node and\n        // then schedule its previous host for distribution resulting in\n        // the node being removed here.\n        if (n[utils.NATIVE_PREFIX + 'parentNode'] === container) {\n          container[utils.NATIVE_PREFIX + 'removeChild'](n);\n        }\n        // TODO(sorvell): avoid the need for splicing here.\n        composed.splice(s.index + d, 1);\n      }\n      d -= s.addedCount;\n    }\n    // process adds\n    for (let i=0, s, next; (i<splices.length) && (s=splices[i]); i++) { //eslint-disable-line no-redeclare\n      next = composed[s.index];\n      for (let j=s.index, n; j < s.index + s.addedCount; j++) {\n        n = children[j];\n        container[utils.NATIVE_PREFIX + 'insertBefore'](n, next);\n        composed.splice(j, 0, n);\n      }\n    }\n  }\n\n  _ensureSlotData() {\n    this._pendingSlots = this._pendingSlots || [];\n    this._slotList = this._slotList || [];\n    this._slotMap = this._slotMap || {};\n  }\n\n  _addSlots(slots) {\n    this._ensureSlotData();\n    this._pendingSlots.push(...slots);\n  }\n\n  _validateSlots() {\n    if (this._pendingSlots && this._pendingSlots.length) {\n      this._mapSlots(this._pendingSlots);\n      this._pendingSlots = [];\n    }\n  }\n\n  /**\n   * Adds the given slots. Slots are maintained in an dom-ordered list.\n   * In addition a map of name to slot is updated.\n   */\n  _mapSlots(slots) {\n    let slotNamesToSort;\n    for (let i=0; i < slots.length; i++) {\n      const slot = slots[i];\n      // ensure insertionPoints's and their parents have logical dom info.\n      // save logical tree info\n      // a. for shadyRoot\n      // b. for insertion points (fallback)\n      // c. for parents of insertion points\n      recordChildNodes(slot);\n      const slotParent = slot[utils.SHADY_PREFIX + 'parentNode'];\n      recordChildNodes(slotParent);\n      const slotParentData = shadyDataForNode(slotParent);\n      slotParentData.__childSlotCount = (slotParentData.__childSlotCount || 0) + 1;\n      let name = this._nameForSlot(slot);\n      if (this._slotMap[name]) {\n        slotNamesToSort = slotNamesToSort || {};\n        slotNamesToSort[name] = true;\n        this._slotMap[name].push(slot);\n      } else {\n        this._slotMap[name] = [slot];\n      }\n      this._slotList.push(slot);\n    }\n    if (slotNamesToSort) {\n      for (let n in slotNamesToSort) {\n        this._slotMap[n] = this._sortSlots(this._slotMap[n]);\n      }\n    }\n  }\n\n  _nameForSlot(slot) {\n    const name = slot['name'] || slot.getAttribute('name') || CATCHALL_NAME;\n    slot.__slotName = name;\n    return name;\n  }\n\n  /**\n   * Slots are kept in an ordered list. Slots with the same name\n   * are sorted here by tree order.\n   */\n  _sortSlots(slots) {\n    // NOTE: Cannot use `compareDocumentPosition` because it's not polyfilled,\n    // but the code here could be used to polyfill the preceeding/following info\n    // in `compareDocumentPosition`.\n    return slots.sort((a, b) => {\n      let listA = ancestorList(a);\n      let listB = ancestorList(b);\n      for (var i=0; i < listA.length; i++) {\n        let nA = listA[i];\n        let nB = listB[i];\n        if (nA !== nB) {\n          let c$ = utils.childNodesArray(nA[utils.SHADY_PREFIX + 'parentNode']);\n          return c$.indexOf(nA) - c$.indexOf(nB);\n        }\n      }\n    });\n  }\n\n  /**\n   * Removes from tracked slot data any slots contained within `container` and\n   * then updates the tracked data (_slotList and _slotMap).\n   * Any removed slots also have their `assignedNodes` removed from comopsed dom.\n   */\n  _removeContainedSlots(container) {\n    if (!this._slotList) {\n      return;\n    }\n    this._validateSlots();\n    let didRemove;\n    const map = this._slotMap;\n    for (let n in map) {\n      const slots = map[n];\n      for (let i=0; i < slots.length; i++) {\n        const slot = slots[i];\n        if (utils.contains(container, slot)) {\n          slots.splice(i, 1);\n          const x = this._slotList.indexOf(slot);\n          if (x >= 0) {\n            this._slotList.splice(x, 1);\n            const slotParentData = shadyDataForNode(slot[utils.SHADY_PREFIX + 'parentNode']);\n            if (slotParentData && slotParentData.__childSlotCount) {\n              slotParentData.__childSlotCount--;\n            }\n          }\n          i--;\n          this._removeFlattenedNodes(slot);\n          didRemove = true;\n        }\n      }\n    }\n    return didRemove;\n  }\n\n  _updateSlotName(slot) {\n    if (!this._slotList) {\n      return;\n    }\n    // make sure slotMap is initialized with this slot\n    this._validateSlots();\n    const oldName = slot.__slotName;\n    const name = this._nameForSlot(slot);\n    if (name === oldName) {\n      return;\n    }\n    // remove from existing tracking\n    let slots = this._slotMap[oldName];\n    const i = slots.indexOf(slot);\n    if (i >= 0) {\n      slots.splice(i, 1);\n    }\n    // add to new location and sort if nedessary\n    let list = this._slotMap[name] || (this._slotMap[name] = []);\n    list.push(slot);\n    if (list.length > 1) {\n      this._slotMap[name] = this._sortSlots(list);\n    }\n  }\n\n  _removeFlattenedNodes(slot) {\n    const data = shadyDataForNode(slot);\n    let n$ = data.flattenedNodes;\n    if (n$) {\n      for (let i=0; i<n$.length; i++) {\n        let node = n$[i];\n        let parent = node[utils.NATIVE_PREFIX + 'parentNode'];\n        if (parent) {\n          parent[utils.NATIVE_PREFIX + 'removeChild'](node);\n        }\n      }\n    }\n    data.flattenedNodes = [];\n    data.assignedNodes = [];\n  }\n\n  _hasInsertionPoint() {\n    this._validateSlots();\n    return Boolean(this._slotList && this._slotList.length);\n  }\n}\n\npatchShadyRoot(ShadyRoot.prototype);\nexport {ShadyRoot};\n\n/**\n  Implements a pared down version of ShadowDOM's scoping, which is easy to\n  polyfill across browsers.\n*/\nexport const attachShadow = (host, options) => {\n  if (!host) {\n    throw new Error('Must provide a host.');\n  }\n  if (!options) {\n    throw new Error('Not enough arguments.');\n  }\n  let root;\n  // Optimization for booting up a shadowRoot from a fragment rather than\n  // creating one.\n  if (options['shadyUpgradeFragment'] && utils.canUpgrade()) {\n    root = options['shadyUpgradeFragment'];\n    root.__proto__ = ShadowRoot.prototype;\n    root._init(host, options);\n    recordChildNodes(root, root);\n    // Note: qsa is native when used with noPatch.\n    /** @type {?NodeList<Element>} */\n    const slotsAdded = root['__noInsertionPoint'] ? null : root.querySelectorAll('slot');\n    // Reset scoping information so normal scoing rules apply after this.\n    root['__noInsertionPoint'] = undefined;\n    // if a slot is added, must render containing root.\n    if (slotsAdded && slotsAdded.length) {\n      root._addSlots(slotsAdded);\n      root._asyncRender();\n    }\n    /** @type {ShadowRoot} */(root).host[utils.NATIVE_PREFIX + 'appendChild'](root);\n  } else {\n    root = new ShadyRoot(ShadyRootConstructionToken, host, options);\n  }\n  return root;\n}\n\n// Mitigate connect/disconnect spam by wrapping custom element classes.\nif (window['customElements'] && utils.settings.inUse && !utils.settings['preferPerformance']) {\n\n  // process connect/disconnect after roots have rendered to avoid\n  // issues with reaction stack.\n  let connectMap = new Map();\n  rootRendered = function() {\n    // allow elements to connect\n    // save map state (without needing polyfills on IE11)\n    const r = [];\n    connectMap.forEach((v, k) => {\n      r.push([k, v]);\n    });\n    connectMap.clear();\n    for (let i=0; i < r.length; i++) {\n      const e = r[i][0], value = r[i][1];\n      if (value) {\n        e['__shadydom_connectedCallback']();\n      } else {\n        e['__shadydom_disconnectedCallback']();\n      }\n    }\n  }\n\n  // Document is in loading state and flag is set (deferConnectionCallbacks)\n  // so process connection stack when `readystatechange` fires.\n  if (isRendering) {\n    document.addEventListener('readystatechange', () => {\n      isRendering = false;\n      rootRendered();\n    }, {once: true});\n  }\n\n  /*\n   * (1) elements can only be connected/disconnected if they are in the expected\n   * state.\n   * (2) never run connect/disconnect during rendering to avoid reaction stack issues.\n   */\n  const ManageConnect = (base, connected, disconnected) => {\n    let counter = 0;\n    const connectFlag = `__isConnected${counter++}`;\n    if (connected || disconnected) {\n\n      /** @this {!HTMLElement} */\n      base.prototype.connectedCallback = base.prototype['__shadydom_connectedCallback'] = function() {\n        // if rendering defer connected\n        // otherwise connect only if we haven't already\n        if (isRendering) {\n          connectMap.set(this, true);\n        } else if (!this[connectFlag]) {\n          this[connectFlag] = true;\n          if (connected) {\n            connected.call(this);\n          }\n        }\n      }\n\n      /** @this {!HTMLElement} */\n      base.prototype.disconnectedCallback = base.prototype['__shadydom_disconnectedCallback'] = function() {\n        // if rendering, cancel a pending connection and queue disconnect,\n        // otherwise disconnect only if a connection has been allowed\n        if (isRendering) {\n          // This is necessary only because calling removeChild\n          // on a node that requires distribution leaves it in the DOM tree\n          // until distribution.\n          // NOTE: remember this is checking the patched isConnected to determine\n          // if the node is in the logical tree.\n          if (!this.isConnected) {\n            connectMap.set(this, false);\n          }\n        } else if (this[connectFlag]) {\n          this[connectFlag] = false;\n          if (disconnected) {\n            disconnected.call(this);\n          }\n        }\n      }\n    }\n\n    return base;\n  }\n\n  const originalDefine = window['customElements']['define'];\n  const define = function(name, constructor) {\n    const connected = constructor.prototype.connectedCallback;\n    const disconnected = constructor.prototype.disconnectedCallback;\n    originalDefine.call(window['customElements'], name,\n        ManageConnect(constructor, connected, disconnected));\n    // unpatch connected/disconnected on class; custom elements tears this off\n    // so the patch is maintained, but if the user calls these methods for\n    // e.g. testing, they will be as expected.\n    constructor.prototype.connectedCallback = connected;\n    constructor.prototype.disconnectedCallback = disconnected;\n  }\n  // Note, it would be better to only patch the CustomElementRegistry.prototype,\n  // but ShadyCSS patches define directly.\n  window.customElements.define = define;\n  // Still patch the registry directly since Safari 10 loses the patch\n  // unless this is done.\n  Object.defineProperty(window['CustomElementRegistry'].prototype, 'define', {\n    value: define,\n    configurable: true\n  });\n}\n\n/** @return {!ShadyRoot|undefined} */\nexport const ownerShadyRootForNode = (node) => {\n  let root = node[utils.SHADY_PREFIX + 'getRootNode']();\n  if (utils.isShadyRoot(root)) {\n    return root;\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {eventPropertyNames} from './patch-events.js';\n\n/** @implements {IWrapper} */\nclass Wrapper {\n\n  /** @param {!Node} node */\n  constructor(node) {\n    this.node = node;\n  }\n\n  // node\n  addEventListener(name, fn, options) {\n    return this.node[utils.SHADY_PREFIX + 'addEventListener'](name, fn, options);\n  }\n\n  removeEventListener(name, fn, options) {\n    return this.node[utils.SHADY_PREFIX + 'removeEventListener'](name, fn, options);\n  }\n\n  appendChild(node) {\n    return this.node[utils.SHADY_PREFIX + 'appendChild'](node);\n  }\n\n  insertBefore(node, ref_node) {\n    return this.node[utils.SHADY_PREFIX + 'insertBefore'](node, ref_node);\n  }\n\n  removeChild(node) {\n    return this.node[utils.SHADY_PREFIX + 'removeChild'](node);\n  }\n\n  replaceChild(node, ref_node) {\n    return this.node[utils.SHADY_PREFIX + 'replaceChild'](node, ref_node);\n  }\n\n  cloneNode(deep) {\n    return this.node[utils.SHADY_PREFIX + 'cloneNode'](deep);\n  }\n\n  getRootNode(options) {\n    return this.node[utils.SHADY_PREFIX + 'getRootNode'](options);\n  }\n\n  contains(node) {\n    return this.node[utils.SHADY_PREFIX + 'contains'](node);\n  }\n\n  dispatchEvent(event) {\n    return this.node[utils.SHADY_PREFIX + 'dispatchEvent'](event);\n  }\n\n  // element\n  setAttribute(name, value) {\n    this.node[utils.SHADY_PREFIX + 'setAttribute'](name, value);\n  }\n\n  // NOTE: not needed, just here for balance\n  getAttribute(name) {\n    return this.node[utils.NATIVE_PREFIX + 'getAttribute'](name);\n  }\n\n  // NOTE: not needed, just here for balance\n  hasAttribute(name) {\n    return this.node[utils.NATIVE_PREFIX + 'hasAttribute'](name);\n  }\n\n  removeAttribute(name) {\n    this.node[utils.SHADY_PREFIX + 'removeAttribute'](name);\n  }\n\n  attachShadow(options) {\n    return this.node[utils.SHADY_PREFIX + 'attachShadow'](options);\n  }\n\n  /** @return {!Node|undefined} */\n  get activeElement() {\n    if (utils.isShadyRoot(this.node) || this.node.nodeType === Node.DOCUMENT_NODE) {\n      const e = this.node[utils.SHADY_PREFIX + 'activeElement'];\n      return e;\n    }\n  }\n\n  /**\n   * Installed for compatibility with browsers (older Chrome/Safari) that do\n   * not have a configurable `activeElement` accessor. Enables noPatch and\n   * patch mode both to consistently use ShadyDOM.wrap(document)._activeElement.\n   * @override\n   * @return {!Node|undefined}\n   */\n  get _activeElement() {\n    return this.activeElement;\n  }\n\n  // NOTE: not needed, just here for balance\n  /** @override */\n  focus() {\n    this.node[utils.NATIVE_PREFIX + 'focus']();\n  }\n\n  blur() {\n    this.node[utils.SHADY_PREFIX + 'blur']();\n  }\n\n  // document\n  importNode(node, deep) {\n    if (this.node.nodeType === Node.DOCUMENT_NODE) {\n      return this.node[utils.SHADY_PREFIX + 'importNode'](node, deep);\n    }\n  }\n\n  getElementById(id) {\n    if (this.node.nodeType === Node.DOCUMENT_NODE) {\n      return this.node[utils.SHADY_PREFIX + 'getElementById'](id);\n    }\n  }\n\n  // query\n  querySelector(selector) {\n    return this.node[utils.SHADY_PREFIX + 'querySelector'](selector);\n  }\n\n  querySelectorAll(selector, useNative) {\n    return this.node[utils.SHADY_PREFIX + 'querySelectorAll'](selector, useNative);\n  }\n\n  // slot\n  assignedNodes(options) {\n    if (this.node.localName === 'slot') {\n      return this.node[utils.SHADY_PREFIX + 'assignedNodes'](options);\n    }\n  }\n\n  get host() {\n    if (utils.isShadyRoot(this.node)) {\n      return /** @type {!ShadowRoot} */(this.node).host;\n    }\n  }\n\n  get parentNode() {\n    return this.node[utils.SHADY_PREFIX + 'parentNode'];\n  }\n\n  get firstChild() {\n    return this.node[utils.SHADY_PREFIX + 'firstChild'];\n  }\n\n  get lastChild() {\n    return this.node[utils.SHADY_PREFIX + 'lastChild'];\n  }\n\n  get nextSibling() {\n    return this.node[utils.SHADY_PREFIX + 'nextSibling'];\n  }\n\n  get previousSibling() {\n    return this.node[utils.SHADY_PREFIX + 'previousSibling'];\n  }\n\n  get childNodes() {\n    return this.node[utils.SHADY_PREFIX + 'childNodes'];\n  }\n\n  get parentElement() {\n    return this.node[utils.SHADY_PREFIX + 'parentElement'];\n  }\n\n  get firstElementChild() {\n    return this.node[utils.SHADY_PREFIX + 'firstElementChild'];\n  }\n\n  get lastElementChild() {\n    return this.node[utils.SHADY_PREFIX + 'lastElementChild'];\n  }\n\n  get nextElementSibling() {\n    return this.node[utils.SHADY_PREFIX + 'nextElementSibling'];\n  }\n\n  get previousElementSibling() {\n    return this.node[utils.SHADY_PREFIX + 'previousElementSibling'];\n  }\n\n  get children() {\n    return this.node[utils.SHADY_PREFIX + 'children'];\n  }\n\n  get childElementCount() {\n    return this.node[utils.SHADY_PREFIX + 'childElementCount'];\n  }\n\n  get shadowRoot() {\n    return this.node[utils.SHADY_PREFIX + 'shadowRoot'];\n  }\n\n  get assignedSlot() {\n    return this.node[utils.SHADY_PREFIX + 'assignedSlot'];\n  }\n\n  get isConnected() {\n    return this.node[utils.SHADY_PREFIX + 'isConnected'];\n  }\n\n  get innerHTML() {\n    return this.node[utils.SHADY_PREFIX + 'innerHTML'];\n  }\n\n  set innerHTML(value) {\n    this.node[utils.SHADY_PREFIX + 'innerHTML'] = value;\n  }\n\n  get textContent() {\n    return this.node[utils.SHADY_PREFIX + 'textContent'];\n  }\n\n  set textContent(value) {\n    this.node[utils.SHADY_PREFIX + 'textContent'] = value;\n  }\n\n  get slot() {\n    return this.node[utils.SHADY_PREFIX + 'slot'];\n  }\n\n  set slot(value) {\n    this.node[utils.SHADY_PREFIX + 'slot'] = value;\n  }\n\n  get className() {\n    return this.node[utils.SHADY_PREFIX + 'className'];\n  }\n\n  set className(value) {\n    return this.node[utils.SHADY_PREFIX + 'className'] = value;\n  }\n\n}\n\neventPropertyNames.forEach(name => {\n  Object.defineProperty(Wrapper.prototype, name, {\n    /** @this {Wrapper} */\n    get() {\n      return this.node[utils.SHADY_PREFIX + name];\n    },\n    /** @this {Wrapper} */\n    set(value) {\n      this.node[utils.SHADY_PREFIX + name] = value;\n    },\n    configurable: true\n  });\n\n});\n\nexport {Wrapper};\n\nconst wrapperMap = new WeakMap();\n\nexport function wrap(obj) {\n  if (utils.isShadyRoot(obj) || obj instanceof Wrapper) {\n    return obj;\n  }\n  let wrapper = wrapperMap.get(obj)\n  if (!wrapper) {\n    wrapper = new Wrapper(obj);\n    wrapperMap.set(obj, wrapper);\n  }\n  return wrapper;\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {flush} from '../flush.js';\nimport {addEventListener, removeEventListener} from '../patch-events.js';\n\nexport const EventTargetPatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Node} */\n  dispatchEvent(event) {\n    flush();\n    return this[utils.NATIVE_PREFIX + 'dispatchEvent'](event);\n  },\n\n  addEventListener,\n\n  removeEventListener\n\n});","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {shadyDataForNode} from '../shady-data.js';\n\nexport const SlotablePatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Node} */\n  get assignedSlot() {\n    // Force any parent's shadowRoot to flush so that distribution occurs\n    // and this node has an assignedSlot.\n    const parent = this[utils.SHADY_PREFIX + 'parentNode'];\n    const ownerRoot = parent && parent[utils.SHADY_PREFIX + 'shadowRoot'];\n    if (ownerRoot) {\n      ownerRoot._render();\n    }\n    const nodeData = shadyDataForNode(this);\n    return nodeData && nodeData.assignedSlot || null;\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {scopeClassAttribute} from '../style-scoping.js';\nimport {shadyDataForNode} from '../shady-data.js';\nimport {attachShadow, ownerShadyRootForNode} from '../attach-shadow.js';\n\nconst doc = window.document;\n\n/**\n * Should be called whenever an attribute changes. If the `slot` attribute\n * changes, provokes rendering if necessary. If a `<slot>` element's `name`\n * attribute changes, updates the root's slot map and renders.\n * @param {Node} node\n * @param {string} name\n */\nfunction distributeAttributeChange(node, name) {\n  if (name === 'slot') {\n    const parent = node[utils.SHADY_PREFIX + 'parentNode'];\n    if (utils.hasShadowRootWithSlot(parent)) {\n      shadyDataForNode(parent).root._asyncRender();\n    }\n  } else if (node.localName === 'slot' && name === 'name') {\n    let root = ownerShadyRootForNode(node);\n    if (root) {\n      root._updateSlotName(node);\n      root._asyncRender();\n    }\n  }\n}\n\nexport const ElementPatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Element} */\n  get previousElementSibling() {\n    const nodeData = shadyDataForNode(this);\n    if (nodeData && nodeData.previousSibling !== undefined) {\n      let n = this[utils.SHADY_PREFIX + 'previousSibling'];\n      while (n && n.nodeType !== Node.ELEMENT_NODE) {\n        n = n[utils.SHADY_PREFIX + 'previousSibling'];\n      }\n      return n;\n    } else {\n      return this[utils.NATIVE_PREFIX + 'previousElementSibling'];\n    }\n  },\n\n  /** @this {Element} */\n  get nextElementSibling() {\n    const nodeData = shadyDataForNode(this);\n    if (nodeData && nodeData.nextSibling !== undefined) {\n      let n = this[utils.SHADY_PREFIX + 'nextSibling'];\n      while (n && n.nodeType !== Node.ELEMENT_NODE) {\n        n = n[utils.SHADY_PREFIX + 'nextSibling'];\n      }\n      return n;\n    } else {\n      return this[utils.NATIVE_PREFIX + 'nextElementSibling'];\n    }\n  },\n\n  /** @this {Element} */\n  get slot() {\n    return this.getAttribute('slot');\n  },\n\n  /** @this {Element} */\n  set slot(value) {\n    this[utils.SHADY_PREFIX + 'setAttribute']('slot', value);\n  },\n\n  // Note: Can be patched on element prototype on all browsers.\n  // Must be patched on instance on browsers that support native Shadow DOM\n  // but do not have builtin accessors (old Chrome).\n  /** @this {Element} */\n  get shadowRoot() {\n    const nodeData = shadyDataForNode(this);\n    return nodeData && nodeData.publicRoot || null;\n  },\n\n  /** @this {Element} */\n  get className() {\n    return this.getAttribute('class') || '';\n  },\n\n  /**\n   * @this {Element}\n   * @param {string} value\n   */\n  set className(value) {\n    this[utils.SHADY_PREFIX + 'setAttribute']('class', value);\n  },\n\n  /**\n   * @this {Element}\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttribute(attr, value) {\n    if (this.ownerDocument !== doc) {\n      this[utils.NATIVE_PREFIX + 'setAttribute'](attr, value);\n    } else if (!scopeClassAttribute(this, attr, value)) {\n      this[utils.NATIVE_PREFIX + 'setAttribute'](attr, value);\n      distributeAttributeChange(this, attr);\n    }\n  },\n\n  /**\n   * @this {Element}\n   * @param {string} attr\n   */\n  removeAttribute(attr) {\n    this[utils.NATIVE_PREFIX + 'removeAttribute'](attr);\n    distributeAttributeChange(this, attr);\n  },\n\n  /**\n   * @this {Element}\n   * @param {!{mode: string}} options\n   */\n  attachShadow(options) {\n    return attachShadow(this, options);\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {eventPropertyNames} from '../patch-events.js';\nimport {shadyDataForNode, ensureShadyDataForNode} from '../shady-data.js';\n\nexport const HTMLElementPatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {HTMLElement} */\n  blur() {\n    const nodeData = shadyDataForNode(this);\n    let root = nodeData && nodeData.root;\n    let shadowActive = root && root.activeElement;\n    if (shadowActive) {\n      shadowActive[utils.SHADY_PREFIX + 'blur']();\n    } else {\n      this[utils.NATIVE_PREFIX + 'blur']();\n    }\n  }\n\n});\n\neventPropertyNames.forEach(property => {\n  HTMLElementPatches[property] = {\n    /** @this {HTMLElement} */\n    set: function(fn) {\n      const shadyData = ensureShadyDataForNode(this);\n      const eventName = property.substring(2);\n      if (!shadyData.__onCallbackListeners) {\n        shadyData.__onCallbackListeners = {};\n      }\n      shadyData.__onCallbackListeners[property] && this.removeEventListener(eventName, shadyData.__onCallbackListeners[property]);\n      this[utils.SHADY_PREFIX + 'addEventListener'](eventName, fn);\n      shadyData.__onCallbackListeners[property] = fn;\n    },\n    /** @this {HTMLElement} */\n    get() {\n      const shadyData = shadyDataForNode(this);\n      return shadyData && shadyData.__onCallbackListeners && shadyData.__onCallbackListeners[property];\n    },\n    configurable: true\n  };\n});\n\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {shadyDataForNode} from '../shady-data.js';\nimport {addEventListener, removeEventListener} from '../patch-events.js';\n\nexport const SlotPatches = utils.getOwnPropertyDescriptors({\n\n  /**\n   * @this {HTMLSlotElement}\n   * @param {Object=} options\n   */\n  assignedNodes(options) {\n    if (this.localName === 'slot') {\n      // Force any containing shadowRoot to flush so that distribution occurs\n      // and this node has assignedNodes.\n      const root = this[utils.SHADY_PREFIX + 'getRootNode']();\n      if (root && utils.isShadyRoot(root)) {\n        root._render();\n      }\n      const nodeData = shadyDataForNode(this);\n      return nodeData ?\n        ((options && options.flatten ? nodeData.flattenedNodes :\n          nodeData.assignedNodes) || []) :\n        [];\n    }\n  },\n\n  /**\n   * @this {HTMLSlotElement}\n   * @param {string} type\n   * @param {Function} fn\n   * @param {Object|boolean=} optionsOrCapture\n   */\n  addEventListener(type, fn, optionsOrCapture) {\n    // NOTE, check if this is a `slot` because these patches are installed on\n    // Element where browsers don't have `<slot>`\n    if (this.localName !== 'slot' || type === 'slotchange') {\n      addEventListener.call(this, type, fn, optionsOrCapture);\n    } else {\n      if (typeof optionsOrCapture !== 'object') {\n        optionsOrCapture = {\n          capture: Boolean(optionsOrCapture)\n        }\n      }\n      const parent = this[utils.SHADY_PREFIX + 'parentNode'];\n      if (!parent) {\n        throw new Error('ShadyDOM cannot attach event to slot unless it has a `parentNode`');\n      }\n      optionsOrCapture.__shadyTarget = this;\n      parent[utils.SHADY_PREFIX + 'addEventListener'](type, fn, optionsOrCapture);\n    }\n  },\n\n  /**\n   * @this {HTMLSlotElement}\n   * @param {string} type\n   * @param {Function} fn\n   * @param {Object|boolean=} optionsOrCapture\n   */\n  removeEventListener(type, fn, optionsOrCapture) {\n    // NOTE, check if this is a `slot` because these patches are installed on\n    // Element where browsers don't have `<slot>`\n    if (this.localName !== 'slot' || type === 'slotchange') {\n      removeEventListener.call(this, type, fn, optionsOrCapture);\n    } else {\n      if (typeof optionsOrCapture !== 'object') {\n        optionsOrCapture = {\n          capture: Boolean(optionsOrCapture)\n        }\n      }\n      const parent = this[utils.SHADY_PREFIX + 'parentNode'];\n      if (!parent) {\n        throw new Error('ShadyDOM cannot attach event to slot unless it has a `parentNode`');\n      }\n      optionsOrCapture.__shadyTarget = this;\n      parent[utils.SHADY_PREFIX + 'removeEventListener'](type, fn, optionsOrCapture);\n    }\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\n\nconst doc = window.document;\n\nexport const DocumentPatches = utils.getOwnPropertyDescriptors({\n\n  // note: Though not technically correct, we fast path `importNode`\n  // when called on a node not owned by the main document.\n  // This allows, for example, elements that cannot\n  // contain custom elements and are therefore not likely to contain shadowRoots\n  // to cloned natively. This is a fairly significant performance win.\n  /**\n   * @this {Document}\n   * @param {Node} node\n   * @param {boolean} deep\n   */\n  importNode(node, deep) {\n    // A template element normally has no children with shadowRoots, so make\n    // sure we always make a deep copy to correctly construct the template.content\n    if (node.ownerDocument !== doc || node.localName === 'template') {\n      return this[utils.NATIVE_PREFIX + 'importNode'](node, deep);\n    }\n    let n = this[utils.NATIVE_PREFIX + 'importNode'](node, false);\n    if (deep) {\n      for (let c=node[utils.SHADY_PREFIX + 'firstChild'], nc; c; c = c[utils.SHADY_PREFIX + 'nextSibling']) {\n        nc = this[utils.SHADY_PREFIX + 'importNode'](c, true);\n        n[utils.SHADY_PREFIX + 'appendChild'](nc);\n      }\n    }\n    return n;\n  }\n\n});","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport * as utils from '../utils.js';\nimport {addEventListener, removeEventListener} from '../patch-events.js';\n\nexport const WindowPatches = utils.getOwnPropertyDescriptors({\n\n  // NOTE: ensure these methods are bound to `window` so that `this` is correct\n  // when called directly from global context without a receiver; e.g.\n  // `addEventListener(...)`.\n  addEventListener: addEventListener.bind(window),\n\n  removeEventListener: removeEventListener.bind(window)\n\n});","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {EventTargetPatches} from './patches/EventTarget.js';\nimport {NodePatches} from './patches/Node.js';\nimport {SlotablePatches} from './patches/Slotable.js';\nimport {ParentNodePatches, ParentNodeDocumentOrFragmentPatches} from './patches/ParentNode.js';\nimport {ElementPatches} from './patches/Element.js';\nimport {ElementOrShadowRootPatches} from './patches/ElementOrShadowRoot.js';\nimport {HTMLElementPatches} from './patches/HTMLElement.js';\nimport {SlotPatches} from './patches/Slot.js';\nimport {DocumentOrFragmentPatches} from './patches/DocumentOrFragment.js';\nimport {DocumentOrShadowRootPatches} from './patches/DocumentOrShadowRoot.js';\nimport {DocumentPatches} from './patches/Document.js';\nimport {WindowPatches} from './patches/Window.js';\n\n// Some browsers (IE/Edge) have non-standard HTMLElement accessors.\nconst NonStandardHTMLElement = {};\n\nif (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'parentElement')) {\n  NonStandardHTMLElement.parentElement = NodePatches.parentElement;\n}\n\nif (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'contains')) {\n  NonStandardHTMLElement.contains = NodePatches.contains;\n}\n\nif (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'children')) {\n  NonStandardHTMLElement.children = ParentNodePatches.children;\n}\n\nif (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'innerHTML')) {\n  NonStandardHTMLElement.innerHTML = ElementOrShadowRootPatches.innerHTML;\n}\n\nif (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'className')) {\n  NonStandardHTMLElement.className = ElementPatches.className;\n}\n\n// Avoid patching `innerHTML` if it does not exist on Element (IE)\n// and we can patch accessors (hasDescriptors).\nconst ElementShouldHaveInnerHTML = !utils.settings.hasDescriptors || 'innerHTML' in Element.prototype;\n\n// setup patching\nconst patchMap = {\n  EventTarget: [EventTargetPatches],\n  Node: [NodePatches, !window.EventTarget ? EventTargetPatches : null],\n  Text: [SlotablePatches],\n  Element: [ElementPatches, ParentNodePatches, SlotablePatches,\n    ElementShouldHaveInnerHTML ? ElementOrShadowRootPatches : null,\n    !window.HTMLSlotElement ? SlotPatches : null],\n  HTMLElement: [HTMLElementPatches, NonStandardHTMLElement],\n  HTMLSlotElement: [SlotPatches],\n  DocumentFragment: [ParentNodeDocumentOrFragmentPatches, DocumentOrFragmentPatches],\n  Document: [DocumentPatches, ParentNodeDocumentOrFragmentPatches, DocumentOrFragmentPatches, DocumentOrShadowRootPatches],\n  Window: [WindowPatches]\n}\n\nconst getPatchPrototype = (name) => window[name] && window[name].prototype;\n\n// Note, must avoid patching accessors on prototypes when descriptors are not correct\n// because the CustomElements polyfill checks if these exist before patching instances.\n// CustomElements polyfill *only* cares about these accessors.\nconst disallowedNativePatches = utils.settings.hasDescriptors ? null : ['innerHTML', 'textContent'];\n\n/** @param {string=} prefix */\nexport const applyPatches = (prefix) => {\n  const disallowed = prefix ? null : disallowedNativePatches;\n  for (let p in patchMap) {\n    const proto = getPatchPrototype(p);\n    patchMap[p].forEach(patch => proto && patch &&\n        utils.patchProperties(proto, patch, prefix, disallowed));\n  }\n}\n\nexport const addShadyPrefixedProperties = () => {\n  // perform shady patches\n  applyPatches(utils.SHADY_PREFIX);\n\n  // install `_activeElement` because some browsers (older Chrome/Safari) do not have\n  // a 'configurable' `activeElement` accesssor.\n  const descriptor = DocumentOrShadowRootPatches.activeElement;\n  Object.defineProperty(document, '_activeElement', descriptor);\n\n  // On Window, we're patching `addEventListener` which is a weird auto-bound\n  // property that is not directly on the Window prototype.\n  utils.patchProperties(Window.prototype, WindowPatches, utils.SHADY_PREFIX);\n};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Patches elements that interacts with ShadyDOM\n * such that tree traversal and mutation apis act like they would under\n * ShadowDOM.\n *\n * This import enables seemless interaction with ShadyDOM powered\n * custom elements, enabling better interoperation with 3rd party code,\n * libraries, and frameworks that use DOM tree manipulation apis.\n */\n\nimport * as utils from './utils.js';\nimport {flush, enqueue} from './flush.js';\nimport {observeChildren, unobserveChildren, filterMutations} from './observe-changes.js';\nimport {addNativePrefixedProperties, nativeMethods, nativeTree} from './patch-native.js';\nimport {patchInsideElementAccessors, patchOutsideElementAccessors} from './patch-instances.js';\nimport {patchEvents, patchClick, composedPath} from './patch-events.js';\nimport {ShadyRoot} from './attach-shadow.js';\nimport {wrap, Wrapper} from './wrapper.js';\nimport {addShadyPrefixedProperties, applyPatches} from './patch-prototypes.js';\n\n\nif (utils.settings.inUse) {\n\n  let ShadyDOM = {\n    // TODO(sorvell): remove when Polymer does not depend on this.\n    'inUse': utils.settings.inUse,\n    // NOTE: old browsers without prototype accessors (very old Chrome\n    // and Safari) need manually patched accessors to properly set\n    // `innerHTML` and `textContent` when an element is:\n    // (1) inside a shadowRoot\n    // (2) does not have special (slot) children itself\n    // (3) and setting the property needs to provoke distribution (because\n    // a nested slot is added/removed)\n    'patch': (node) => {\n      patchInsideElementAccessors(node);\n      patchOutsideElementAccessors(node);\n      return node;\n    },\n    'isShadyRoot': utils.isShadyRoot,\n    'enqueue': enqueue,\n    'flush': flush,\n    'flushInitial': (root) => {\n      root._flushInitial();\n    },\n    'settings': utils.settings,\n    'filterMutations': filterMutations,\n    'observeChildren': observeChildren,\n    'unobserveChildren': unobserveChildren,\n    // Set to true to defer native custom elements connection until the\n    // document has fully parsed. This enables custom elements that create\n    // shadowRoots to be defined while the document is loading. Elements\n    // customized as they are created by the parser will successfully\n    // render with this flag on.\n    'deferConnectionCallbacks': utils.settings['deferConnectionCallbacks'],\n    // Set to true to speed up the polyfill slightly at the cost of correctness\n    // * does not patch querySelector/All on Document or DocumentFragment\n    // * does not wrap connected/disconnected callbacks to de-dup these\n    // when using native customElements\n    // * does not wait to process children of elements with shadowRoots\n    // meaning shadowRoots should not be created while an element is parsing\n    // (e.g. if a custom element that creates a shadowRoot is defined before\n    // a candidate element in the document below it.\n    'preferPerformance': utils.settings['preferPerformance'],\n    // Integration point with ShadyCSS to disable styling MutationObserver,\n    // as ShadyDOM will now handle dynamic scoping.\n    'handlesDynamicScoping': true,\n    'wrap': utils.settings.noPatch ? wrap : (n) => n,\n    'Wrapper': Wrapper,\n    'composedPath': composedPath,\n    // Set to true to avoid patching regular platform property names. When set,\n    // Shadow DOM compatible behavior is only available when accessing DOM\n    // API using `ShadyDOM.wrap`, e.g. `ShadyDOM.wrap(element).shadowRoot`.\n    // This setting provides a small performance boost, but requires all DOM API\n    // access that requires Shadow DOM behavior to be proxied via `ShadyDOM.wrap`.\n    'noPatch': utils.settings.noPatch,\n    'nativeMethods': nativeMethods,\n    'nativeTree': nativeTree\n  };\n\n  window['ShadyDOM'] = ShadyDOM;\n\n  // Modifies native prototypes for Node, Element, etc. to\n  // make native platform behavior available at prefixed names, e.g.\n  // `utils.NATIVE_PREFIX + 'firstChild'` or `__shady_native_firstChild`.\n  // This allows the standard names to be safely patched while retaining the\n  // ability for native behavior to be used. This polyfill manipulates DOM\n  // by using this saved native behavior.\n  // Note, some browsers do not have proper element descriptors for\n  // accessors; in this case, native behavior for these accessors is simulated\n  // via a TreeWalker.\n  addNativePrefixedProperties();\n\n  // Modifies native prototypes for Node, Element, etc. to make ShadowDOM\n  // behavior available at prefixed names, e.g.\n  // `utils.SHADY_PREFIX + 'firstChild` or `__shady_firstChild`. This is done\n  // so this polyfill can perform Shadow DOM style DOM manipulation.\n  // Because patching normal platform property names is optional, these prefixed\n  // names are used internally.\n  addShadyPrefixedProperties();\n\n  // Modifies native prototypes for Node, Element, etc. to patch\n  // regular platform property names to have Shadow DOM compatible API behavior.\n  // This applies the utils.SHADY_PREFIX behavior to normal names. For example,\n  // if `noPatch` is not set, then `el.__shady_firstChild` is equivalent to\n  // `el.firstChild`.\n  // NOTE, on older browsers (old Chrome/Safari) native accessors cannot be\n  // patched on prototypes (e.g. Node.prototype.firstChild cannot be modified).\n  // On these browsers, instance level patching is performed where needed; this\n  // instance patching is only done when `noPatch` is *not* set.\n  if (!utils.settings.noPatch) {\n    applyPatches();\n    // Patch click event behavior only if we're patching\n    patchClick()\n  }\n\n  // For simplicity, patch events unconditionally.\n  // Patches the event system to have Shadow DOM compatible behavior (e.g.\n  // event retargeting). When `noPatch` is set, retargeting is only available\n  // when adding event listeners and dispatching events via `ShadyDOM.wrap`\n  // (e.g. `ShadyDOM.wrap(element).addEventListener(...)`).\n  patchEvents();\n\n  window.ShadowRoot = /** @type {function(new:ShadowRoot)} */(ShadyRoot);\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n/** @unrestricted */\nclass StyleNode {\n  constructor() {\n    /** @type {number} */\n    this['start'] = 0;\n    /** @type {number} */\n    this['end'] = 0;\n    /** @type {StyleNode} */\n    this['previous'] = null;\n    /** @type {StyleNode} */\n    this['parent'] = null;\n    /** @type {Array<StyleNode>} */\n    this['rules'] = null;\n    /** @type {string} */\n    this['parsedCssText'] = '';\n    /** @type {string} */\n    this['cssText'] = '';\n    /** @type {boolean} */\n    this['atRule'] = false;\n    /** @type {number} */\n    this['type'] = 0;\n    /** @type {string} */\n    this['keyframesName'] = '';\n    /** @type {string} */\n    this['selector'] = '';\n    /** @type {string} */\n    this['parsedSelector'] = '';\n  }\n}\n\nexport {StyleNode}\n\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n  let root = new StyleNode();\n  root['start'] = 0;\n  root['end'] = text.length\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n['rules']) {\n        n['rules'] = [];\n      }\n      let p = n;\n      let previous = p['rules'][p['rules'].length - 1] || null;\n      n = new StyleNode();\n      n['start'] = i + 1;\n      n['parent'] = p;\n      n['previous'] = previous;\n      p['rules'].push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n['end'] = i + 1;\n      n = n['parent'] || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n  let t = text.substring(node['start'], node['end'] - 1);\n  node['parsedCssText'] = node['cssText'] = t.trim();\n  if (node['parent']) {\n    let ss = node['previous'] ? node['previous']['end'] : node['parent']['start'];\n    t = text.substring(ss, node['start'] - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node['parsedSelector'] = node['selector'] = t.trim();\n    node['atRule'] = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node['atRule']) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node['type'] = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node['type'] = types.KEYFRAMES_RULE;\n        node['keyframesName'] =\n          node['selector'].split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node['type'] = types.MIXIN_RULE;\n      } else {\n        node['type'] = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node['rules'];\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n/**\n * stringify parsed css.\n * @param {StyleNode} node\n * @param {boolean=} preserveProperties\n * @param {string=} text\n * @return {string}\n */\nexport function stringify(node, preserveProperties, text = '') {\n  // calc rule cssText\n  let cssText = '';\n  if (node['cssText'] || node['rules']) {\n    let r$ = node['rules'];\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node['cssText'] :\n        removeCustomProps(node['cssText']);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node['selector']) {\n      text += node['selector'] + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node['selector']) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\n/**\n * @param {Array<StyleNode>} rules\n * @return {boolean}\n */\nfunction _hasMixinRules(rules) {\n  let r = rules[0];\n  return Boolean(r) && Boolean(r['selector']) && r['selector'].indexOf(VAR_START) === 0;\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\n/** @enum {number} */\nexport const types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nconst OPEN_BRACE = '{';\nconst CLOSE_BRACE = '}';\n\n// helper regexp's\nconst RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nconst VAR_START = '--';\nconst MEDIA_START = '@media';\nconst AT_START = '@';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport const nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\nlet nativeCssVariables_;\n\n/**\n * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings\n */\nfunction calcCssVariables(settings) {\n  if (settings && settings['shimcssproperties']) {\n    nativeCssVariables_ = false;\n  } else {\n    // chrome 49 has semi-working css vars, check if box-shadow works\n    // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\n    // However, shim css custom properties are only supported with ShadyDOM enabled,\n    // so fall back on native if we do not detect ShadyDOM\n    // Edge 15: custom properties used in ::before and ::after will also be used in the parent element\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12414257/\n    nativeCssVariables_ = nativeShadow || Boolean(!navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/) &&\n      window.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n  }\n}\n\n/** @type {string | undefined} */\nexport let cssBuild;\nif (window.ShadyCSS && window.ShadyCSS.cssBuild !== undefined) {\n  cssBuild = window.ShadyCSS.cssBuild;\n}\n\n/** @type {boolean} */\nexport const disableRuntime = Boolean(window.ShadyCSS && window.ShadyCSS.disableRuntime);\n\nif (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) {\n  nativeCssVariables_ = window.ShadyCSS.nativeCss;\n} else if (window.ShadyCSS) {\n  calcCssVariables(window.ShadyCSS);\n  // reset window variable to let ShadyCSS API take its place\n  window.ShadyCSS = undefined;\n} else {\n  calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']);\n}\n\n// Hack for type error under new type inference which doesn't like that\n// nativeCssVariables is updated in a function and assigns the type\n// `function(): ?` instead of `boolean`.\nexport const nativeCssVariables = /** @type {boolean} */(nativeCssVariables_);","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gi;\nexport const MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nexport const VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nexport const ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nexport const MEDIA_MATCH = /@media\\s(.*)/;\nexport const IS_VAR = /^--/;\nexport const BRACKETED = /\\{[^}]*\\}/g;\nexport const HOST_PREFIX = '(?:^|[^.#[:])';\nexport const HOST_SUFFIX = '($|[.:[\\\\s>+~])';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {!Set<string>} */\nconst styleTextSet = new Set();\n\nexport const scopingAttribute = 'shady-unscoped';\n\n/**\n * Add a specifically-marked style to the document directly, and only one copy of that style.\n *\n * @param {!HTMLStyleElement} style\n * @return {undefined}\n */\nexport function processUnscopedStyle(style) {\n  const text = style.textContent;\n  if (!styleTextSet.has(text)) {\n    styleTextSet.add(text);\n    const newStyle = style.cloneNode(true);\n    document.head.appendChild(newStyle);\n  }\n}\n\n/**\n * Check if a style is supposed to be unscoped\n * @param {!HTMLStyleElement} style\n * @return {boolean} true if the style has the unscoping attribute\n */\nexport function isUnscopedStyle(style) {\n  return style.hasAttribute(scopingAttribute);\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables, cssBuild} from './style-settings.js';\nimport {parse, stringify, types, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {MEDIA_MATCH} from './common-regex.js';\nimport {processUnscopedStyle, isUnscopedStyle} from './unscoped-style-handler.js';\n\n/**\n * @param {string|StyleNode} rules\n * @param {function(StyleNode)=} callback\n * @return {string}\n */\nexport function toCssText (rules, callback) {\n  if (!rules) {\n    return '';\n  }\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @return {StyleNode}\n */\nexport function rulesForStyle(style) {\n  if (!style['__cssRules'] && style.textContent) {\n    style['__cssRules'] = parse(style.textContent);\n  }\n  return style['__cssRules'] || null;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\n/**\n * @param {StyleNode} rule\n * @return {boolean}\n */\nexport function isKeyframesSelector(rule) {\n  return Boolean(rule['parent']) &&\n  rule['parent']['type'] === types.KEYFRAMES_RULE;\n}\n\n/**\n * @param {StyleNode} node\n * @param {Function=} styleRuleCallback\n * @param {Function=} keyframesRuleCallback\n * @param {boolean=} onlyActiveRules\n */\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  let type = node['type'];\n  if (onlyActiveRules) {\n    if (type === types.MEDIA_RULE) {\n      let matchMedia = node['selector'].match(MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node['rules'];\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @param {Node} target\n * @param {Node} contextNode\n * @return {HTMLStyleElement}\n */\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  applyStyle(style, target, contextNode);\n  return style;\n}\n\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @return {HTMLStyleElement}\n */\nexport function createScopeStyle(cssText, moniker) {\n  let style = /** @type {HTMLStyleElement} */(document.createElement('style'));\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\n/**\n * Track the position of the last added style for placing placeholders\n * @type {Node}\n */\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\n/**\n * @param {string} moniker\n * @return {!Comment}\n */\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode['nextSibling'] : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @param {?Node} target\n * @param {?Node} contextNode\n */\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n    target.firstChild;\n  target.insertBefore(style, after);\n  if (!lastHeadApplyNode) {\n    lastHeadApplyNode = style;\n  } else {\n    // only update lastHeadApplyNode if the new style is inserted after the old lastHeadApplyNode\n    let position = style.compareDocumentPosition(lastHeadApplyNode);\n    if (position === Node.DOCUMENT_POSITION_PRECEDING) {\n      lastHeadApplyNode = style;\n    }\n  }\n}\n\n/**\n * @param {string} buildType\n * @return {boolean}\n */\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n/**\n * Walk from text[start] matching parens and\n * returns position of the outer end paren\n * @param {string} text\n * @param {number} start\n * @return {number}\n */\nexport function findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * @param {string} str\n * @param {function(string, string, string, string)} callback\n */\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\n/**\n * @param {Element} element\n * @param {string} value\n */\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (nativeShadow) {\n    element.setAttribute('class', value);\n  } else {\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(element, 'class', value);\n  }\n}\n\n/**\n * @type {function(*):*}\n */\nexport const wrap = window['ShadyDOM'] && window['ShadyDOM']['wrap'] || ((node) => node);\n\n/**\n * @param {Element | {is: string, extends: string}} element\n * @return {{is: string, typeExtension: string}}\n */\nexport function getIsExtends(element) {\n  let localName = element['localName'];\n  let is = '', typeExtension = '';\n  /*\n  NOTE: technically, this can be wrong for certain svg elements\n  with `-` in the name like `<font-face>`\n  */\n  if (localName) {\n    if (localName.indexOf('-') > -1) {\n      is = localName;\n    } else {\n      typeExtension = localName;\n      is = (element.getAttribute && element.getAttribute('is')) || '';\n    }\n  } else {\n    is = /** @type {?} */(element).is;\n    typeExtension = /** @type {?} */(element).extends;\n  }\n  return {is, typeExtension};\n}\n\n/**\n * @param {Element|DocumentFragment} element\n * @return {string}\n */\nexport function gatherStyleText(element) {\n  /** @type {!Array<string>} */\n  const styleTextParts = [];\n  const styles = /** @type {!NodeList<!HTMLStyleElement>} */(element.querySelectorAll('style'));\n  for (let i = 0; i < styles.length; i++) {\n    const style = styles[i];\n    if (isUnscopedStyle(style)) {\n      if (!nativeShadow) {\n        processUnscopedStyle(style);\n        style.parentNode.removeChild(style);\n      }\n    } else {\n      styleTextParts.push(style.textContent);\n      style.parentNode.removeChild(style);\n    }\n  }\n  return styleTextParts.join('').trim();\n}\n\n/**\n * Split a selector separated by commas into an array in a smart way\n * @param {string} selector\n * @return {!Array<string>}\n */\nexport function splitSelectorList(selector) {\n  const parts = [];\n  let part = '';\n  for (let i = 0; i >= 0 && i < selector.length; i++) {\n    // A selector with parentheses will be one complete part\n    if (selector[i] === '(') {\n      // find the matching paren\n      const end = findMatchingParen(selector, i);\n      // push the paren block into the part\n      part += selector.slice(i, end + 1);\n      // move the index to after the paren block\n      i = end;\n    } else if (selector[i] === ',') {\n      parts.push(part);\n      part = '';\n    } else {\n      part += selector[i];\n    }\n  }\n  // catch any pieces after the last comma\n  if (part) {\n    parts.push(part);\n  }\n  return parts;\n}\n\nconst CSS_BUILD_ATTR = 'css-build';\n\n/**\n * Return the polymer-css-build \"build type\" applied to this element\n *\n * @param {!HTMLElement} element\n * @return {string} Can be \"\", \"shady\", or \"shadow\"\n */\nexport function getCssBuild(element) {\n  if (cssBuild !== undefined) {\n    return /** @type {string} */(cssBuild);\n  }\n  if (element.__cssBuild === undefined) {\n    // try attribute first, as it is the common case\n    const attrValue = element.getAttribute(CSS_BUILD_ATTR);\n    if (attrValue) {\n      element.__cssBuild = attrValue;\n    } else {\n      const buildComment = getBuildComment(element);\n      if (buildComment !== '') {\n        // remove build comment so it is not needlessly copied into every element instance\n        removeBuildComment(element);\n      }\n      element.__cssBuild = buildComment;\n    }\n  }\n  return element.__cssBuild || '';\n}\n\n/**\n * Check if the given element, either a <template> or <style>, has been processed\n * by polymer-css-build.\n *\n * If so, then we can make a number of optimizations:\n * - polymer-css-build will decompose mixins into individual CSS Custom Properties,\n * so the ApplyShim can be skipped entirely.\n * - Under native ShadowDOM, the style text can just be copied into each instance\n * without modification\n * - If the build is \"shady\" and ShadyDOM is in use, the styling does not need\n * scoping beyond the shimming of CSS Custom Properties\n *\n * @param {!HTMLElement} element\n * @return {boolean}\n */\nexport function elementHasBuiltCss(element) {\n  return getCssBuild(element) !== '';\n}\n\n/**\n * For templates made with tagged template literals, polymer-css-build will\n * insert a comment of the form `<!--css-build:shadow-->`\n *\n * @param {!HTMLElement} element\n * @return {string}\n */\nexport function getBuildComment(element) {\n  const buildComment = element.localName === 'template' ?\n      /** @type {!HTMLTemplateElement} */ (element).content.firstChild :\n      element.firstChild;\n  if (buildComment instanceof Comment) {\n    const commentParts = buildComment.textContent.trim().split(':');\n    if (commentParts[0] === CSS_BUILD_ATTR) {\n      return commentParts[1];\n    }\n  }\n  return '';\n}\n\n/**\n * Check if the css build status is optimal, and do no unneeded work.\n *\n * @param {string=} cssBuild CSS build status\n * @return {boolean} css build is optimal or not\n */\nexport function isOptimalCssBuild(cssBuild = '') {\n  // CSS custom property shim always requires work\n  if (cssBuild === '' || !nativeCssVariables) {\n    return false;\n  }\n  return nativeShadow ? cssBuild === 'shadow' : cssBuild === 'shady';\n}\n\n/**\n * @param {!HTMLElement} element\n */\nfunction removeBuildComment(element) {\n  const buildComment = element.localName === 'template' ?\n      /** @type {!HTMLTemplateElement} */ (element).content.firstChild :\n      element.firstChild;\n  buildComment.parentNode.removeChild(buildComment);\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport * as StyleUtil from './style-util.js';\nimport {nativeShadow} from './style-settings.js';\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  /**\n   * Given a node and scope name, add a scoping class to each node\n   * in the tree. This facilitates transforming css into scoped rules.\n   * @param {!Node} node\n   * @param {string} scope\n   * @param {boolean=} shouldRemoveScope\n   * @deprecated\n   */\n  dom(node, scope, shouldRemoveScope) {\n    const fn = (node) => {\n      this.element(node, scope || '', shouldRemoveScope);\n    };\n    this._transformDom(node, fn);\n  }\n\n  /**\n   * Given a node and scope name, add a scoping class to each node in the tree.\n   * @param {!Node} node\n   * @param {string} scope\n   */\n  domAddScope(node, scope) {\n    const fn = (node) => {\n      this.element(node, scope || '');\n    };\n    this._transformDom(node, fn);\n  }\n\n  /**\n   * @param {!Node} startNode\n   * @param {!function(!Node)} transformer\n   */\n  _transformDom(startNode, transformer) {\n    if (startNode.nodeType === Node.ELEMENT_NODE) {\n      transformer(startNode)\n    }\n    let c$;\n    if (startNode.localName === 'template') {\n      const template = /** @type {!HTMLTemplateElement} */ (startNode);\n      // In case the template is in svg context, fall back to the node\n      // since it won't be an HTMLTemplateElement with a .content property\n      c$ = (template.content || template._content || template).childNodes;\n    } else {\n      c$ = /** @type {!ParentNode} */ (startNode).children ||\n          startNode.childNodes;\n    }\n    if (c$) {\n      for (let i = 0; i < c$.length; i++) {\n        this._transformDom(c$[i], transformer);\n      }\n    }\n  }\n\n  /**\n   * @param {?} element\n   * @param {?} scope\n   * @param {?=} shouldRemoveScope\n   */\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  /**\n   * Given a node, replace the scoping class to each subnode in the tree.\n   * @param {!Node} node\n   * @param {string} oldScope\n   * @param {string} newScope\n   */\n  domReplaceScope(node, oldScope, newScope) {\n    const fn = (node) => {\n      this.element(node, oldScope, true);\n      this.element(node, newScope);\n    };\n    this._transformDom(node, fn);\n  }\n  /**\n   * Given a node, remove the scoping class to each subnode in the tree.\n   * @param {!Node} node\n   * @param {string} oldScope\n   */\n  domRemoveScope(node, oldScope) {\n    const fn = (node) => {\n      this.element(node, oldScope || '', true);\n    };\n    this._transformDom(node, fn);\n  }\n\n  /**\n   * @param {?} element\n   * @param {?} styleRules\n   * @param {?=} callback\n   * @param {string=} cssBuild\n   * @param {string=} cssText\n   * @return {string}\n   */\n  elementStyles(element, styleRules, callback, cssBuild = '', cssText = '') {\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    if (cssText === '') {\n      if (nativeShadow || cssBuild === 'shady') {\n        cssText = StyleUtil.toCssText(styleRules, callback);\n      } else {\n        let {is, typeExtension} = StyleUtil.getIsExtends(element);\n        cssText = this.css(styleRules, is, typeExtension, callback) + '\\n\\n';\n      }\n    }\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? `[is=${scope}]` : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  /**\n   * transforms a css rule to a scoped rule.\n   *\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule['selector'] = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = StyleUtil.splitSelectorList(rule['selector']);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.filter((part) => Boolean(part)).join(COMPLEX_SELECTOR_SEP);\n  }\n\n  /**\n   * @param {string} selector\n   * @return {string}\n   */\n  _twiddleNthPlus(selector) {\n    return selector.replace(NTH, (m, type, inside) => {\n      if (inside.indexOf('+') > -1) {\n        inside = inside.replace(/\\+/g, '___');\n      } else if (inside.indexOf('___') > -1) {\n        inside = inside.replace(/___/g, '+');\n      }\n      return `:${type}(${inside})`;\n    });\n  }\n\n  /**\n   * Preserve `:matches()` selectors by replacing them with MATCHES_REPLACMENT\n   * and returning an array of `:matches()` selectors.\n   * Use `_replacesMatchesPseudo` to replace the `:matches()` parts\n   *\n   * @param {string} selector\n   * @return {{selector: string, matches: !Array<string>}}\n   */\n  _preserveMatchesPseudo(selector) {\n    /** @type {!Array<string>} */\n    const matches = [];\n    let match;\n    while ((match = selector.match(MATCHES))) {\n      const start = match.index;\n      const end = StyleUtil.findMatchingParen(selector, start);\n      if (end === -1) {\n        throw new Error(`${match.input} selector missing ')'`)\n      }\n      const part = selector.slice(start, end + 1);\n      selector = selector.replace(part, MATCHES_REPLACEMENT);\n      matches.push(part);\n    }\n    return {selector, matches};\n  }\n\n  /**\n   * Replace MATCHES_REPLACMENT character with the given set of `:matches()`\n   * selectors.\n   *\n   * @param {string} selector\n   * @param {!Array<string>} matches\n   * @return {string}\n   */\n  _replaceMatchesPseudo(selector, matches) {\n    const parts = selector.split(MATCHES_REPLACEMENT);\n    return matches.reduce((acc, cur, idx) => acc + cur + parts[idx + 1], parts[0]);\n  }\n\n/**\n * @param {string} selector\n * @param {string} scope\n * @param {string=} hostScope\n */\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    let isNth = NTH.test(selector);\n    if (isNth) {\n      selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`)\n      selector = this._twiddleNthPlus(selector);\n    }\n    // Preserve selectors like `:-webkit-any` so that SIMPLE_SELECTOR_SEP does\n    // not get confused by spaces inside the pseudo selector\n    const isMatches = MATCHES.test(selector);\n    /** @type {!Array<string>} */\n    let matches;\n    if (isMatches) {\n      ({selector, matches} = this._preserveMatchesPseudo(selector));\n    }\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    // replace `:matches()` selectors\n    if (isMatches) {\n      selector = this._replaceMatchesPseudo(selector, matches);\n    }\n    if (isNth) {\n      selector = this._twiddleNthPlus(selector);\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir, after) =>\n      `[dir=\"${dir}\"] ${before}${after}, ${before}[dir=\"${dir}\"]${after}`);\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    const attributes = selector.split(/(\\[.+?\\])/);\n\n    const output = [];\n    for (let i = 0; i < attributes.length; i++) {\n      // Do not attempt to transform any attribute selector content\n      if ((i % 2) === 1) {\n        output.push(attributes[i]);\n      } else {\n        const part = attributes[i];\n\n        if (!(part === '' && i === attributes.length - 1)) {\n          let p$ = part.split(PSEUDO_PREFIX);\n          p$[0] += scope;\n          output.push(p$.join(PSEUDO_PREFIX));\n        }\n      }\n    }\n\n    return output.join('');\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule['selector'] = rule['parsedSelector'];\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  normalizeRootSelector(rule) {\n    if (rule['selector'] === ROOT) {\n      rule['selector'] = 'html';\n    }\n  }\n\n/**\n * @param {string} selector\n */\n  _transformDocumentSelector(selector) {\n    if (selector.match(HOST)) {\n      // remove ':host' type selectors in document rules\n      return '';\n    } else if (selector.match(SLOTTED)) {\n      return this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR)\n    } else {\n      return this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n    }\n  }\n}\n\nconst NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nconst SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nconst COMPLEX_SELECTOR_SEP = ',';\nconst SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=[])+)/g;\nconst SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nconst HOST = ':host';\nconst ROOT = ':root';\nconst SLOTTED = '::slotted';\nconst SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nconst HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nconst SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nconst DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)(.*)/;\nconst CSS_CLASS_PREFIX = '.';\nconst PSEUDO_PREFIX = ':';\nconst CLASS = 'class';\nconst SELECTOR_NO_MATCH = 'should_not_match';\nconst MATCHES = /:(?:matches|any|-(?:webkit|moz)-any)/;\nconst MATCHES_REPLACEMENT = '\\u{e000}';\n\nexport default new StyleTransformer()\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/** @const {string} */\nconst infoKey = '__styleInfo';\n\nexport default class StyleInfo {\n  /**\n   * @param {Element} node\n   * @return {StyleInfo}\n   */\n  static get(node) {\n    if (node) {\n      return node[infoKey];\n    } else {\n      return null;\n    }\n  }\n  /**\n   * @param {!Element} node\n   * @param {StyleInfo} styleInfo\n   * @return {StyleInfo}\n   */\n  static set(node, styleInfo) {\n    node[infoKey] = styleInfo;\n    return styleInfo;\n  }\n  /**\n   * @param {StyleNode} ast\n   * @param {Node=} placeholder\n   * @param {Array<string>=} ownStylePropertyNames\n   * @param {string=} elementName\n   * @param {string=} typeExtension\n   * @param {string=} cssBuild\n   */\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    /** @type {StyleNode} */\n    this.styleRules = ast || null;\n    /** @type {Node} */\n    this.placeholder = placeholder || null;\n    /** @type {!Array<string>} */\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    /** @type {Object} */\n    this.overrideStyleProperties = null;\n    /** @type {string} */\n    this.elementName = elementName || '';\n    /** @type {string} */\n    this.cssBuild = cssBuild || '';\n    /** @type {string} */\n    this.typeExtension = typeExtension || '';\n    /** @type {Object<string, string>} */\n    this.styleProperties = null;\n    /** @type {?string} */\n    this.scopeSelector = null;\n    /** @type {HTMLStyleElement} */\n    this.customStyle = null;\n  }\n  _getStyleRules() {\n    return this.styleRules;\n  }\n}\n\n/* eslint-disable-next-line no-self-assign */\nStyleInfo.prototype['_getStyleRules'] = StyleInfo.prototype._getStyleRules;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport * as RX from './common-regex.js';\nimport StyleInfo from './style-info.js';\n\n// TODO: dedupe with shady\n/**\n * @param {string} selector\n * @return {boolean}\n * @this {Element}\n */\nconst matchesSelector = function(selector) {\n  const method = this.matches || this.matchesSelector ||\n    this.mozMatchesSelector || this.msMatchesSelector ||\n    this.oMatchesSelector || this.webkitMatchesSelector;\n  return method && method.call(this, selector);\n};\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n/**\n * decorates styles with rule info and returns an array of used style property names\n *\n * @param {StyleNode} rules\n * @return {Array<string>}\n */\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule['rules'] = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = RX.VAR_ASSIGN;\n      let cssText = rule['parsedCssText'];\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule['parsedCssText']);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(RX.BRACKETED, '')\n      .replace(RX.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = RX.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        RX.MIXIN_MATCH.lastIndex = 0;\n        m = RX.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule['cssText'] = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule['cssText'];\n    let output = rule['cssText'];\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = RX.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule['cssText'] = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  /**\n   * @param {StyleNode} rules\n   * @param {Element} element\n   */\n  propertyDataFromStyles(rules, element) {\n    let props = {};\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, (rule) => {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        this.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule['parsedSelector'];\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          this.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  /**\n   * @param {Element} scope\n   * @param {StyleNode} rule\n   * @param {string} cssBuild\n   * @param {function(Object)} callback\n   */\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let {is, typeExtension} = StyleUtil.getIsExtends(scope);\n    let hostScope = is ?\n      StyleTransformer._calcHostScope(is, typeExtension) :\n      'html';\n    let parsedSelector = rule['parsedSelector'];\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host because `:host` does not work with `matches`\n      if (!rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n/**\n * @param {Element} scope\n * @param {StyleNode} rules\n * @param {string} cssBuild\n * @return {Object}\n */\n  hostAndRootPropertiesForScope(scope, rules, cssBuild) {\n    let hostProps = {}, rootProps = {};\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, (rule) => {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      this.whenHostOrRootRule(scope, rule, cssBuild, (info) => {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            this.collectProperties(rule, hostProps);\n          } else {\n            this.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  /**\n   * @param {Element} element\n   * @param {Object} properties\n   * @param {string} scopeSelector\n   */\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let {is, typeExtension} = StyleUtil.getIsExtends(element);\n    let hostSelector = StyleTransformer\n      ._calcHostScope(is, typeExtension);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(RX.HOST_PREFIX + rxHostSelector +\n      RX.HOST_SUFFIX);\n    let {styleRules: rules, cssBuild} = StyleInfo.get(element);\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule['cssText']) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    }, cssBuild);\n  }\n\n  /**\n   * @param {Element} element\n   * @param {StyleNode} rules\n   * @param {string} scopeSelector\n   * @return {Object}\n   */\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule['keyframesName']] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  /**\n   * @param {StyleNode} keyframesRule\n   * @return {function(string):string}\n   */\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n/**\n * Transforms `@keyframes` names to be unique for the current host.\n * Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n *\n * @param {StyleNode} rule\n * @param {string} scopeId\n */\n  _scopeKeyframes(rule, scopeId) {\n    // Animation names are of the form [\\w-], so ensure that the name regex does not partially apply\n    // to similarly named keyframe names by checking for a word boundary at the beginning and\n    // a non-word boundary or `-` at the end.\n    rule.keyframesNameRx = new RegExp(`\\\\b${rule['keyframesName']}(?!\\\\B|-)`, 'g');\n    rule.transformedKeyframesName = rule['keyframesName'] + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    rule['selector'] = rule.transformedSelector.replace(\n        rule['keyframesName'], rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  /**\n   * @param {StyleNode} rule\n   * @param {RegExp} hostRx\n   * @param {string} hostSelector\n   * @param {string} scopeId\n   */\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = StyleUtil.splitSelectorList(selector);\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule['selector'] = parts.join(',');\n  }\n\n  /**\n   * @param {Element} element\n   * @param {string} selector\n   * @param {string} old\n   */\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @param {Object} properties\n   * @param {string} selector\n   * @param {HTMLStyleElement} style\n   * @return {HTMLStyleElement}\n   */\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s['_useCount']--;\n      if (s['_useCount'] <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        if (IS_IE && cssText.indexOf('@media') > -1) {\n            // @media rules may be stale in IE 10 and 11\n            // refresh the text content of the style to revalidate them.\n          style.textContent = cssText;\n        }\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style['_useCount'] = style['_useCount'] || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style['_useCount']++;\n      }\n      styleInfo.customStyle = style;\n    }\n    return style;\n  }\n\n  /**\n   * @param {Element} style\n   * @param {Object} properties\n   */\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(/** @type {HTMLStyleElement} */(style));\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      let css = rule['cssText'] = rule['parsedCssText'];\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(/** @type {string} */(css));\n        // replace with reified properties, scenario is same as mixin\n        rule['cssText'] = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\n/**\n * @param {number} n\n * @param {Array<number>} bits\n */\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32, 10);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util.js';\nimport {nativeShadow, disableRuntime} from './style-settings.js';\n\n/** @type {!Object<string, !Node>} */\nconst placeholderMap = {};\n\n/**\n * @param {string} elementName\n * @return {Node}\n */\nexport function getStylePlaceholder(elementName) {\n  return placeholderMap[elementName] || null;\n}\n\n/**\n * @param {string} elementName\n */\nexport function ensureStylePlaceholder(elementName) {\n  if (!placeholderMap[elementName]) {\n    placeholderMap[elementName] = applyStylePlaceHolder(elementName);\n  }\n}\n\n/**\n * @const {CustomElementRegistry}\n */\nconst ce = window['customElements'];\nif (ce && !nativeShadow && !disableRuntime) {\n  /**\n   * @const {function(this:CustomElementRegistry, string,function(new:HTMLElement),{extends: string}=)}\n   */\n  const origDefine = ce['define'];\n  /**\n   * @param {string} name\n   * @param {function(new:HTMLElement)} clazz\n   * @param {{extends: string}=} options\n   */\n  const wrappedDefine = (name, clazz, options) => {\n    ensureStylePlaceholder(name);\n    origDefine.call(/** @type {!CustomElementRegistry} */(ce), name, clazz, options);\n  };\n  ce['define'] = wrappedDefine;\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    /** @type {number} */\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport {getIsExtends, elementHasBuiltCss, wrap} from './style-util.js';\n\nexport let flush = function() {};\n\n/**\n * @param {!Element} element\n * @return {string}\n */\nfunction getClasses(element) {\n  if (element.classList && element.classList.value) {\n    return element.classList.value;\n  } else {\n    // NOTE: className is patched to remove scoping classes in ShadyDOM\n    // use getAttribute('class') instead, which is unpatched\n    return element.getAttribute('class') || '';\n  }\n}\n\nconst scopeRegExp = new RegExp(`${StyleTransformer.SCOPE_NAME}\\\\s*([^\\\\s]*)`);\n\n/**\n * @param {!Element} element\n * @return {string}\n */\nexport function getCurrentScope(element) {\n  const match = getClasses(element).match(scopeRegExp);\n  if (match) {\n    return match[1];\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {!Node} node\n */\nexport function getOwnerScope(node) {\n  const ownerRoot = wrap(node).getRootNode();\n  if (ownerRoot === node || ownerRoot === node.ownerDocument) {\n    return '';\n  }\n  const host = /** @type {!ShadowRoot} */(ownerRoot).host;\n  if (!host) {\n    // this may actually be a document fragment\n    return '';\n  }\n  return getIsExtends(host).is;\n}\n\n/**\n * @param {!Element} element\n */\nexport function ensureCorrectScope(element) {\n  const currentScope = getCurrentScope(element);\n  const ownerRoot = wrap(element).getRootNode();\n  if (ownerRoot === element) {\n    return;\n  }\n  if (currentScope && ownerRoot === element.ownerDocument) {\n    // node was scoped, but now is in document\n    StyleTransformer.domRemoveScope(element, currentScope);\n  } else if (ownerRoot instanceof ShadowRoot) {\n    const ownerScope = getOwnerScope(element);\n    if (ownerScope !== currentScope) {\n      // node was scoped, but not by its current owner\n      StyleTransformer.domReplaceScope(element, currentScope, ownerScope);\n    }\n  }\n}\n\n/**\n * @param {!HTMLElement|!HTMLDocument} element\n */\nexport function ensureCorrectSubtreeScoping(element) {\n  // find unscoped subtree nodes\n  const unscopedNodes = window['ShadyDOM']['nativeMethods']['querySelectorAll'].call(\n    element, `:not(.${StyleTransformer.SCOPE_NAME})`);\n\n  for (let j = 0; j < unscopedNodes.length; j++) {\n    // it's possible, during large batch inserts, that nodes that aren't\n    // scoped within the current scope were added.\n    // To make sure that any unscoped nodes that were inserted in the current batch are correctly styled,\n    // query all unscoped nodes and force their style-scope to be applied.\n    // This could happen if a sub-element appended an unscoped node in its shadowroot and this function\n    // runs on a parent element of the host of that unscoped node:\n    // parent-element -> element -> unscoped node\n    // Here unscoped node should have the style-scope element, not parent-element.\n    const unscopedNode = unscopedNodes[j];\n    const scopeForPreviouslyUnscopedNode = getOwnerScope(unscopedNode);\n    if (scopeForPreviouslyUnscopedNode) {\n      StyleTransformer.element(unscopedNode, scopeForPreviouslyUnscopedNode);\n    }\n  }\n}\n\n/**\n * @param {HTMLElement} el\n * @return {boolean}\n */\nfunction isElementWithBuiltCss(el) {\n  if (el.localName === 'style' || el.localName === 'template') {\n    return elementHasBuiltCss(el);\n  }\n  return false;\n}\n\n/**\n * @param {Array<MutationRecord|null>|null} mxns\n */\nfunction handler(mxns) {\n  for (let x=0; x < mxns.length; x++) {\n    let mxn = mxns[x];\n    if (mxn.target === document.documentElement ||\n      mxn.target === document.head) {\n      continue;\n    }\n    for (let i=0; i < mxn.addedNodes.length; i++) {\n      let n = mxn.addedNodes[i];\n      if (n.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      n = /** @type {HTMLElement} */(n); // eslint-disable-line no-self-assign\n      let root = n.getRootNode();\n      let currentScope = getCurrentScope(n);\n      // node was scoped, but now is in document\n      // If this element has built css, we must not remove scoping as this node\n      // will be used as a template or style without re - applying scoping as an optimization\n      if (currentScope && root === n.ownerDocument && !isElementWithBuiltCss(n)) {\n        StyleTransformer.domRemoveScope(n, currentScope);\n      } else if (root instanceof ShadowRoot) {\n        const newScope = getOwnerScope(n);\n        // rescope current node and subtree if necessary\n        if (newScope !== currentScope) {\n          StyleTransformer.domReplaceScope(n, currentScope, newScope);\n        }\n        // make sure all the subtree elements are scoped correctly\n        ensureCorrectSubtreeScoping(n);\n      }\n    }\n  }\n}\n\n// if native Shadow DOM is being used, or ShadyDOM handles dynamic scoiping, do not activate the MutationObserver\nif (!nativeShadow && !(window['ShadyDOM'] && window['ShadyDOM']['handlesDynamicScoping'])) {\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window['customElements'] &&\n    !window['customElements']['polyfillWrapFlushCallback']);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window['HTMLImports']) {\n      window['HTMLImports']['whenReady'](delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/**\n * @const {!Object<string, !HTMLTemplateElement>}\n */\nconst templateMap = {};\nexport default templateMap;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\nimport templateMap from './template-map.js';\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/*\n * Utilities for handling invalidating apply-shim mixins for a given template.\n *\n * The invalidation strategy involves keeping track of the \"current\" version of a template's mixins, and updating that count when a mixin is invalidated.\n * The template\n */\n\n/** @const {string} */\nconst CURRENT_VERSION = '_applyShimCurrentVersion';\n\n/** @const {string} */\nconst NEXT_VERSION = '_applyShimNextVersion';\n\n/** @const {string} */\nconst VALIDATING_VERSION = '_applyShimValidatingVersion';\n\n/**\n * @const {Promise<void>}\n */\nconst promise = Promise.resolve();\n\n/**\n * @param {string} elementName\n */\nexport function invalidate(elementName){\n  let template = templateMap[elementName];\n  if (template) {\n    invalidateTemplate(template);\n  }\n}\n\n/**\n * This function can be called multiple times to mark a template invalid\n * and signal that the style inside must be regenerated.\n *\n * Use `startValidatingTemplate` to begin an asynchronous validation cycle.\n * During that cycle, call `templateIsValidating` to see if the template must\n * be revalidated\n * @param {HTMLTemplateElement} template\n */\nexport function invalidateTemplate(template) {\n  // default the current version to 0\n  template[CURRENT_VERSION] = template[CURRENT_VERSION] || 0;\n  // ensure the \"validating for\" flag exists\n  template[VALIDATING_VERSION] = template[VALIDATING_VERSION] || 0;\n  // increment the next version\n  template[NEXT_VERSION] = (template[NEXT_VERSION] || 0) + 1;\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValid(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValid(template);\n  }\n  return true;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValid(template) {\n  return template[CURRENT_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValidating(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValidating(template);\n  }\n  return false;\n}\n\n/**\n * Returns true if the template is currently invalid and `startValidating` has been called since the last invalidation.\n * If false, the template must be validated.\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValidating(template) {\n  return !templateIsValid(template) && template[VALIDATING_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * the template is marked as `validating` for one microtask so that all instances\n * found in the tree crawl of `applyStyle` will update themselves,\n * but the template will only be updated once.\n * @param {string} elementName\n*/\nexport function startValidating(elementName) {\n  let template = templateMap[elementName];\n  startValidatingTemplate(template);\n}\n\n/**\n * Begin an asynchronous invalidation cycle.\n * This should be called after every validation of a template\n *\n * After one microtask, the template will be marked as valid until the next call to `invalidateTemplate`\n * @param {HTMLTemplateElement} template\n */\nexport function startValidatingTemplate(template) {\n  // remember that the current \"next version\" is the reason for this validation cycle\n  template[VALIDATING_VERSION] = template[NEXT_VERSION];\n  // however, there only needs to be one async task to clear the counters\n  if (!template._validating) {\n    template._validating = true;\n    promise.then(function() {\n      // sync the current version to let future invalidations cause a refresh cycle\n      template[CURRENT_VERSION] = template[NEXT_VERSION];\n      template._validating = false;\n    });\n  }\n}\n\n/**\n * @return {boolean}\n */\nexport function elementsAreInvalid() {\n  for (let elementName in templateMap) {\n    let template = templateMap[elementName];\n    if (!templateIsValid(template)) {\n      return true;\n    }\n  }\n  return false;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {Promise<void>} */\nlet readyPromise = null;\n\n/** @type {?function(?function())} */\nlet whenReady = window['HTMLImports'] && window['HTMLImports']['whenReady'] || null;\n\n/** @type {function()} */\nlet resolveFn;\n\n/**\n * @param {?function()} callback\n */\nexport default function documentWait(callback) {\n  requestAnimationFrame(function() {\n    if (whenReady) {\n      whenReady(callback)\n    } else {\n      if (!readyPromise) {\n        readyPromise = new Promise((resolve) => {resolveFn = resolve});\n        if (document.readyState === 'complete') {\n          resolveFn();\n        } else {\n          document.addEventListener('readystatechange', () => {\n            if (document.readyState === 'complete') {\n              resolveFn();\n            }\n          });\n        }\n      }\n      readyPromise.then(function(){ callback && callback(); });\n    }\n  });\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport documentWait from './document-wait.js';\n\n/**\n * @typedef {HTMLStyleElement | {getStyle: function():HTMLStyleElement}}\n */\nexport let CustomStyleProvider;\n\nconst SEEN_MARKER = '__seenByShadyCSS';\nconst CACHED_STYLE = '__shadyCSSCachedStyle';\n\n/** @type {?function(!HTMLStyleElement)} */\nlet transformFn = null;\n\n/** @type {?function()} */\nlet validateFn = null;\n\n/**\nThis interface is provided to add document-level <style> elements to ShadyCSS for processing.\nThese styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles\nIn addition, these styles may also need to be processed for @apply rules and CSS Custom Properties\n\nTo add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`\n\nIn addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.\nThis function will be called when calculating styles.\n\nAn example usage of the document-level styling api can be found in `examples/document-style-lib.js`\n\n@unrestricted\n*/\nexport default class CustomStyleInterface {\n  constructor() {\n    /** @type {!Array<!CustomStyleProvider>} */\n    this['customStyles'] = [];\n    this['enqueued'] = false;\n    // NOTE(dfreedm): use quotes here to prevent closure inlining to `function(){}`;\n    documentWait(() => {\n      if (window['ShadyCSS']['flushCustomStyles']) {\n        window['ShadyCSS']['flushCustomStyles']();\n      }\n    })\n  }\n  /**\n   * Queue a validation for new custom styles to batch style recalculations\n   */\n  enqueueDocumentValidation() {\n    if (this['enqueued'] || !validateFn) {\n      return;\n    }\n    this['enqueued'] = true;\n    documentWait(validateFn);\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   */\n  addCustomStyle(style) {\n    if (!style[SEEN_MARKER]) {\n      style[SEEN_MARKER] = true;\n      this['customStyles'].push(style);\n      this.enqueueDocumentValidation();\n    }\n  }\n  /**\n   * @param {!CustomStyleProvider} customStyle\n   * @return {HTMLStyleElement}\n   */\n  getStyleForCustomStyle(customStyle) {\n    if (customStyle[CACHED_STYLE]) {\n      return customStyle[CACHED_STYLE];\n    }\n    let style;\n    if (customStyle['getStyle']) {\n      style = customStyle['getStyle']();\n    } else {\n      style = customStyle;\n    }\n    return style;\n  }\n  /**\n   * @return {!Array<!CustomStyleProvider>}\n   */\n  processStyles() {\n    const cs = this['customStyles'];\n    for (let i = 0; i < cs.length; i++) {\n      const customStyle = cs[i];\n      if (customStyle[CACHED_STYLE]) {\n        continue;\n      }\n      const style = this.getStyleForCustomStyle(customStyle);\n      if (style) {\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        const styleToTransform = /** @type {!HTMLStyleElement} */(style['__appliedElement'] || style);\n        if (transformFn) {\n          transformFn(styleToTransform);\n        }\n        customStyle[CACHED_STYLE] = styleToTransform;\n      }\n    }\n    return cs;\n  }\n}\n\n/* eslint-disable no-self-assign */\nCustomStyleInterface.prototype['addCustomStyle'] = CustomStyleInterface.prototype.addCustomStyle;\nCustomStyleInterface.prototype['getStyleForCustomStyle'] = CustomStyleInterface.prototype.getStyleForCustomStyle;\nCustomStyleInterface.prototype['processStyles'] = CustomStyleInterface.prototype.processStyles;\n/* eslint-enable no-self-assign */\n\nObject.defineProperties(CustomStyleInterface.prototype, {\n  'transformCallback': {\n    /** @return {?function(!HTMLStyleElement)} */\n    get() {\n      return transformFn;\n    },\n    /** @param {?function(!HTMLStyleElement)} fn */\n    set(fn) {\n      transformFn = fn;\n    }\n  },\n  'validateCallback': {\n    /** @return {?function()} */\n    get() {\n      return validateFn;\n    },\n    /**\n     * @param {?function()} fn\n     * @this {CustomStyleInterface}\n     */\n    set(fn) {\n      let needsEnqueue = false;\n      if (!validateFn) {\n        needsEnqueue = true;\n      }\n      validateFn = fn;\n      if (needsEnqueue) {\n        this.enqueueDocumentValidation();\n      }\n    },\n  }\n})\n\n/** @typedef {{\n * customStyles: !Array<!CustomStyleProvider>,\n * addCustomStyle: function(!CustomStyleProvider),\n * getStyleForCustomStyle: function(!CustomStyleProvider): HTMLStyleElement,\n * findStyles: function(),\n * transformCallback: ?function(!HTMLStyleElement),\n * validateCallback: ?function()\n * }}\n */\nexport const CustomStyleInterfaceInterface = {};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse, StyleNode} from './css-parse.js';\nimport {nativeShadow, nativeCssVariables, disableRuntime} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport StyleProperties from './style-properties.js';\nimport {ensureStylePlaceholder, getStylePlaceholder} from './style-placeholder.js';\nimport StyleInfo from './style-info.js';\nimport StyleCache from './style-cache.js';\nimport {flush as watcherFlush, getOwnerScope, getCurrentScope} from './document-watcher.js';\nimport templateMap from './template-map.js';\nimport * as ApplyShimUtils from './apply-shim-utils.js';\nimport {updateNativeProperties, detectMixin} from './common-utils.js';\nimport {CustomStyleInterfaceInterface} from './custom-style-interface.js'; // eslint-disable-line no-unused-vars\n\n/** @type {!Object<string, string>} */\nconst adoptedCssTextMap = {};\n\n/**\n * @const {StyleCache}\n */\nconst styleCache = new StyleCache();\n\nexport default class ScopingShim {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = /** @type {!HTMLElement} */(document.documentElement);\n    let ast = new StyleNode();\n    ast['rules'] = [];\n    this._documentOwnerStyleInfo = StyleInfo.set(this._documentOwner, new StyleInfo(ast));\n    this._elementsHaveApplied = false;\n    /** @type {?Object} */\n    this._applyShim = null;\n    /** @type {?CustomStyleInterfaceInterface} */\n    this._customStyleInterface = null;\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    return StyleUtil.gatherStyleText(template.content);\n  }\n  /**\n   * Prepare the styling and template for the given element type\n   *\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplate(template, elementName, typeExtension) {\n    this.prepareTemplateDom(template, elementName);\n    this.prepareTemplateStyles(template, elementName, typeExtension);\n  }\n  /**\n   * Prepare styling for the given element type\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplateStyles(template, elementName, typeExtension) {\n    if (template._prepared || disableRuntime) {\n      return;\n    }\n    // style placeholders are only used when ShadyDOM is active\n    if (!nativeShadow) {\n      ensureStylePlaceholder(elementName);\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = StyleUtil.getCssBuild(template);\n    const optimalBuild = StyleUtil.isOptimalCssBuild(cssBuild);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n    };\n    let cssText = this._gatherStyles(template) + (adoptedCssTextMap[elementName] || '');\n    // check if the styling has mixin definitions or uses\n    this._ensure();\n    if (!optimalBuild) {\n      let hasMixins = !cssBuild && detectMixin(cssText);\n      let ast = parse(cssText);\n      // only run the applyshim transforms if there is a mixin involved\n      if (hasMixins && nativeCssVariables && this._applyShim) {\n        this._applyShim['transformRules'](ast, elementName);\n      }\n      template['_styleAst'] = ast;\n    }\n    let ownPropertyNames = [];\n    if (!nativeCssVariables) {\n      ownPropertyNames = StyleProperties.decorateStyles(template['_styleAst']);\n    }\n    if (!ownPropertyNames.length || nativeCssVariables) {\n      let root = nativeShadow ? template.content : null;\n      let placeholder = getStylePlaceholder(elementName);\n      let style = this._generateStaticStyle(info, template['_styleAst'], root, placeholder, cssBuild, optimalBuild ? cssText : '');\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n\n  /**\n   * @param {!Array<string>} cssTextArray\n   * @param {string} elementName\n   */\n  prepareAdoptedCssText(cssTextArray, elementName) {\n    adoptedCssTextMap[elementName] = cssTextArray.join(' ');\n  }\n  /**\n   * Prepare template for the given element type\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   */\n  prepareTemplateDom(template, elementName) {\n    if (disableRuntime) {\n      return;\n    }\n    const cssBuild = StyleUtil.getCssBuild(template);\n    if (!nativeShadow && cssBuild !== 'shady' && !template._domPrepared) {\n      template._domPrepared = true;\n      StyleTransformer.domAddScope(template.content, elementName);\n    }\n  }\n  /**\n   * @param {!{is: string, extends: (string|undefined)}} info\n   * @param {!StyleNode} rules\n   * @param {DocumentFragment} shadowroot\n   * @param {Node} placeholder\n   * @param {string} cssBuild\n   * @param {string=} cssText\n   * @return {?HTMLStyleElement}\n   */\n  _generateStaticStyle(info, rules, shadowroot, placeholder, cssBuild, cssText) {\n    cssText = StyleTransformer.elementStyles(info, rules, null, cssBuild, cssText);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n    return null;\n  }\n  _prepareHost(host) {\n    const {is, typeExtension} = StyleUtil.getIsExtends(host);\n    const placeholder = getStylePlaceholder(is);\n    const template = templateMap[is];\n    if (!template) {\n      return;\n    }\n    const ast = template['_styleAst'];\n    const ownStylePropertyNames = template._ownPropertyNames;\n    const cssBuild = StyleUtil.getCssBuild(template);\n    const styleInfo = new StyleInfo(\n      ast,\n      placeholder,\n      ownStylePropertyNames,\n      is,\n      typeExtension,\n      cssBuild\n    );\n    StyleInfo.set(host, styleInfo);\n    return styleInfo;\n  }\n  _ensureApplyShim() {\n    if (this._applyShim) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.ApplyShim) {\n      this._applyShim = /** @type {!Object} */ (window.ShadyCSS.ApplyShim);\n      this._applyShim['invalidCallback'] = ApplyShimUtils.invalidate;\n    }\n  }\n  _ensureCustomStyleInterface() {\n    if (this._customStyleInterface) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.CustomStyleInterface) {\n      this._customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */(window.ShadyCSS.CustomStyleInterface);\n      /** @type {function(!HTMLStyleElement)} */\n      this._customStyleInterface['transformCallback'] = (style) => {this.transformCustomStyleForDocument(style)};\n      this._customStyleInterface['validateCallback'] = () => {\n        requestAnimationFrame(() => {\n          if (this._customStyleInterface['enqueued'] || this._elementsHaveApplied) {\n            this.flushCustomStyles();\n          }\n        })\n      };\n    }\n  }\n  _ensure() {\n    this._ensureApplyShim();\n    this._ensureCustomStyleInterface();\n  }\n  /**\n   * Flush and apply custom styles to document\n   */\n  flushCustomStyles() {\n    if (disableRuntime) {\n      return;\n    }\n    this._ensure();\n    if (!this._customStyleInterface) {\n      return;\n    }\n    let customStyles = this._customStyleInterface['processStyles']();\n    // early return if custom-styles don't need validation\n    if (!this._customStyleInterface['enqueued']) {\n      return;\n    }\n    // bail if custom styles are built optimally\n    if (StyleUtil.isOptimalCssBuild(this._documentOwnerStyleInfo.cssBuild)) {\n      return;\n    }\n    if (!nativeCssVariables) {\n      this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n      this._applyCustomStyles(customStyles);\n      if (this._elementsHaveApplied) {\n        // if custom elements have upgraded and there are no native css variables, we must recalculate the whole tree\n        this.styleDocument();\n      }\n    } else if (!this._documentOwnerStyleInfo.cssBuild) {\n      this._revalidateCustomStyleApplyShim(customStyles);\n    }\n    this._customStyleInterface['enqueued'] = false;\n  }\n  /**\n   * Apply styles for the given element\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} overrideProps\n   */\n  styleElement(host, overrideProps) {\n    if (disableRuntime) {\n      if (overrideProps) {\n        if (!StyleInfo.get(host)) {\n          StyleInfo.set(host, new StyleInfo(null));\n        }\n        const styleInfo = /** @type {!StyleInfo} */(StyleInfo.get(host));\n        this._mixOverrideStyleProps(styleInfo, overrideProps);\n        this.styleElementNativeVariables(host, styleInfo);\n      }\n      return;\n    }\n    const styleInfo = StyleInfo.get(host) || this._prepareHost(host);\n    // if there is no style info at this point, bail\n    if (!styleInfo) {\n      return;\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (overrideProps) {\n      this._mixOverrideStyleProps(styleInfo, overrideProps);\n    }\n    if (!nativeCssVariables) {\n      this.styleElementShimVariables(host, styleInfo);\n    } else {\n      this.styleElementNativeVariables(host, styleInfo);\n    }\n  }\n  /**\n   * @param {!StyleInfo} styleInfo\n   * @param {Object} overrideProps\n   */\n  _mixOverrideStyleProps(styleInfo, overrideProps) {\n    styleInfo.overrideStyleProperties =\n      styleInfo.overrideStyleProperties || {};\n    Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n  }\n  /**\n   * @param {!HTMLElement} host\n   * @param {!StyleInfo} styleInfo\n   */\n  styleElementShimVariables(host, styleInfo) {\n    this.flush();\n    this._updateProperties(host, styleInfo);\n    if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n      this._applyStyleProperties(host, styleInfo);\n    }\n  }\n  /**\n   * @param {!HTMLElement} host\n   * @param {!StyleInfo} styleInfo\n   */\n  styleElementNativeVariables(host, styleInfo) {\n    const { is } = StyleUtil.getIsExtends(host);\n    if (styleInfo.overrideStyleProperties) {\n      updateNativeProperties(host, styleInfo.overrideStyleProperties);\n    }\n    const template = templateMap[is];\n    // bail early if there is no shadowroot for this element\n    if (!template && !this._isRootOwner(host)) {\n      return;\n    }\n    // bail early if the template was built with polymer-css-build\n    if (template && StyleUtil.elementHasBuiltCss(template)) {\n      return;\n    }\n    if (template && template._style && !ApplyShimUtils.templateIsValid(template)) {\n      // update template\n      if (!ApplyShimUtils.templateIsValidating(template)) {\n        this._ensure();\n        this._applyShim && this._applyShim['transformRules'](template['_styleAst'], is);\n        template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n        ApplyShimUtils.startValidatingTemplate(template);\n      }\n      // update instance if native shadowdom\n      if (nativeShadow) {\n        let root = host.shadowRoot;\n        if (root) {\n          let style = root.querySelector('style');\n          if (style) {\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n      }\n      styleInfo.styleRules = template['_styleAst'];\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = StyleUtil.wrap(node).getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host) || this._prepareHost(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = StyleUtil.getIsExtends(host).is;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    // style owner has not updated properties yet\n    // go up the chain and force property update,\n    // except if the owner is the document\n    if (owner !== this._documentOwner && !ownerProperties) {\n      this._updateProperties(owner, ownerStyleInfo);\n      ownerProperties = ownerStyleInfo.styleProperties;\n    }\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules, styleInfo.cssBuild);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  /**\n   * Update styles of the whole document\n   *\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    this.styleSubtree(this._documentOwner, properties);\n  }\n  /**\n   * Update styles of a subtree\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} properties\n   */\n  styleSubtree(host, properties) {\n    const wrappedHost = StyleUtil.wrap(host);\n    let root = wrappedHost.shadowRoot;\n    if (root || this._isRootOwner(host)) {\n      this.styleElement(host, properties);\n    }\n    // process the shadowdom children of `host`\n    let shadowChildren =\n        root && (/** @type {!ParentNode} */ (root).children || root.childNodes);\n    if (shadowChildren) {\n      for (let i = 0; i < shadowChildren.length; i++) {\n        let c = /** @type {!HTMLElement} */(shadowChildren[i]);\n        this.styleSubtree(c);\n      }\n    } else {\n      // process the lightdom children of `host`\n      let children = wrappedHost.children || wrappedHost.childNodes;\n      if (children) {\n        for (let i = 0; i < children.length; i++) {\n          let c = /** @type {!HTMLElement} */(children[i]);\n          this.styleSubtree(c);\n        }\n      }\n    }\n  }\n  /* Custom Style operations */\n  _revalidateCustomStyleApplyShim(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        this._revalidateApplyShim(s);\n      }\n    }\n  }\n  _applyCustomStyles(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        StyleProperties.applyCustomStyle(s, this._documentOwnerStyleInfo.styleProperties);\n      }\n    }\n  }\n  transformCustomStyleForDocument(style) {\n    const cssBuild = StyleUtil.getCssBuild(style);\n    if (cssBuild !== this._documentOwnerStyleInfo.cssBuild) {\n      this._documentOwnerStyleInfo.cssBuild = cssBuild;\n    }\n    if (StyleUtil.isOptimalCssBuild(cssBuild)) {\n      return;\n    }\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (nativeCssVariables && cssBuild === '') {\n        this._ensure();\n        this._applyShim && this._applyShim['transformRule'](rule);\n      }\n    });\n    if (nativeCssVariables) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules['rules'].push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (nativeCssVariables && this._applyShim) {\n      let ast = StyleUtil.rulesForStyle(style);\n      this._ensure();\n      this._applyShim['transformRules'](ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!nativeCssVariables) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value ? value.trim() : '';\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = StyleUtil.wrap(element).getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!nativeCssVariables) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n  /**\n   * @param {!Element} node\n   * @param {string} scope\n   */\n  scopeNode(node, scope) {\n    StyleTransformer.element(node, scope);\n  }\n  /**\n   * @param {!Element} node\n   * @param {string} scope\n   */\n  unscopeNode(node, scope) {\n    StyleTransformer.element(node, scope, true);\n  }\n  /**\n   * @param {!Node} node\n   * @return {string}\n   */\n  scopeForNode(node) {\n    return getOwnerScope(node);\n  }\n  /**\n   * @param {!Element} node\n   * @return {string}\n   */\n  currentScopeForNode(node) {\n    return getCurrentScope(node);\n  }\n}\n\n/* exports */\n/* eslint-disable no-self-assign */\nScopingShim.prototype['flush'] = ScopingShim.prototype.flush;\nScopingShim.prototype['prepareTemplate'] = ScopingShim.prototype.prepareTemplate;\nScopingShim.prototype['styleElement'] = ScopingShim.prototype.styleElement;\nScopingShim.prototype['styleDocument'] = ScopingShim.prototype.styleDocument;\nScopingShim.prototype['styleSubtree'] = ScopingShim.prototype.styleSubtree;\nScopingShim.prototype['getComputedStyleValue'] = ScopingShim.prototype.getComputedStyleValue;\nScopingShim.prototype['setElementClass'] = ScopingShim.prototype.setElementClass;\nScopingShim.prototype['_styleInfoForNode'] = ScopingShim.prototype._styleInfoForNode;\nScopingShim.prototype['transformCustomStyleForDocument'] = ScopingShim.prototype.transformCustomStyleForDocument;\nScopingShim.prototype['getStyleAst'] = ScopingShim.prototype.getStyleAst;\nScopingShim.prototype['styleAstToString'] = ScopingShim.prototype.styleAstToString;\nScopingShim.prototype['flushCustomStyles'] = ScopingShim.prototype.flushCustomStyles;\nScopingShim.prototype['scopeNode'] = ScopingShim.prototype.scopeNode;\nScopingShim.prototype['unscopeNode'] = ScopingShim.prototype.unscopeNode;\nScopingShim.prototype['scopeForNode'] = ScopingShim.prototype.scopeForNode;\nScopingShim.prototype['currentScopeForNode'] = ScopingShim.prototype.currentScopeForNode;\nScopingShim.prototype['prepareAdoptedCssText'] = ScopingShim.prototype.prepareAdoptedCssText;\n/* eslint-enable no-self-assign */\nObject.defineProperties(ScopingShim.prototype, {\n  'nativeShadow': {\n    get() {\n      return nativeShadow;\n    }\n  },\n  'nativeCss': {\n    get() {\n      return nativeCssVariables;\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport { MIXIN_MATCH, VAR_ASSIGN } from './common-regex.js';\n\n/**\n * @param {Element} element\n * @param {Object=} properties\n */\nexport function updateNativeProperties(element, properties) {\n  // remove previous properties\n  for (let p in properties) {\n    // NOTE: for bc with shim, don't apply null values.\n    if (p === null) {\n      element.style.removeProperty(p);\n    } else {\n      element.style.setProperty(p, properties[p]);\n    }\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} property\n * @return {string}\n */\nexport function getComputedStyleValue(element, property) {\n  /**\n   * @const {string}\n   */\n  const value = window.getComputedStyle(element).getPropertyValue(property);\n  if (!value) {\n    return '';\n  } else {\n    return value.trim();\n  }\n}\n\n/**\n * return true if `cssText` contains a mixin definition or consumption\n * @param {string} cssText\n * @return {boolean}\n */\nexport function detectMixin(cssText) {\n  const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n  // reset state of the regexes\n  MIXIN_MATCH.lastIndex = 0;\n  VAR_ASSIGN.lastIndex = 0;\n  return has;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport ScopingShim from '../src/scoping-shim.js';\nimport {nativeCssVariables, nativeShadow, cssBuild, disableRuntime} from '../src/style-settings.js';\n\n/** @const {ScopingShim} */\nconst scopingShim = new ScopingShim();\n\nlet ApplyShim, CustomStyleInterface;\n\nif (window['ShadyCSS']) {\n  ApplyShim = window['ShadyCSS']['ApplyShim'];\n  CustomStyleInterface = window['ShadyCSS']['CustomStyleInterface'];\n}\n\nwindow.ShadyCSS = {\n  ScopingShim: scopingShim,\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplate(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplate(template, elementName, elementExtends)\n  },\n\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   */\n  prepareTemplateDom(template, elementName) {\n    scopingShim.prepareTemplateDom(template, elementName);\n  },\n\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplateStyles(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplateStyles(template, elementName, elementExtends)\n  },\n  /**\n   * @param {!HTMLElement} element\n   * @param {Object=} properties\n   */\n  styleSubtree(element, properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleSubtree(element, properties);\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  styleElement(element) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleElement(element);\n  },\n\n  /**\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleDocument(properties);\n  },\n\n  flushCustomStyles() {\n    scopingShim.flushCustomStyles();\n  },\n\n  /**\n   * @param {Element} element\n   * @param {string} property\n   * @return {string}\n   */\n  getComputedStyleValue(element, property) {\n    return scopingShim.getComputedStyleValue(element, property);\n  },\n\n  nativeCss: nativeCssVariables,\n\n  nativeShadow: nativeShadow,\n\n  cssBuild: cssBuild,\n\n  disableRuntime: disableRuntime,\n};\n\nif (ApplyShim) {\n  window.ShadyCSS.ApplyShim = ApplyShim;\n}\n\nif (CustomStyleInterface) {\n  window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;\n}","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nconst reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = node.isConnected;\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = current.parentNode || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !node.nextSibling) {\n    node = node.parentNode;\n  }\n  return (!node || node === root) ? null : node.nextSibling;\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return start.firstChild ? start.firstChild : nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = element.localName;\n      if (localName === 'link' && element.getAttribute('rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = importNode.firstChild; child; child = child.nextSibling) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = shadowRoot.firstChild; child; child = child.nextSibling) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport * as Utilities from './Utilities.js';\nimport CEState from './CustomElementState.js';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patchesNode = [];\n\n    /** @type {!Array<!function(!Element)>} */\n    this._patchesElement = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructorFunction, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} patch\n   */\n  addNodePatch(patch) {\n    this._hasPatches = true;\n    this._patchesNode.push(patch);\n  }\n\n  /**\n   * @param {!function(!Element)} patch\n   */\n  addElementPatch(patch) {\n    this._hasPatches = true;\n    this._patchesElement.push(patch);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patchElement(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchNode(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patchesNode.length; i++) {\n      this._patchesNode[i](node);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  patchElement(element) {\n    if (!this._hasPatches) return;\n\n    if (element.__CE_patched) return;\n    element.__CE_patched = true;\n\n    for (let i = 0; i < this._patchesNode.length; i++) {\n      this._patchesNode[i](element);\n    }\n\n    for (let i = 0; i < this._patchesElement.length; i++) {\n      this._patchesElement[i](element);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.connectedCallback(element);\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {{\n   *   visitedImports: (!Set<!Node>|undefined),\n   *   upgrade: (!function(!Element)|undefined),\n   * }=} options\n   */\n  patchAndUpgradeTree(root, options = {}) {\n    const visitedImports = options.visitedImports || new Set();\n    const upgrade = options.upgrade || (element => this.upgradeElement(element));\n\n    const elements = [];\n\n    const gatherElements = element => {\n      if (element.localName === 'link' && element.getAttribute('rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof Node) {\n          importNode.__CE_isImportDocument = true;\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        }\n\n        if (importNode && importNode.readyState === 'complete') {\n          importNode.__CE_documentLoadHandled = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          element.addEventListener('load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            clonedVisitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, {visitedImports: clonedVisitedImports, upgrade});\n          });\n        }\n      } else {\n        elements.push(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n    if (this._hasPatches) {\n      for (let i = 0; i < elements.length; i++) {\n        this.patchElement(elements[i]);\n      }\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      upgrade(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    // Prevent elements created in documents without a browsing context from\n    // upgrading.\n    //\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#look-up-a-custom-element-definition\n    //   \"If document does not have a browsing context, return null.\"\n    //\n    // https://html.spec.whatwg.org/multipage/window-object.html#dom-document-defaultview\n    //   \"The defaultView IDL attribute of the Document interface, on getting,\n    //   must return this Document's browsing context's WindowProxy object, if\n    //   this Document has an associated browsing context, or null otherwise.\"\n    const ownerDocument = element.ownerDocument;\n    if (\n      !ownerDocument.defaultView &&\n      !(ownerDocument.__CE_isImportDocument && ownerDocument.__CE_hasRegistry)\n    ) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructorFunction;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = element.getAttribute(name);\n        if (value !== null) {\n          this.attributeChangedCallback(element, name, null, value, null);\n        }\n      }\n    }\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (this._document.readyState === 'loading') {\n      this._observer = new MutationObserver(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      this._observer.observe(this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = this._document.readyState;\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = mutations[i].addedNodes;\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport DocumentConstructionObserver from './DocumentConstructionObserver.js';\nimport Deferred from './Deferred.js';\nimport * as Utilities from './Utilities.js';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<!CustomElementDefinition>}\n     */\n    this._pendingDefinitions = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructorFunction: constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._internals.setDefinition(localName, definition);\n    this._pendingDefinitions.push(definition);\n\n    // If we've already called the flush callback and it hasn't called back yet,\n    // don't call it again.\n    if (!this._flushPending) {\n      this._flushPending = true;\n      this._flushCallback(() => this._flush());\n    }\n  }\n\n  upgrade(element) {\n    this._internals.patchAndUpgradeTree(element);\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n    this._flushPending = false;\n\n    const pendingDefinitions = this._pendingDefinitions;\n\n    /**\n     * Unupgraded elements with definitions that were defined *before* the last\n     * flush, in document order.\n     * @type {!Array<!HTMLElement>}\n     */\n    const elementsWithStableDefinitions = [];\n\n    /**\n     * A map from `localName`s of definitions that were defined *after* the last\n     * flush to unupgraded elements matching that definition, in document order.\n     * @type {!Map<string, !Array<!HTMLElement>>}\n     */\n    const elementsWithPendingDefinitions = new Map();\n    for (let i = 0; i < pendingDefinitions.length; i++) {\n      elementsWithPendingDefinitions.set(pendingDefinitions[i].localName, []);\n    }\n\n    this._internals.patchAndUpgradeTree(document, {\n      upgrade: element => {\n        // Ignore the element if it has already upgraded or failed to upgrade.\n        if (element.__CE_state !== undefined) return;\n\n        const localName = element.localName;\n\n        // If there is an applicable pending definition for the element, add the\n        // element to the list of elements to be upgraded with that definition.\n        const pendingElements = elementsWithPendingDefinitions.get(localName);\n        if (pendingElements) {\n          pendingElements.push(element);\n        // If there is *any other* applicable definition for the element, add it\n        // to the list of elements with stable definitions that need to be upgraded.\n        } else if (this._internals.localNameToDefinition(localName)) {\n          elementsWithStableDefinitions.push(element);\n        }\n      },\n    });\n\n    // Upgrade elements with 'stable' definitions first.\n    for (let i = 0; i < elementsWithStableDefinitions.length; i++) {\n      this._internals.upgradeElement(elementsWithStableDefinitions[i]);\n    }\n\n    // Upgrade elements with 'pending' definitions in the order they were defined.\n    while (pendingDefinitions.length > 0) {\n      const definition = pendingDefinitions.shift();\n      const localName = definition.localName;\n\n      // Attempt to upgrade all applicable elements.\n      const pendingUpgradableElements = elementsWithPendingDefinitions.get(definition.localName);\n      for (let i = 0; i < pendingUpgradableElements.length; i++) {\n        this._internals.upgradeElement(pendingUpgradableElements[i]);\n      }\n\n      // Resolve any promises created by `whenDefined` for the definition.\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructorFunction;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && !this._pendingDefinitions.some(d => d.localName === localName)) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['upgrade'] = CustomElementRegistry.prototype.upgrade;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nexport default {\n  Document_createElement: window.Document.prototype.createElement,\n  Document_createElementNS: window.Document.prototype.createElementNS,\n  Document_importNode: window.Document.prototype.importNode,\n  Document_prepend: window.Document.prototype['prepend'],\n  Document_append: window.Document.prototype['append'],\n  DocumentFragment_prepend: window.DocumentFragment.prototype['prepend'],\n  DocumentFragment_append: window.DocumentFragment.prototype['append'],\n  Node_cloneNode: window.Node.prototype.cloneNode,\n  Node_appendChild: window.Node.prototype.appendChild,\n  Node_insertBefore: window.Node.prototype.insertBefore,\n  Node_removeChild: window.Node.prototype.removeChild,\n  Node_replaceChild: window.Node.prototype.replaceChild,\n  Node_textContent: Object.getOwnPropertyDescriptor(window.Node.prototype, 'textContent'),\n  Element_attachShadow: window.Element.prototype['attachShadow'],\n  Element_innerHTML: Object.getOwnPropertyDescriptor(window.Element.prototype, 'innerHTML'),\n  Element_getAttribute: window.Element.prototype.getAttribute,\n  Element_setAttribute: window.Element.prototype.setAttribute,\n  Element_removeAttribute: window.Element.prototype.removeAttribute,\n  Element_getAttributeNS: window.Element.prototype.getAttributeNS,\n  Element_setAttributeNS: window.Element.prototype.setAttributeNS,\n  Element_removeAttributeNS: window.Element.prototype.removeAttributeNS,\n  Element_insertAdjacentElement: window.Element.prototype['insertAdjacentElement'],\n  Element_insertAdjacentHTML: window.Element.prototype['insertAdjacentHTML'],\n  Element_prepend: window.Element.prototype['prepend'],\n  Element_append: window.Element.prototype['append'],\n  Element_before: window.Element.prototype['before'],\n  Element_after: window.Element.prototype['after'],\n  Element_replaceWith: window.Element.prototype['replaceWith'],\n  Element_remove: window.Element.prototype['remove'],\n  HTMLElement: window.HTMLElement,\n  HTMLElement_innerHTML: Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, 'innerHTML'),\n  HTMLElement_insertAdjacentElement: window.HTMLElement.prototype['insertAdjacentElement'],\n  HTMLElement_insertAdjacentHTML: window.HTMLElement.prototype['insertAdjacentHTML'],\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      const constructor = /** @type {!Function} */ (this.constructor);\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = /** @type {!HTMLElement} */ (Native.Document_createElement.call(document, definition.localName));\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patchElement(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      const toConstructElement = /** @type {!HTMLElement} */ (element);\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(toConstructElement, constructor.prototype);\n      internals.patchElement(toConstructElement);\n\n      return toConstructElement;\n    }\n\n    HTMLElement.prototype = Native.HTMLElement.prototype;\n    // Safari 9 has `writable: false` on the propertyDescriptor\n    // Make it writable so that TypeScript can patch up the\n    // constructor in the ES5 compiled code.\n    Object.defineProperty(HTMLElement.prototype, 'constructor', {\n      writable: true,\n      configurable: true,\n      enumerable: false,\n      value: HTMLElement\n    });\n\n    return HTMLElement;\n  })();\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n * @extends AlreadyConstructedMarkerType\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {!function(...(!Node|string))} builtInMethod\n   * @return {!function(...(!Node|string))}\n   */\n  function appendPrependPatch(builtInMethod) {\n    return /** @this {!Node} */ function(...nodes) {\n      /**\n       * A copy of `nodes`, with any DocumentFragment replaced by its children.\n       * @type {!Array<!Node>}\n       */\n      const flattenedNodes = [];\n\n      /**\n       * Elements in `nodes` that were connected before this call.\n       * @type {!Array<!Node>}\n       */\n      const connectedElements = [];\n\n      for (var i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n\n        if (node instanceof Element && Utilities.isConnected(node)) {\n          connectedElements.push(node);\n        }\n\n        if (node instanceof DocumentFragment) {\n          for (let child = node.firstChild; child; child = child.nextSibling) {\n            flattenedNodes.push(child);\n          }\n        } else {\n          flattenedNodes.push(node);\n        }\n      }\n\n      builtInMethod.apply(this, nodes);\n\n      for (let i = 0; i < connectedElements.length; i++) {\n        internals.disconnectTree(connectedElements[i]);\n      }\n\n      if (Utilities.isConnected(this)) {\n        for (let i = 0; i < flattenedNodes.length; i++) {\n          const node = flattenedNodes[i];\n          if (node instanceof Element) {\n            internals.connectTree(node);\n          }\n        }\n      }\n    };\n  }\n\n  if (builtIn.prepend !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'prepend', appendPrependPatch(builtIn.prepend));\n  }\n\n  if (builtIn.append !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'append', appendPrependPatch(builtIn.append));\n  }\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport CustomElementRegistry from './CustomElementRegistry.js';\n\nimport PatchHTMLElement from './Patch/HTMLElement.js';\nimport PatchDocument from './Patch/Document.js';\nimport PatchDocumentFragment from './Patch/DocumentFragment.js';\nimport PatchNode from './Patch/Node.js';\nimport PatchElement from './Patch/Element.js';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchDocumentFragment(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructorFunction)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElement.call(this, localName));\n      internals.patchElement(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = /** @type {!Node} */ (Native.Document_importNode.call(this, node, !!deep));\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructorFunction)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElementNS.call(this, namespace, localName));\n      internals.patchElement(result);\n      return result;\n    });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: Native.Document_prepend,\n    append: Native.Document_append,\n  });\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport Native from './Native.js';\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  PatchParentNode(internals, DocumentFragment.prototype, {\n    prepend: Native.DocumentFragment_prepend,\n    append: Native.DocumentFragment_append,\n  });\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_appendChild.call(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_appendChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = Native.Node_cloneNode.call(this, !!deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!this.ownerDocument.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_removeChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(nodeToInsert.childNodes);\n        const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        let removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (this.firstChild) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          const childNodes = this.childNodes;\n          const childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (let i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n      },\n    });\n  }\n\n  if (Native.Node_textContent && Native.Node_textContent.get) {\n    patch_textContent(Node.prototype, Native.Node_textContent);\n  } else {\n    internals.addNodePatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          for (let i = 0; i < this.childNodes.length; i++) {\n            const childNode = this.childNodes[i];\n            if (childNode.nodeType === Node.COMMENT_NODE) {\n              continue;\n            }\n            parts.push(childNode.textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          while (this.firstChild) {\n            Native.Node_removeChild.call(this, this.firstChild);\n          }\n          // `textContent = null | undefined | ''` does not result in\n          // a TextNode childNode\n          if (assignedValue != null && assignedValue !== '') {\n            Native.Node_appendChild.call(this, document.createTextNode(assignedValue));\n          }\n        },\n      });\n    });\n  }\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\nimport PatchChildNode from './Interface/ChildNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (Native.Element_attachShadow) {\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = Native.Element_attachShadow.call(this, init);\n        internals.patchNode(shadowRoot);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const isConnected = Utilities.isConnected(this);\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        /** @type {!Array<!Element>|undefined} */\n        let removedElements = undefined;\n        if (isConnected) {\n          removedElements = [];\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this) {\n              removedElements.push(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (removedElements) {\n          for (let i = 0; i < removedElements.length; i++) {\n            const element = removedElements[i];\n            if (element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n  }\n\n  if (Native.Element_innerHTML && Native.Element_innerHTML.get) {\n    patch_innerHTML(Element.prototype, Native.Element_innerHTML);\n  } else if (Native.HTMLElement_innerHTML && Native.HTMLElement_innerHTML.get) {\n    patch_innerHTML(HTMLElement.prototype, Native.HTMLElement_innerHTML);\n  } else {\n    internals.addElementPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return /** @type {!Element} */ (\n                     Native.Node_cloneNode.call(this, true))\n              .innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          const isTemplate = (this.localName === 'template');\n          /** @type {!Node} */\n          const content = isTemplate ? (/** @type {!HTMLTemplateElement} */\n            (this)).content : this;\n          /** @type {!Element} */\n          const rawElement = Native.Document_createElementNS.call(document,\n              this.namespaceURI, this.localName);\n          rawElement.innerHTML = assignedValue;\n\n          while (content.childNodes.length > 0) {\n            Native.Node_removeChild.call(content, content.childNodes[0]);\n          }\n          const container = isTemplate ?\n              /** @type {!HTMLTemplateElement} */ (rawElement).content :\n              rawElement;\n          while (container.childNodes.length > 0) {\n            Native.Node_appendChild.call(content, container.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttribute.call(this, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_setAttribute.call(this, name, newValue);\n      newValue = Native.Element_getAttribute.call(this, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttribute.call(this, name);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_removeAttribute.call(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttributeNS.call(this, namespace, name);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_removeAttributeNS.call(this, namespace, name);\n      // In older browsers, `Element#getAttributeNS` may return the empty string\n      // instead of null if the attribute does not exist. For details, see;\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n      const newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      /**\n       * @this {Element}\n       * @param {string} position\n       * @param {!Element} element\n       * @return {?Element}\n       */\n      function(position, element) {\n        const wasConnected = Utilities.isConnected(element);\n        const insertedElement = /** @type {!Element} */\n          (baseMethod.call(this, position, element));\n\n        if (wasConnected) {\n          internals.disconnectTree(element);\n        }\n\n        if (Utilities.isConnected(insertedElement)) {\n          internals.connectTree(element);\n        }\n        return insertedElement;\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentElement) {\n    patch_insertAdjacentElement(HTMLElement.prototype, Native.HTMLElement_insertAdjacentElement);\n  } else if (Native.Element_insertAdjacentElement) {\n    patch_insertAdjacentElement(Element.prototype, Native.Element_insertAdjacentElement);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  function patch_insertAdjacentHTML(destination, baseMethod) {\n    /**\n     * Patches and upgrades all nodes which are siblings between `start`\n     * (inclusive) and `end` (exclusive). If `end` is `null`, then all siblings\n     * following `start` will be patched and upgraded.\n     * @param {!Node} start\n     * @param {?Node} end\n     */\n    function upgradeNodesInRange(start, end) {\n      const nodes = [];\n      for (let node = start; node !== end; node = node.nextSibling) {\n        nodes.push(node);\n      }\n      for (let i = 0; i < nodes.length; i++) {\n        internals.patchAndUpgradeTree(nodes[i]);\n      }\n    }\n\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentHTML',\n      /**\n       * @this {Element}\n       * @param {string} position\n       * @param {string} text\n       */\n      function(position, text) {\n        position = position.toLowerCase();\n\n        if (position === \"beforebegin\") {\n          const marker = this.previousSibling;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(marker || /** @type {!Node} */ (this.parentNode.firstChild), this);\n        } else if (position === \"afterbegin\") {\n          const marker = this.firstChild;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(/** @type {!Node} */ (this.firstChild), marker);\n        } else if (position === \"beforeend\") {\n          const marker = this.lastChild;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(marker || /** @type {!Node} */ (this.firstChild), null);\n        } else if (position === \"afterend\") {\n          const marker = this.nextSibling;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(/** @type {!Node} */ (this.nextSibling), marker);\n        } else {\n          throw new SyntaxError(`The value provided (${String(position)}) is ` +\n            \"not one of 'beforebegin', 'afterbegin', 'beforeend', or 'afterend'.\");\n        }\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentHTML) {\n    patch_insertAdjacentHTML(HTMLElement.prototype, Native.HTMLElement_insertAdjacentHTML);\n  } else if (Native.Element_insertAdjacentHTML) {\n    patch_insertAdjacentHTML(Element.prototype, Native.Element_insertAdjacentHTML);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentHTML` was not patched.');\n  }\n\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: Native.Element_prepend,\n    append: Native.Element_append,\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: Native.Element_before,\n    after: Native.Element_after,\n    replaceWith: Native.Element_replaceWith,\n    remove: Native.Element_remove,\n  });\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {!function(...(!Node|string))} builtInMethod\n   * @return {!function(...(!Node|string))}\n   */\n  function beforeAfterPatch(builtInMethod) {\n    return /** @this {!Node} */ function(...nodes) {\n      /**\n       * A copy of `nodes`, with any DocumentFragment replaced by its children.\n       * @type {!Array<!Node>}\n       */\n      const flattenedNodes = [];\n\n      /**\n       * Elements in `nodes` that were connected before this call.\n       * @type {!Array<!Node>}\n       */\n      const connectedElements = [];\n\n      for (var i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n\n        if (node instanceof Element && Utilities.isConnected(node)) {\n          connectedElements.push(node);\n        }\n\n        if (node instanceof DocumentFragment) {\n          for (let child = node.firstChild; child; child = child.nextSibling) {\n            flattenedNodes.push(child);\n          }\n        } else {\n          flattenedNodes.push(node);\n        }\n      }\n\n      builtInMethod.apply(this, nodes);\n\n      for (let i = 0; i < connectedElements.length; i++) {\n        internals.disconnectTree(connectedElements[i]);\n      }\n\n      if (Utilities.isConnected(this)) {\n        for (let i = 0; i < flattenedNodes.length; i++) {\n          const node = flattenedNodes[i];\n          if (node instanceof Element) {\n            internals.connectTree(node);\n          }\n        }\n      }\n    };\n  }\n\n  if (builtIn.before !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'before', beforeAfterPatch(builtIn.before));\n  }\n\n  if (builtIn.before !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'after', beforeAfterPatch(builtIn.after));\n  }\n\n  if (builtIn.replaceWith !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'replaceWith',\n      /**\n       * @param {...(!Node|string)} nodes\n       * @this {!Node}\n       */\n      function(...nodes) {\n        /**\n         * A copy of `nodes`, with any DocumentFragment replaced by its children.\n         * @type {!Array<!Node|string>}\n         */\n        const flattenedNodes = [];\n\n        /**\n         * Elements in `nodes` that were connected before this call.\n         * @type {!Array<!Node>}\n         */\n        const connectedElements = [];\n\n        for (var i = 0; i < nodes.length; i++) {\n          const node = nodes[i];\n\n          if (node instanceof Element && Utilities.isConnected(node)) {\n            connectedElements.push(node);\n          }\n\n          if (node instanceof DocumentFragment) {\n            for (let child = node.firstChild; child; child = child.nextSibling) {\n              flattenedNodes.push(child);\n            }\n          } else {\n            flattenedNodes.push(node);\n          }\n        }\n\n        const wasConnected = Utilities.isConnected(this);\n\n        builtIn.replaceWith.apply(this, nodes);\n\n        for (let i = 0; i < connectedElements.length; i++) {\n          internals.disconnectTree(connectedElements[i]);\n        }\n\n        if (wasConnected) {\n          internals.disconnectTree(this);\n          for (let i = 0; i < flattenedNodes.length; i++) {\n            const node = flattenedNodes[i];\n            if (node instanceof Element) {\n              internals.connectTree(node);\n            }\n          }\n        }\n      });\n    }\n\n  if (builtIn.remove !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'remove',\n      /** @this {!Node} */\n      function() {\n        const wasConnected = Utilities.isConnected(this);\n\n        builtIn.remove.call(this);\n\n        if (wasConnected) {\n          internals.disconnectTree(this);\n        }\n      });\n  }\n};\n"],"sourceRoot":""}